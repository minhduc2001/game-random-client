{"version":3,"file":"static/js/342.cab0cc93.chunk.js","mappings":"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","sources":["layouts/AsyncWrapper.tsx","pages/EditAudioBook.tsx"],"sourcesContent":["import { Alert } from 'antd';\nimport Spinner from '../components/Spinner';\n\nfunction AsyncWrapper(props: AsyncWrapperProps) {\n\tif (props.loading) {\n\t\treturn <Spinner />;\n\t} else if (props.error) {\n\t\treturn (\n\t\t\t<Alert showIcon message={JSON.stringify(props.error)} type='warning' />\n\t\t);\n\t} else if (props.fulfilled) {\n\t\treturn props.children;\n\t} else {\n\t\treturn <>Something has happen</>;\n\t}\n}\n\nAsyncWrapper.defaultValue = {\n\tloading: true,\n\tfulfilled: false,\n\terror: null,\n\tchildren: <></>,\n};\n\nexport default AsyncWrapper;\n","import {\n  DeleteOutlined,\n  PlusOutlined,\n  UploadOutlined,\n} from '@ant-design/icons';\nimport {\n  Button,\n  Cascader,\n  Checkbox,\n  Col,\n  DatePicker,\n  Form,\n  Input,\n  InputNumber,\n  Modal,\n  Radio,\n  Row,\n  Select,\n  Slider,\n  Spin,\n  Switch,\n  TreeSelect,\n  Upload,\n  UploadProps,\n  message,\n} from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport AsyncWrapper from '../layouts/AsyncWrapper';\nimport { RcFile, UploadFile } from 'antd/es/upload';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport AudioBookApi from '../api/audioBookApi';\nimport { toast } from 'react-toastify';\nimport { toastOption } from '../configs/notification.config';\nimport GenreApi from '../api/genreApi';\nimport ReactPlayer from 'react-player';\nimport { useAppDispatch, useAppSelector } from '../redux/hooks';\nimport {\n  saveAudioBook,\n  updateAudioBook,\n} from '../redux/features/audiobookSlice';\nimport AuthorApi from '../api/authorApi';\nimport VideoPlayer from '../components/VideoPlayer';\n\nimport videojs from 'video.js';\nimport { RootState } from '../redux/store';\n\nconst { RangePicker } = DatePicker;\nconst { TextArea } = Input;\n\nfunction EditAudioBook() {\n  const [componentDisabled, setComponentDisabled] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState(null);\n  const [audioFileURL, setAudioFileURL] = useState<string | null>(null);\n  const [audioFile, setAudioFile] = useState<any>([]);\n  const [searchedAuthors, setSearchedAuthors] = useState<any>([]);\n  const [selectedAuthor, setSelectedAuthor] = useState('');\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\n  const [title, setTitle] = useState<string>('Thêm nội dung');\n  const [audioBook, setAudioBook] = useState<any>(null);\n  const [genres, setGenres] = useState<IGenre[]>([]);\n  const [spinning, setSpinning] = useState<boolean | undefined>(false);\n\n  let { id } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (id) {\n      if (Number(id)) {\n        setTitle('Sửa nội dung');\n        setComponentDisabled(true);\n        fetchData(Number(id));\n        fetchDataGenre();\n      } else navigate('/404');\n    } else {\n      fetchDataGenre();\n      setLoading(false);\n      setError(null);\n    }\n  }, [id]);\n\n  const access_token = JSON.parse(localStorage.getItem('token') ?? '');\n\n  console.log(access_token);\n\n  const fetchData = async (id: number) => {\n    setLoading(true);\n    const resp: any = await AudioBookApi.getAudioBook(id);\n    // const respGenre = await GenreApi.getListGenre({});\n    if (resp.success) {\n      setAudioBook(resp.data);\n      if (resp.data?.author) {\n        setSearchedAuthors(resp.data?.author);\n        setSelectedAuthor(resp.data?.author?.[0]?.id);\n      }\n\n      if (resp.data?.image) {\n        setFileList([\n          {\n            uid: '-1',\n            name: 'image.png',\n            status: 'done',\n            url: resp.data.image,\n          },\n        ]);\n      }\n      if (resp.data?.url) {\n        setAudioFileURL(resp.data?.url);\n      }\n      setLoading(false);\n      // console.log(audioBook);\n    } else {\n      toast.error(resp.message, toastOption);\n      setError(resp.message);\n    }\n    // if (respGenre.success) {\n    // \tsetGenres(respGenre.data?.results);\n    // \tsetLoading(false);\n    // }\n  };\n\n  const fetchDataGenre = async () => {\n    setLoading(true);\n    const respGenre = await GenreApi.getListGenre({});\n    if (respGenre.success) {\n      setGenres(respGenre.data?.results);\n      setLoading(false);\n    }\n  };\n\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n\n  const tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n  };\n\n  const options = [\n    { label: 'free', value: '1' },\n    { label: 'vip', value: '0' },\n  ];\n\n  const onFinish = (values: any) => {\n    setSpinning(true);\n    // Xử lý khi form được submit\n    values.audio = audioFile;\n    values.image = values.image.file;\n    delete values.selectedAuthor;\n    delete values.inputAuthor;\n    values.author = [selectedAuthor];\n\n    const formData = new FormData();\n    Object.keys(values).map((key) => {\n      if (key !== 'audio' && key !== 'image') formData.append(key, values[key]);\n    });\n    if (audioFile) formData.append('audio', audioFile);\n    if (fileList) formData.append('image', fileList[0].originFileObj as Blob);\n\n    if (title == 'Sửa nội dung') {\n      dispatch(updateAudioBook({ id: id, formData: formData }))\n        .unwrap()\n        .then((originalPromiseResult) => {\n          console.log(originalPromiseResult);\n          navigate('/audio-book');\n        })\n        .catch((rejectedValueOrSerializedError) => {\n          setSpinning(false);\n          toast.error(rejectedValueOrSerializedError.message, toastOption);\n        });\n    } else {\n      dispatch(saveAudioBook(formData))\n        .unwrap()\n        .then((originalPromiseResult) => {\n          console.log(originalPromiseResult);\n          navigate('/audio-book');\n        })\n        .catch((rejectedValueOrSerializedError) => {\n          setSpinning(false);\n          // handle error here\n          toast.error(rejectedValueOrSerializedError.message, toastOption);\n        });\n    }\n  };\n\n  const handleAudioChange = (info: any) => {\n    const audioURL = URL.createObjectURL(info.file.originFileObj);\n    setAudioFileURL(audioURL);\n\n    setAudioFile(info.file.originFileObj);\n  };\n\n  const handleSearchAuthor = async (value: any) => {\n    const authors = await AuthorApi.getListAuthor({ search: value });\n    setSearchedAuthors(authors.data?.results);\n  };\n\n  const onPreviewImage = async (file: UploadFile<any>) => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj as Blob);\n        reader.onload = () => resolve(reader.result as string);\n      });\n    }\n    const image: any = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow?.document.write(image.outerHTML);\n  };\n  const onChangeImage: UploadProps['onChange'] = ({\n    fileList: newFileList,\n  }) => {\n    setFileList(newFileList);\n  };\n\n  const onRemoveAudio = (e: any) => {\n    setAudioFileURL('');\n  };\n\n  const handleBtnSubmit = (e: any) => {\n    const text = e.target.innerText;\n    if (text == 'Sửa') {\n      e.preventDefault();\n      setComponentDisabled(false);\n    } else if (text == 'Lưu') {\n    } else if (text == 'Cập nhật') {\n    }\n  };\n\n  const playerRef = React.useRef(null);\n\n  const videoJsOptions = {\n    autoplay: true,\n    controls: true,\n    responsive: true,\n    fluid: true,\n    sources: [\n      {\n        src: audioFileURL,\n        // type: 'video/mp4',\n      },\n    ],\n  };\n\n  const handlePlayerReady = (player: any) => {\n    playerRef.current = player;\n\n    // You can handle player events here, for example:\n    player.on('waiting', () => {\n      videojs.log('player is waiting');\n    });\n\n    player.on('dispose', () => {\n      //   videojs.log('player will dispose');\n    });\n  };\n\n  return (\n    <AsyncWrapper\n      loading={loading}\n      error={error}\n      fulfilled={id ? Boolean(audioBook) : true}\n    >\n      <div className='text-center w-full h-[40px] font-bold text-xl'>\n        {title}\n      </div>\n      <Spin tip='Loading...' size='large' spinning={spinning}>\n        <Form\n          {...layout}\n          onFinish={onFinish}\n          disabled={componentDisabled}\n          initialValues={{\n            ...audioBook,\n            genre: audioBook?.genre?.id,\n            author: audioBook?.author[0]?.id,\n            free: !audioBook?.free,\n          }}\n        >\n          <Row gutter={16}>\n            {/* Phần trái cho điền thông tin về sách */}\n            <Col span={12}>\n              <Form.Item\n                label='Tên sách'\n                name='title'\n                rules={[{ required: true, message: 'Vui lòng nhập tên sách!' }]}\n              >\n                <Input />\n              </Form.Item>\n              <Form.Item\n                label='Thể loại'\n                name='genre'\n                rules={[{ required: true, message: 'Vui lòng chọn thể loại!' }]}\n              >\n                <Select>\n                  {genres?.map((genre: IGenre, index: number) => {\n                    return (\n                      <Select.Option key={index} value={genre?.id}>\n                        {genre?.name}\n                      </Select.Option>\n                    );\n                  })}\n                </Select>\n              </Form.Item>\n\n              <Form.Item\n                label='Gói'\n                name='free'\n                rules={[{ required: true, message: 'Vui lòng chọn gói!' }]}\n              >\n                <Checkbox checked={!audioBook?.free ?? false}>Vip</Checkbox>\n              </Form.Item>\n\n              <Row\n                gutter={16}\n                style={{ display: 'flex', justifyContent: 'space-between' }}\n              >\n                <Col span={24}>\n                  <Form.Item\n                    label='Tác giả'\n                    name='inputAuthor'\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                  >\n                    <Input\n                      onChange={(e) => handleSearchAuthor(e.target.value)}\n                      placeholder='Nhập tên tác giả'\n                    />\n                  </Form.Item>\n                </Col>\n                <Col span={24}>\n                  <Form.Item\n                    label='Chọn tác giả'\n                    name='author'\n                    rules={[\n                      { required: true, message: 'Vui lòng nhập tác giả!' },\n                    ]}\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                  >\n                    <Select\n                      showSearch\n                      value={selectedAuthor}\n                      onChange={(value) => {\n                        setSelectedAuthor(value);\n                      }}\n                      notFoundContent={null}\n                    >\n                      {searchedAuthors.map((author: any) => (\n                        <Select.Option key={author.id} value={author.id}>\n                          {author.name}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Form.Item\n                label='Năm xuất bản'\n                name='publishDate'\n                rules={[\n                  { required: true, message: 'Vui lòng nhập năm sản xuất!' },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item label='Mô tả' name='desc'>\n                <TextArea rows={4} />\n              </Form.Item>\n              {/* Thêm các trường thông tin khác về sách tại đây */}\n            </Col>\n\n            {/* Phần phải cho upload ảnh và âm thanh */}\n            <Col span={12}>\n              <Form.Item\n                label='Ảnh bìa sách'\n                name='image'\n                rules={[{ required: true, message: 'Bạn cần tải lên ảnh' }]}\n              >\n                <Upload\n                  action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\n                  listType='picture-card'\n                  defaultFileList={fileList}\n                  onChange={onChangeImage}\n                  onPreview={onPreviewImage}\n                >\n                  {fileList.length < 1 && (\n                    <div>\n                      <PlusOutlined />\n                      <div style={{ marginTop: 8 }}>Upload</div>\n                    </div>\n                  )}\n                </Upload>\n              </Form.Item>\n              <Form.Item\n                label='File âm thanh'\n                name='audio'\n                rules={[\n                  {\n                    required: audioFileURL ? false : true,\n                    message: 'Bạn cần tải lên âm thanh!',\n                  },\n                ]}\n              >\n                <div className='flex'>\n                  <Upload\n                    name='audioFile'\n                    action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\n                    accept='.mp3'\n                    defaultFileList={audioFile}\n                    showUploadList={false}\n                    onChange={handleAudioChange}\n                  >\n                    <Button\n                      icon={<UploadOutlined />}\n                      disabled={Boolean(audioFileURL)}\n                    >\n                      Tải lên file âm thanh\n                    </Button>\n                  </Upload>\n                  <Button\n                    icon={<DeleteOutlined />}\n                    disabled={!Boolean(audioFileURL) || componentDisabled}\n                    onClick={onRemoveAudio}\n                    className='ml-[20px]'\n                  >\n                    Xóa âm thanh\n                  </Button>\n                </div>\n              </Form.Item>\n              {/* Thêm các trường upload khác tại đây */}\n              {/* Hiển thị trình phát âm thanh */}\n              {audioFileURL && (\n                // <Row gutter={16}>\n                // \t<Col span={24} offset={1}>\n                <div className='w-full'>\n                  {/* <audio src={audioFileURL} controls className='w-full' /> */}\n                  <ReactPlayer\n                    url={audioFileURL}\n                    controls\n                    width='100%'\n                    height='40px'\n                    config={{\n                      file: {\n                        hlsOptions: {\n                          forceHLS: true,\n                          debug: false,\n                          xhrSetup: function (xhr: any, url: any) {\n                            xhr.setRequestHeader(\n                              'Authorization',\n                              `Bearer ${access_token}`,\n                            );\n                          },\n                        },\n                      },\n                    }}\n                  />\n                  {/* <VideoPlayer\n                    m3u8Url={audioFileURL}\n                    token=''\n                    options={videoJsOptions}\n                    onReady={handlePlayerReady}\n                  ></VideoPlayer> */}\n                </div>\n\n                // \t</Col>\n                // </Row>\n              )}\n            </Col>\n          </Row>\n\n          <Form.Item {...tailLayout}>\n            <Button\n              htmlType='submit'\n              onClick={handleBtnSubmit}\n              disabled={false}\n            >\n              {title == 'Thêm nội dung'\n                ? 'Lưu'\n                : componentDisabled\n                ? 'Sửa'\n                : 'Cập nhật'}\n            </Button>\n          </Form.Item>\n        </Form>\n      </Spin>\n    </AsyncWrapper>\n  );\n}\n\nexport default EditAudioBook;\n"],"names":["AsyncWrapper","props","loading","_jsx","Spinner","error","Alert","showIcon","message","JSON","stringify","type","fulfilled","children","_Fragment","defaultValue","TextArea","DatePicker","RangePicker","Input","_localStorage$getItem","_audioBook$genre","_audioBook$author$","_audioBook$free","_useState","useState","_useState2","_slicedToArray","componentDisabled","setComponentDisabled","_useState3","_useState4","setLoading","_useState5","_useState6","setError","_useState7","_useState8","audioFileURL","setAudioFileURL","_useState9","_useState10","audioFile","setAudioFile","_useState11","_useState12","searchedAuthors","setSearchedAuthors","_useState13","_useState14","selectedAuthor","setSelectedAuthor","_useState15","_useState16","fileList","setFileList","_useState17","_useState18","title","setTitle","_useState19","_useState20","audioBook","setAudioBook","_useState21","_useState22","genres","setGenres","_useState23","_useState24","spinning","setSpinning","id","useParams","navigate","useNavigate","dispatch","useAppDispatch","useEffect","Number","fetchData","fetchDataGenre","access_token","parse","localStorage","getItem","console","log","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","_resp$data","_resp$data4","_resp$data5","_resp$data2","_resp$data3","_resp$data3$author","_resp$data3$author$","_resp$data6","wrap","_context","prev","next","AudioBookApi","getAudioBook","sent","success","data","author","image","uid","name","status","url","toast","toastOption","stop","_x","apply","arguments","_ref2","_callee2","respGenre","_respGenre$data","_context2","GenreApi","getListGenre","results","handleSearchAuthor","_ref3","_callee3","value","_authors$data","authors","_context3","AuthorApi","getListAuthor","search","_x2","onPreviewImage","_ref4","_callee4","file","src","imgWindow","_context4","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","Image","window","open","document","write","outerHTML","_x3","React","_jsxs","Boolean","className","Spin","tip","size","Form","_objectSpread","labelCol","span","wrapperCol","onFinish","values","audio","inputAuthor","formData","FormData","Object","keys","map","key","append","updateAudioBook","unwrap","then","originalPromiseResult","catch","rejectedValueOrSerializedError","saveAudioBook","disabled","initialValues","genre","free","Row","gutter","Col","Item","label","rules","required","Select","index","Option","Checkbox","checked","style","display","justifyContent","onChange","e","target","placeholder","showSearch","notFoundContent","rows","Upload","action","listType","defaultFileList","_ref5","newFileList","onPreview","length","PlusOutlined","marginTop","accept","showUploadList","info","audioURL","URL","createObjectURL","Button","icon","UploadOutlined","DeleteOutlined","onClick","ReactPlayer","controls","width","height","config","hlsOptions","forceHLS","debug","xhrSetup","xhr","setRequestHeader","concat","offset","htmlType","text","innerText","preventDefault"],"sourceRoot":""}