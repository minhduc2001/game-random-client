{"version":3,"file":"static/js/507.670a4315.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","../node_modules/@ant-design/icons/es/icons/PlusOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/UploadOutlined.js","../node_modules/@ant-design/icons/es/icons/UploadOutlined.js","../node_modules/@videojs/xhr/lib/http-handler.js","../node_modules/@videojs/xhr/lib/index.js","../node_modules/@xmldom/xmldom/lib/conventions.js","../node_modules/@xmldom/xmldom/lib/dom-parser.js","../node_modules/@xmldom/xmldom/lib/dom.js","../node_modules/@xmldom/xmldom/lib/entities.js","../node_modules/@xmldom/xmldom/lib/index.js","../node_modules/@xmldom/xmldom/lib/sax.js","../node_modules/deepmerge/dist/cjs.js","../node_modules/global/document.js","../node_modules/global/window.js","../node_modules/is-function/index.js","../node_modules/keycode/index.js","../node_modules/load-script/index.js","../node_modules/memoize-one/dist/memoize-one.esm.js","../node_modules/mux.js/lib/tools/parse-sidx.js","../node_modules/mux.js/lib/utils/clock.js","../node_modules/mux.js/lib/utils/numbers.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-fast-compare/index.js","../node_modules/react-player/lib/Player.js","../node_modules/react-player/lib/ReactPlayer.js","../node_modules/react-player/lib/index.js","../node_modules/react-player/lib/patterns.js","../node_modules/react-player/lib/players/index.js","../node_modules/react-player/lib/props.js","../node_modules/react-player/lib/utils.js","../node_modules/safe-json-parse/tuple.js","../node_modules/url-toolkit/src/url-toolkit.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@videojs/vhs-utils/es/resolve-url.js","../node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/stream.js","../node_modules/m3u8-parser/node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","../node_modules/m3u8-parser/dist/m3u8-parser.es.js","../node_modules/@videojs/vhs-utils/es/codecs.js","../node_modules/@videojs/vhs-utils/es/media-types.js","../node_modules/@videojs/vhs-utils/es/byte-helpers.js","../node_modules/@videojs/vhs-utils/es/decode-b64-to-uint8-array.js","../node_modules/@videojs/vhs-utils/es/mp4-helpers.js","../node_modules/mpd-parser/dist/mpd-parser.es.js","../node_modules/@videojs/vhs-utils/es/media-groups.js","../node_modules/@videojs/vhs-utils/es/id3-helpers.js","../node_modules/@videojs/vhs-utils/es/opus-helpers.js","../node_modules/@videojs/vhs-utils/es/ebml-helpers.js","../node_modules/@videojs/vhs-utils/es/nal-helpers.js","../node_modules/@videojs/vhs-utils/es/containers.js","../node_modules/video.js/dist/video.es.js","../node_modules/videojs-vtt.js/lib/browser-index.js","../node_modules/videojs-vtt.js/lib/vtt.js","../node_modules/videojs-vtt.js/lib/vttcue.js","../node_modules/videojs-vtt.js/lib/vttregion.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DeleteOutlined.displayName = 'DeleteOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  PlusOutlined.displayName = 'PlusOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);","// This icon file is generated automatically.\nvar UploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"upload\", \"theme\": \"outlined\" };\nexport default UploadOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/UploadOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UploadOutlined = function UploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UploadOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UploadOutlined.displayName = 'UploadOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UploadOutlined);","\"use strict\";\n\nvar window = require('global/window');\n\nvar httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n  if (decodeResponseBody === void 0) {\n    decodeResponseBody = false;\n  }\n\n  return function (err, response, responseBody) {\n    // if the XHR failed, return that error\n    if (err) {\n      callback(err);\n      return;\n    } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n\n    if (response.statusCode >= 400 && response.statusCode <= 599) {\n      var cause = responseBody;\n\n      if (decodeResponseBody) {\n        if (window.TextDecoder) {\n          var charset = getCharset(response.headers && response.headers['content-type']);\n\n          try {\n            cause = new TextDecoder(charset).decode(responseBody);\n          } catch (e) {}\n        } else {\n          cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n        }\n      }\n\n      callback({\n        cause: cause\n      });\n      return;\n    } // otherwise, request succeeded\n\n\n    callback(null, responseBody);\n  };\n};\n\nfunction getCharset(contentTypeHeader) {\n  if (contentTypeHeader === void 0) {\n    contentTypeHeader = '';\n  }\n\n  return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n    var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n\n    if (type.trim() === 'charset') {\n      return value.trim();\n    }\n\n    return charset;\n  }, 'utf-8');\n}\n\nmodule.exports = httpResponseHandler;","\"use strict\";\n\nvar window = require(\"global/window\");\n\nvar _extends = require(\"@babel/runtime/helpers/extends\");\n\nvar isFunction = require('is-function');\n\ncreateXHR.httpHandler = require('./http-handler.js');\n/**\n * @license\n * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n * Copyright (c) 2014 David Björklund\n * Available under the MIT license\n * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n */\n\nvar parseHeaders = function parseHeaders(headers) {\n  var result = {};\n\n  if (!headers) {\n    return result;\n  }\n\n  headers.trim().split('\\n').forEach(function (row) {\n    var index = row.indexOf(':');\n    var key = row.slice(0, index).trim().toLowerCase();\n    var value = row.slice(index + 1).trim();\n\n    if (typeof result[key] === 'undefined') {\n      result[key] = value;\n    } else if (Array.isArray(result[key])) {\n      result[key].push(value);\n    } else {\n      result[key] = [result[key], value];\n    }\n  });\n  return result;\n};\n\nmodule.exports = createXHR; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = createXHR;\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop;\ncreateXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window.XDomainRequest;\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n  createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n    options = initParams(uri, options, callback);\n    options.method = method.toUpperCase();\n    return _createXHR(options);\n  };\n});\n\nfunction forEachArray(array, iterator) {\n  for (var i = 0; i < array.length; i++) {\n    iterator(array[i]);\n  }\n}\n\nfunction isEmpty(obj) {\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) return false;\n  }\n\n  return true;\n}\n\nfunction initParams(uri, options, callback) {\n  var params = uri;\n\n  if (isFunction(options)) {\n    callback = options;\n\n    if (typeof uri === \"string\") {\n      params = {\n        uri: uri\n      };\n    }\n  } else {\n    params = _extends({}, options, {\n      uri: uri\n    });\n  }\n\n  params.callback = callback;\n  return params;\n}\n\nfunction createXHR(uri, options, callback) {\n  options = initParams(uri, options, callback);\n  return _createXHR(options);\n}\n\nfunction _createXHR(options) {\n  if (typeof options.callback === \"undefined\") {\n    throw new Error(\"callback argument missing\");\n  }\n\n  var called = false;\n\n  var callback = function cbOnce(err, response, body) {\n    if (!called) {\n      called = true;\n      options.callback(err, response, body);\n    }\n  };\n\n  function readystatechange() {\n    if (xhr.readyState === 4) {\n      setTimeout(loadFunc, 0);\n    }\n  }\n\n  function getBody() {\n    // Chrome with requestType=blob throws errors arround when even testing access to responseText\n    var body = undefined;\n\n    if (xhr.response) {\n      body = xhr.response;\n    } else {\n      body = xhr.responseText || getXml(xhr);\n    }\n\n    if (isJson) {\n      try {\n        body = JSON.parse(body);\n      } catch (e) {}\n    }\n\n    return body;\n  }\n\n  function errorFunc(evt) {\n    clearTimeout(timeoutTimer);\n\n    if (!(evt instanceof Error)) {\n      evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n    }\n\n    evt.statusCode = 0;\n    return callback(evt, failureResponse);\n  } // will load the data & process the response in a special response object\n\n\n  function loadFunc() {\n    if (aborted) return;\n    var status;\n    clearTimeout(timeoutTimer);\n\n    if (options.useXDR && xhr.status === undefined) {\n      //IE8 CORS GET successful response doesn't have a status field, but body is fine\n      status = 200;\n    } else {\n      status = xhr.status === 1223 ? 204 : xhr.status;\n    }\n\n    var response = failureResponse;\n    var err = null;\n\n    if (status !== 0) {\n      response = {\n        body: getBody(),\n        statusCode: status,\n        method: method,\n        headers: {},\n        url: uri,\n        rawRequest: xhr\n      };\n\n      if (xhr.getAllResponseHeaders) {\n        //remember xhr can in fact be XDR for CORS in IE\n        response.headers = parseHeaders(xhr.getAllResponseHeaders());\n      }\n    } else {\n      err = new Error(\"Internal XMLHttpRequest Error\");\n    }\n\n    return callback(err, response, response.body);\n  }\n\n  var xhr = options.xhr || null;\n\n  if (!xhr) {\n    if (options.cors || options.useXDR) {\n      xhr = new createXHR.XDomainRequest();\n    } else {\n      xhr = new createXHR.XMLHttpRequest();\n    }\n  }\n\n  var key;\n  var aborted;\n  var uri = xhr.url = options.uri || options.url;\n  var method = xhr.method = options.method || \"GET\";\n  var body = options.body || options.data;\n  var headers = xhr.headers = options.headers || {};\n  var sync = !!options.sync;\n  var isJson = false;\n  var timeoutTimer;\n  var failureResponse = {\n    body: undefined,\n    headers: {},\n    statusCode: 0,\n    method: method,\n    url: uri,\n    rawRequest: xhr\n  };\n\n  if (\"json\" in options && options.json !== false) {\n    isJson = true;\n    headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n    if (method !== \"GET\" && method !== \"HEAD\") {\n      headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      body = JSON.stringify(options.json === true ? body : options.json);\n    }\n  }\n\n  xhr.onreadystatechange = readystatechange;\n  xhr.onload = loadFunc;\n  xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n  xhr.onprogress = function () {// IE must die\n  };\n\n  xhr.onabort = function () {\n    aborted = true;\n  };\n\n  xhr.ontimeout = errorFunc;\n  xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n  if (!sync) {\n    xhr.withCredentials = !!options.withCredentials;\n  } // Cannot set timeout with sync request\n  // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n  // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n\n  if (!sync && options.timeout > 0) {\n    timeoutTimer = setTimeout(function () {\n      if (aborted) return;\n      aborted = true; //IE9 may still call readystatechange\n\n      xhr.abort(\"timeout\");\n      var e = new Error(\"XMLHttpRequest timeout\");\n      e.code = \"ETIMEDOUT\";\n      errorFunc(e);\n    }, options.timeout);\n  }\n\n  if (xhr.setRequestHeader) {\n    for (key in headers) {\n      if (headers.hasOwnProperty(key)) {\n        xhr.setRequestHeader(key, headers[key]);\n      }\n    }\n  } else if (options.headers && !isEmpty(options.headers)) {\n    throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n  }\n\n  if (\"responseType\" in options) {\n    xhr.responseType = options.responseType;\n  }\n\n  if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n    options.beforeSend(xhr);\n  } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n  // XMLHttpRequest spec says to pass null as body to indicate no body\n  // See https://github.com/naugtur/xhr/issues/100.\n\n\n  xhr.send(body || null);\n  return xhr;\n}\n\nfunction getXml(xhr) {\n  // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n  // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n  try {\n    if (xhr.responseType === \"document\") {\n      return xhr.responseXML;\n    }\n\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n      return xhr.responseXML;\n    }\n  } catch (e) {}\n\n  return null;\n}\n\nfunction noop() {}","'use strict'\n\n/**\n * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n *\n * Works with anything that has a `length` property and index access properties, including NodeList.\n *\n * @template {unknown} T\n * @param {Array<T> | ({length:number, [number]: T})} list\n * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n * \t\t\t\tallows injecting a custom implementation in tests\n * @returns {T | undefined}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n */\nfunction find(list, predicate, ac) {\n\tif (ac === undefined) {\n\t\tac = Array.prototype;\n\t}\n\tif (list && typeof ac.find === 'function') {\n\t\treturn ac.find.call(list, predicate);\n\t}\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\tvar item = list[i];\n\t\t\tif (predicate.call(undefined, item, i, list)) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * \"Shallow freezes\" an object to render it immutable.\n * Uses `Object.freeze` if available,\n * otherwise the immutability is only in the type.\n *\n * Is used to create \"enum like\" objects.\n *\n * @template T\n * @param {T} object the object to freeze\n * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n * \t\t\t\tallows to inject custom object constructor for tests\n * @returns {Readonly<T>}\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n */\nfunction freeze(object, oc) {\n\tif (oc === undefined) {\n\t\toc = Object\n\t}\n\treturn oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object\n}\n\n/**\n * Since we can not rely on `Object.assign` we provide a simplified version\n * that is sufficient for our needs.\n *\n * @param {Object} target\n * @param {Object | null | undefined} source\n *\n * @returns {Object} target\n * @throws TypeError if target is not an object\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n */\nfunction assign(target, source) {\n\tif (target === null || typeof target !== 'object') {\n\t\tthrow new TypeError('target is not an object')\n\t}\n\tfor (var key in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\ttarget[key] = source[key]\n\t\t}\n\t}\n\treturn target\n}\n\n/**\n * All mime types that are allowed as input to `DOMParser.parseFromString`\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n * @see DOMParser.prototype.parseFromString\n */\nvar MIME_TYPE = freeze({\n\t/**\n\t * `text/html`, the only mime type that triggers treating an XML document as HTML.\n\t *\n\t * @see DOMParser.SupportedType.isHTML\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n\t */\n\tHTML: 'text/html',\n\n\t/**\n\t * Helper method to check a mime type if it indicates an HTML document\n\t *\n\t * @param {string} [value]\n\t * @returns {boolean}\n\t *\n\t * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n\t * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n\tisHTML: function (value) {\n\t\treturn value === MIME_TYPE.HTML\n\t},\n\n\t/**\n\t * `application/xml`, the standard mime type for XML documents.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_APPLICATION: 'application/xml',\n\n\t/**\n\t * `text/html`, an alias for `application/xml`.\n\t *\n\t * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n\t * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n\t * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n\t */\n\tXML_TEXT: 'text/xml',\n\n\t/**\n\t * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n\t * but is parsed as an XML document.\n\t *\n\t * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n\t * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n\t */\n\tXML_XHTML_APPLICATION: 'application/xhtml+xml',\n\n\t/**\n\t * `image/svg+xml`,\n\t *\n\t * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n\t * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n\t * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n\t */\n\tXML_SVG_IMAGE: 'image/svg+xml',\n})\n\n/**\n * Namespaces that are used in this code base.\n *\n * @see http://www.w3.org/TR/REC-xml-names\n */\nvar NAMESPACE = freeze({\n\t/**\n\t * The XHTML namespace.\n\t *\n\t * @see http://www.w3.org/1999/xhtml\n\t */\n\tHTML: 'http://www.w3.org/1999/xhtml',\n\n\t/**\n\t * Checks if `uri` equals `NAMESPACE.HTML`.\n\t *\n\t * @param {string} [uri]\n\t *\n\t * @see NAMESPACE.HTML\n\t */\n\tisHTML: function (uri) {\n\t\treturn uri === NAMESPACE.HTML\n\t},\n\n\t/**\n\t * The SVG namespace.\n\t *\n\t * @see http://www.w3.org/2000/svg\n\t */\n\tSVG: 'http://www.w3.org/2000/svg',\n\n\t/**\n\t * The `xml:` namespace.\n\t *\n\t * @see http://www.w3.org/XML/1998/namespace\n\t */\n\tXML: 'http://www.w3.org/XML/1998/namespace',\n\n\t/**\n\t * The `xmlns:` namespace\n\t *\n\t * @see https://www.w3.org/2000/xmlns/\n\t */\n\tXMLNS: 'http://www.w3.org/2000/xmlns/',\n})\n\nexports.assign = assign;\nexports.find = find;\nexports.freeze = freeze;\nexports.MIME_TYPE = MIME_TYPE;\nexports.NAMESPACE = NAMESPACE;\n","var conventions = require(\"./conventions\");\nvar dom = require('./dom')\nvar entities = require('./entities');\nvar sax = require('./sax');\n\nvar DOMImplementation = dom.DOMImplementation;\n\nvar NAMESPACE = conventions.NAMESPACE;\n\nvar ParseError = sax.ParseError;\nvar XMLReader = sax.XMLReader;\n\n/**\n * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n *\n * > XML parsed entities are often stored in computer files which,\n * > for editing convenience, are organized into lines.\n * > These lines are typically separated by some combination\n * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n * >\n * > To simplify the tasks of applications, the XML processor must behave\n * > as if it normalized all line breaks in external parsed entities (including the document entity)\n * > on input, before parsing, by translating all of the following to a single #xA character:\n * >\n * > 1. the two-character sequence #xD #xA\n * > 2. the two-character sequence #xD #x85\n * > 3. the single character #x85\n * > 4. the single character #x2028\n * > 5. any #xD character that is not immediately followed by #xA or #x85.\n *\n * @param {string} input\n * @returns {string}\n */\nfunction normalizeLineEndings(input) {\n\treturn input\n\t\t.replace(/\\r[\\n\\u0085]/g, '\\n')\n\t\t.replace(/[\\r\\u0085\\u2028]/g, '\\n')\n}\n\n/**\n * @typedef Locator\n * @property {number} [columnNumber]\n * @property {number} [lineNumber]\n */\n\n/**\n * @typedef DOMParserOptions\n * @property {DOMHandler} [domBuilder]\n * @property {Function} [errorHandler]\n * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n * @property {Locator} [locator]\n * @property {Record<string, string>} [xmlns]\n *\n * @see normalizeLineEndings\n */\n\n/**\n * The DOMParser interface provides the ability to parse XML or HTML source code\n * from a string into a DOM `Document`.\n *\n * _xmldom is different from the spec in that it allows an `options` parameter,\n * to override the default behavior._\n *\n * @param {DOMParserOptions} [options]\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n */\nfunction DOMParser(options){\n\tthis.options = options ||{locator:{}};\n}\n\nDOMParser.prototype.parseFromString = function(source,mimeType){\n\tvar options = this.options;\n\tvar sax =  new XMLReader();\n\tvar domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler\n\tvar errorHandler = options.errorHandler;\n\tvar locator = options.locator;\n\tvar defaultNSMap = options.xmlns||{};\n\tvar isHTML = /\\/x?html?$/.test(mimeType);//mimeType.toLowerCase().indexOf('html') > -1;\n  \tvar entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n\tif(locator){\n\t\tdomBuilder.setDocumentLocator(locator)\n\t}\n\n\tsax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);\n\tsax.domBuilder = options.domBuilder || domBuilder;\n\tif(isHTML){\n\t\tdefaultNSMap[''] = NAMESPACE.HTML;\n\t}\n\tdefaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n\tvar normalize = options.normalizeLineEndings || normalizeLineEndings;\n\tif (source && typeof source === 'string') {\n\t\tsax.parse(\n\t\t\tnormalize(source),\n\t\t\tdefaultNSMap,\n\t\t\tentityMap\n\t\t)\n\t} else {\n\t\tsax.errorHandler.error('invalid doc source')\n\t}\n\treturn domBuilder.doc;\n}\nfunction buildErrorHandler(errorImpl,domBuilder,locator){\n\tif(!errorImpl){\n\t\tif(domBuilder instanceof DOMHandler){\n\t\t\treturn domBuilder;\n\t\t}\n\t\terrorImpl = domBuilder ;\n\t}\n\tvar errorHandler = {}\n\tvar isCallback = errorImpl instanceof Function;\n\tlocator = locator||{}\n\tfunction build(key){\n\t\tvar fn = errorImpl[key];\n\t\tif(!fn && isCallback){\n\t\t\tfn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;\n\t\t}\n\t\terrorHandler[key] = fn && function(msg){\n\t\t\tfn('[xmldom '+key+']\\t'+msg+_locator(locator));\n\t\t}||function(){};\n\t}\n\tbuild('warning');\n\tbuild('error');\n\tbuild('fatalError');\n\treturn errorHandler;\n}\n\n//console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n/**\n * +ContentHandler+ErrorHandler\n * +LexicalHandler+EntityResolver2\n * -DeclHandler-DTDHandler\n *\n * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n */\nfunction DOMHandler() {\n    this.cdata = false;\n}\nfunction position(locator,node){\n\tnode.lineNumber = locator.lineNumber;\n\tnode.columnNumber = locator.columnNumber;\n}\n/**\n * @see org.xml.sax.ContentHandler#startDocument\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n */\nDOMHandler.prototype = {\n\tstartDocument : function() {\n    \tthis.doc = new DOMImplementation().createDocument(null, null, null);\n    \tif (this.locator) {\n        \tthis.doc.documentURI = this.locator.systemId;\n    \t}\n\t},\n\tstartElement:function(namespaceURI, localName, qName, attrs) {\n\t\tvar doc = this.doc;\n\t    var el = doc.createElementNS(namespaceURI, qName||localName);\n\t    var len = attrs.length;\n\t    appendElement(this, el);\n\t    this.currentElement = el;\n\n\t\tthis.locator && position(this.locator,el)\n\t    for (var i = 0 ; i < len; i++) {\n\t        var namespaceURI = attrs.getURI(i);\n\t        var value = attrs.getValue(i);\n\t        var qName = attrs.getQName(i);\n\t\t\tvar attr = doc.createAttributeNS(namespaceURI, qName);\n\t\t\tthis.locator &&position(attrs.getLocator(i),attr);\n\t\t\tattr.value = attr.nodeValue = value;\n\t\t\tel.setAttributeNode(attr)\n\t    }\n\t},\n\tendElement:function(namespaceURI, localName, qName) {\n\t\tvar current = this.currentElement\n\t\tvar tagName = current.tagName;\n\t\tthis.currentElement = current.parentNode;\n\t},\n\tstartPrefixMapping:function(prefix, uri) {\n\t},\n\tendPrefixMapping:function(prefix) {\n\t},\n\tprocessingInstruction:function(target, data) {\n\t    var ins = this.doc.createProcessingInstruction(target, data);\n\t    this.locator && position(this.locator,ins)\n\t    appendElement(this, ins);\n\t},\n\tignorableWhitespace:function(ch, start, length) {\n\t},\n\tcharacters:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t\t//console.log(chars)\n\t\tif(chars){\n\t\t\tif (this.cdata) {\n\t\t\t\tvar charNode = this.doc.createCDATASection(chars);\n\t\t\t} else {\n\t\t\t\tvar charNode = this.doc.createTextNode(chars);\n\t\t\t}\n\t\t\tif(this.currentElement){\n\t\t\t\tthis.currentElement.appendChild(charNode);\n\t\t\t}else if(/^\\s*$/.test(chars)){\n\t\t\t\tthis.doc.appendChild(charNode);\n\t\t\t\t//process xml\n\t\t\t}\n\t\t\tthis.locator && position(this.locator,charNode)\n\t\t}\n\t},\n\tskippedEntity:function(name) {\n\t},\n\tendDocument:function() {\n\t\tthis.doc.normalize();\n\t},\n\tsetDocumentLocator:function (locator) {\n\t    if(this.locator = locator){// && !('lineNumber' in locator)){\n\t    \tlocator.lineNumber = 0;\n\t    }\n\t},\n\t//LexicalHandler\n\tcomment:function(chars, start, length) {\n\t\tchars = _toString.apply(this,arguments)\n\t    var comm = this.doc.createComment(chars);\n\t    this.locator && position(this.locator,comm)\n\t    appendElement(this, comm);\n\t},\n\n\tstartCDATA:function() {\n\t    //used in characters() methods\n\t    this.cdata = true;\n\t},\n\tendCDATA:function() {\n\t    this.cdata = false;\n\t},\n\n\tstartDTD:function(name, publicId, systemId) {\n\t\tvar impl = this.doc.implementation;\n\t    if (impl && impl.createDocumentType) {\n\t        var dt = impl.createDocumentType(name, publicId, systemId);\n\t        this.locator && position(this.locator,dt)\n\t        appendElement(this, dt);\n\t\t\t\t\tthis.doc.doctype = dt;\n\t    }\n\t},\n\t/**\n\t * @see org.xml.sax.ErrorHandler\n\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t */\n\twarning:function(error) {\n\t\tconsole.warn('[xmldom warning]\\t'+error,_locator(this.locator));\n\t},\n\terror:function(error) {\n\t\tconsole.error('[xmldom error]\\t'+error,_locator(this.locator));\n\t},\n\tfatalError:function(error) {\n\t\tthrow new ParseError(error, this.locator);\n\t}\n}\nfunction _locator(l){\n\tif(l){\n\t\treturn '\\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'\n\t}\n}\nfunction _toString(chars,start,length){\n\tif(typeof chars == 'string'){\n\t\treturn chars.substr(start,length)\n\t}else{//java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n\t\tif(chars.length >= start+length || start){\n\t\t\treturn new java.lang.String(chars,start,length)+'';\n\t\t}\n\t\treturn chars;\n\t}\n}\n\n/*\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n * used method of org.xml.sax.ext.LexicalHandler:\n *  #comment(chars, start, length)\n *  #startCDATA()\n *  #endCDATA()\n *  #startDTD(name, publicId, systemId)\n *\n *\n * IGNORED method of org.xml.sax.ext.LexicalHandler:\n *  #endDTD()\n *  #startEntity(name)\n *  #endEntity(name)\n *\n *\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n * IGNORED method of org.xml.sax.ext.DeclHandler\n * \t#attributeDecl(eName, aName, type, mode, value)\n *  #elementDecl(name, model)\n *  #externalEntityDecl(name, publicId, systemId)\n *  #internalEntityDecl(name, value)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n * IGNORED method of org.xml.sax.EntityResolver2\n *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n *  #resolveEntity(publicId, systemId)\n *  #getExternalSubset(name, baseURI)\n * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n * IGNORED method of org.xml.sax.DTDHandler\n *  #notationDecl(name, publicId, systemId) {};\n *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n */\n\"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g,function(key){\n\tDOMHandler.prototype[key] = function(){return null}\n})\n\n/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\nfunction appendElement (hander,node) {\n    if (!hander.currentElement) {\n        hander.doc.appendChild(node);\n    } else {\n        hander.currentElement.appendChild(node);\n    }\n}//appendChild and setAttributeNS are preformance key\n\nexports.__DOMHandler = DOMHandler;\nexports.normalizeLineEndings = normalizeLineEndings;\nexports.DOMParser = DOMParser;\n","var conventions = require(\"./conventions\");\n\nvar find = conventions.find;\nvar NAMESPACE = conventions.NAMESPACE;\n\n/**\n * A prerequisite for `[].filter`, to drop elements that are empty\n * @param {string} input\n * @returns {boolean}\n */\nfunction notEmptyString (input) {\n\treturn input !== ''\n}\n/**\n * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n * @see https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * @param {string} input\n * @returns {string[]} (can be empty)\n */\nfunction splitOnASCIIWhitespace(input) {\n\t// U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n\treturn input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : []\n}\n\n/**\n * Adds element as a key to current if it is not already present.\n *\n * @param {Record<string, boolean | undefined>} current\n * @param {string} element\n * @returns {Record<string, boolean | undefined>}\n */\nfunction orderedSetReducer (current, element) {\n\tif (!current.hasOwnProperty(element)) {\n\t\tcurrent[element] = true;\n\t}\n\treturn current;\n}\n\n/**\n * @see https://infra.spec.whatwg.org/#ordered-set\n * @param {string} input\n * @returns {string[]}\n */\nfunction toOrderedSet(input) {\n\tif (!input) return [];\n\tvar list = splitOnASCIIWhitespace(input);\n\treturn Object.keys(list.reduce(orderedSetReducer, {}))\n}\n\n/**\n * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n * which we can not rely on being available.\n *\n * @param {any[]} list\n * @returns {function(any): boolean}\n */\nfunction arrayIncludes (list) {\n\treturn function(element) {\n\t\treturn list && list.indexOf(element) !== -1;\n\t}\n}\n\nfunction copy(src,dest){\n\tfor(var p in src){\n\t\tif (Object.prototype.hasOwnProperty.call(src, p)) {\n\t\t\tdest[p] = src[p];\n\t\t}\n\t}\n}\n\n/**\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n */\nfunction _extends(Class,Super){\n\tvar pt = Class.prototype;\n\tif(!(pt instanceof Super)){\n\t\tfunction t(){};\n\t\tt.prototype = Super.prototype;\n\t\tt = new t();\n\t\tcopy(pt,t);\n\t\tClass.prototype = pt = t;\n\t}\n\tif(pt.constructor != Class){\n\t\tif(typeof Class != 'function'){\n\t\t\tconsole.error(\"unknown Class:\"+Class)\n\t\t}\n\t\tpt.constructor = Class\n\t}\n}\n\n// Node Types\nvar NodeType = {}\nvar ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;\nvar ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;\nvar TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;\nvar CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;\nvar ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;\nvar ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;\nvar PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\nvar COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;\nvar DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;\nvar DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;\nvar DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;\nvar NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;\n\n// ExceptionCode\nvar ExceptionCode = {}\nvar ExceptionMessage = {};\nvar INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]=\"Index size error\"),1);\nvar DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]=\"DOMString size error\"),2);\nvar HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]=\"Hierarchy request error\"),3);\nvar WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]=\"Wrong document\"),4);\nvar INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]=\"Invalid character\"),5);\nvar NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]=\"No data allowed\"),6);\nvar NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]=\"No modification allowed\"),7);\nvar NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]=\"Not found\"),8);\nvar NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]=\"Not supported\"),9);\nvar INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]=\"Attribute in use\"),10);\n//level2\nvar INVALID_STATE_ERR        \t= ExceptionCode.INVALID_STATE_ERR        \t= ((ExceptionMessage[11]=\"Invalid state\"),11);\nvar SYNTAX_ERR               \t= ExceptionCode.SYNTAX_ERR               \t= ((ExceptionMessage[12]=\"Syntax error\"),12);\nvar INVALID_MODIFICATION_ERR \t= ExceptionCode.INVALID_MODIFICATION_ERR \t= ((ExceptionMessage[13]=\"Invalid modification\"),13);\nvar NAMESPACE_ERR            \t= ExceptionCode.NAMESPACE_ERR           \t= ((ExceptionMessage[14]=\"Invalid namespace\"),14);\nvar INVALID_ACCESS_ERR       \t= ExceptionCode.INVALID_ACCESS_ERR      \t= ((ExceptionMessage[15]=\"Invalid access\"),15);\n\n/**\n * DOM Level 2\n * Object DOMException\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n */\nfunction DOMException(code, message) {\n\tif(message instanceof Error){\n\t\tvar error = message;\n\t}else{\n\t\terror = this;\n\t\tError.call(this, ExceptionMessage[code]);\n\t\tthis.message = ExceptionMessage[code];\n\t\tif(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n\t}\n\terror.code = code;\n\tif(message) this.message = this.message + \": \" + message;\n\treturn error;\n};\nDOMException.prototype = Error.prototype;\ncopy(ExceptionCode,DOMException)\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n * The items in the NodeList are accessible via an integral index, starting from 0.\n */\nfunction NodeList() {\n};\nNodeList.prototype = {\n\t/**\n\t * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n\t * @standard level1\n\t */\n\tlength:0,\n\t/**\n\t * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n\t * @standard level1\n\t * @param index  unsigned long\n\t *   Index into the collection.\n\t * @return Node\n\t * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n\t */\n\titem: function(index) {\n\t\treturn index >= 0 && index < this.length ? this[index] : null;\n\t},\n\ttoString:function(isHTML,nodeFilter){\n\t\tfor(var buf = [], i = 0;i<this.length;i++){\n\t\t\tserializeToString(this[i],buf,isHTML,nodeFilter);\n\t\t}\n\t\treturn buf.join('');\n\t},\n\t/**\n\t * @private\n\t * @param {function (Node):boolean} predicate\n\t * @returns {Node[]}\n\t */\n\tfilter: function (predicate) {\n\t\treturn Array.prototype.filter.call(this, predicate);\n\t},\n\t/**\n\t * @private\n\t * @param {Node} item\n\t * @returns {number}\n\t */\n\tindexOf: function (item) {\n\t\treturn Array.prototype.indexOf.call(this, item);\n\t},\n};\n\nfunction LiveNodeList(node,refresh){\n\tthis._node = node;\n\tthis._refresh = refresh\n\t_updateLiveList(this);\n}\nfunction _updateLiveList(list){\n\tvar inc = list._node._inc || list._node.ownerDocument._inc;\n\tif (list._inc !== inc) {\n\t\tvar ls = list._refresh(list._node);\n\t\t__set__(list,'length',ls.length);\n\t\tif (!list.$$length || ls.length < list.$$length) {\n\t\t\tfor (var i = ls.length; i in list; i++) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(list, i)) {\n\t\t\t\t\tdelete list[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcopy(ls,list);\n\t\tlist._inc = inc;\n\t}\n}\nLiveNodeList.prototype.item = function(i){\n\t_updateLiveList(this);\n\treturn this[i] || null;\n}\n\n_extends(LiveNodeList,NodeList);\n\n/**\n * Objects implementing the NamedNodeMap interface are used\n * to represent collections of nodes that can be accessed by name.\n * Note that NamedNodeMap does not inherit from NodeList;\n * NamedNodeMaps are not maintained in any particular order.\n * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n * and does not imply that the DOM specifies an order to these Nodes.\n * NamedNodeMap objects in the DOM are live.\n * used for attributes or DocumentType entities\n */\nfunction NamedNodeMap() {\n};\n\nfunction _findNodeIndex(list,node){\n\tvar i = list.length;\n\twhile(i--){\n\t\tif(list[i] === node){return i}\n\t}\n}\n\nfunction _addNamedNode(el,list,newAttr,oldAttr){\n\tif(oldAttr){\n\t\tlist[_findNodeIndex(list,oldAttr)] = newAttr;\n\t}else{\n\t\tlist[list.length++] = newAttr;\n\t}\n\tif(el){\n\t\tnewAttr.ownerElement = el;\n\t\tvar doc = el.ownerDocument;\n\t\tif(doc){\n\t\t\toldAttr && _onRemoveAttribute(doc,el,oldAttr);\n\t\t\t_onAddAttribute(doc,el,newAttr);\n\t\t}\n\t}\n}\nfunction _removeNamedNode(el,list,attr){\n\t//console.log('remove attr:'+attr)\n\tvar i = _findNodeIndex(list,attr);\n\tif(i>=0){\n\t\tvar lastIndex = list.length-1\n\t\twhile(i<lastIndex){\n\t\t\tlist[i] = list[++i]\n\t\t}\n\t\tlist.length = lastIndex;\n\t\tif(el){\n\t\t\tvar doc = el.ownerDocument;\n\t\t\tif(doc){\n\t\t\t\t_onRemoveAttribute(doc,el,attr);\n\t\t\t\tattr.ownerElement = null;\n\t\t\t}\n\t\t}\n\t}else{\n\t\tthrow new DOMException(NOT_FOUND_ERR,new Error(el.tagName+'@'+attr))\n\t}\n}\nNamedNodeMap.prototype = {\n\tlength:0,\n\titem:NodeList.prototype.item,\n\tgetNamedItem: function(key) {\n//\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n//\t\t\treturn null;\n//\t\t}\n\t\t//console.log()\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar attr = this[i];\n\t\t\t//console.log(attr.nodeName,key)\n\t\t\tif(attr.nodeName == key){\n\t\t\t\treturn attr;\n\t\t\t}\n\t\t}\n\t},\n\tsetNamedItem: function(attr) {\n\t\tvar el = attr.ownerElement;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\tvar oldAttr = this.getNamedItem(attr.nodeName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\t/* returns Node */\n\tsetNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n\t\tvar el = attr.ownerElement, oldAttr;\n\t\tif(el && el!=this._ownerElement){\n\t\t\tthrow new DOMException(INUSE_ATTRIBUTE_ERR);\n\t\t}\n\t\toldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);\n\t\t_addNamedNode(this._ownerElement,this,attr,oldAttr);\n\t\treturn oldAttr;\n\t},\n\n\t/* returns Node */\n\tremoveNamedItem: function(key) {\n\t\tvar attr = this.getNamedItem(key);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\n\n\t},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n\t//for level2\n\tremoveNamedItemNS:function(namespaceURI,localName){\n\t\tvar attr = this.getNamedItemNS(namespaceURI,localName);\n\t\t_removeNamedNode(this._ownerElement,this,attr);\n\t\treturn attr;\n\t},\n\tgetNamedItemNS: function(namespaceURI, localName) {\n\t\tvar i = this.length;\n\t\twhile(i--){\n\t\t\tvar node = this[i];\n\t\t\tif(node.localName == localName && node.namespaceURI == namespaceURI){\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n};\n\n/**\n * The DOMImplementation interface represents an object providing methods\n * which are not dependent on any particular document.\n * Such an object is returned by the `Document.implementation` property.\n *\n * __The individual methods describe the differences compared to the specs.__\n *\n * @constructor\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n */\nfunction DOMImplementation() {\n}\n\nDOMImplementation.prototype = {\n\t/**\n\t * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n\t * The different implementations fairly diverged in what kind of features were reported.\n\t * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n\t *\n\t * @deprecated It is deprecated and modern browsers return true in all cases.\n\t *\n\t * @param {string} feature\n\t * @param {string} [version]\n\t * @returns {boolean} always true\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n\t * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n\t */\n\thasFeature: function(feature, version) {\n\t\t\treturn true;\n\t},\n\t/**\n\t * Creates an XML Document object of the specified type with its document element.\n\t *\n\t * __It behaves slightly different from the description in the living standard__:\n\t * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n\t * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string|null} namespaceURI\n\t * @param {string} qualifiedName\n\t * @param {DocumentType=null} doctype\n\t * @returns {Document}\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocument: function(namespaceURI,  qualifiedName, doctype){\n\t\tvar doc = new Document();\n\t\tdoc.implementation = this;\n\t\tdoc.childNodes = new NodeList();\n\t\tdoc.doctype = doctype || null;\n\t\tif (doctype){\n\t\t\tdoc.appendChild(doctype);\n\t\t}\n\t\tif (qualifiedName){\n\t\t\tvar root = doc.createElementNS(namespaceURI, qualifiedName);\n\t\t\tdoc.appendChild(root);\n\t\t}\n\t\treturn doc;\n\t},\n\t/**\n\t * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n\t *\n\t * __This behavior is slightly different from the in the specs__:\n\t * - this implementation is not validating names or qualified names\n\t *   (when parsing XML strings, the SAX parser takes care of that)\n\t *\n\t * @param {string} qualifiedName\n\t * @param {string} [publicId]\n\t * @param {string} [systemId]\n\t * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n\t * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n\t * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n\t * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n\t *\n\t * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n\t * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n\t * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n\t */\n\tcreateDocumentType: function(qualifiedName, publicId, systemId){\n\t\tvar node = new DocumentType();\n\t\tnode.name = qualifiedName;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.publicId = publicId || '';\n\t\tnode.systemId = systemId || '';\n\n\t\treturn node;\n\t}\n};\n\n\n/**\n * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n */\n\nfunction Node() {\n};\n\nNode.prototype = {\n\tfirstChild : null,\n\tlastChild : null,\n\tpreviousSibling : null,\n\tnextSibling : null,\n\tattributes : null,\n\tparentNode : null,\n\tchildNodes : null,\n\townerDocument : null,\n\tnodeValue : null,\n\tnamespaceURI : null,\n\tprefix : null,\n\tlocalName : null,\n\t// Modified in DOM Level 2:\n\tinsertBefore:function(newChild, refChild){//raises\n\t\treturn _insertBefore(this,newChild,refChild);\n\t},\n\treplaceChild:function(newChild, oldChild){//raises\n\t\t_insertBefore(this, newChild,oldChild, assertPreReplacementValidityInDocument);\n\t\tif(oldChild){\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t},\n\tremoveChild:function(oldChild){\n\t\treturn _removeChild(this,oldChild);\n\t},\n\tappendChild:function(newChild){\n\t\treturn this.insertBefore(newChild,null);\n\t},\n\thasChildNodes:function(){\n\t\treturn this.firstChild != null;\n\t},\n\tcloneNode:function(deep){\n\t\treturn cloneNode(this.ownerDocument||this,this,deep);\n\t},\n\t// Modified in DOM Level 2:\n\tnormalize:function(){\n\t\tvar child = this.firstChild;\n\t\twhile(child){\n\t\t\tvar next = child.nextSibling;\n\t\t\tif(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){\n\t\t\t\tthis.removeChild(next);\n\t\t\t\tchild.appendData(next.data);\n\t\t\t}else{\n\t\t\t\tchild.normalize();\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t}\n\t},\n  \t// Introduced in DOM Level 2:\n\tisSupported:function(feature, version){\n\t\treturn this.ownerDocument.implementation.hasFeature(feature,version);\n\t},\n    // Introduced in DOM Level 2:\n    hasAttributes:function(){\n    \treturn this.attributes.length>0;\n    },\n\t/**\n\t * Look up the prefix associated to the given namespace URI, starting from this node.\n\t * **The default namespace declarations are ignored by this method.**\n\t * See Namespace Prefix Lookup for details on the algorithm used by this method.\n\t *\n\t * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n\t *\n\t * @param {string | null} namespaceURI\n\t * @returns {string | null}\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n\t * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n\t * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n\t * @see https://github.com/xmldom/xmldom/issues/322\n\t */\n    lookupPrefix:function(namespaceURI){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tfor(var n in map){\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n\t\t\t\t\t\t\treturn n;\n\t\t\t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI:function(prefix){\n    \tvar el = this;\n    \twhile(el){\n    \t\tvar map = el._nsMap;\n    \t\t//console.dir(map)\n    \t\tif(map){\n    \t\t\tif(Object.prototype.hasOwnProperty.call(map, prefix)){\n    \t\t\t\treturn map[prefix] ;\n    \t\t\t}\n    \t\t}\n    \t\tel = el.nodeType == ATTRIBUTE_NODE?el.ownerDocument : el.parentNode;\n    \t}\n    \treturn null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace:function(namespaceURI){\n    \tvar prefix = this.lookupPrefix(namespaceURI);\n    \treturn prefix == null;\n    }\n};\n\n\nfunction _xmlEncoder(c){\n\treturn c == '<' && '&lt;' ||\n         c == '>' && '&gt;' ||\n         c == '&' && '&amp;' ||\n         c == '\"' && '&quot;' ||\n         '&#'+c.charCodeAt()+';'\n}\n\n\ncopy(NodeType,Node);\ncopy(NodeType,Node.prototype);\n\n/**\n * @param callback return true for continue,false for break\n * @return boolean true: break visit;\n */\nfunction _visitNode(node,callback){\n\tif(callback(node)){\n\t\treturn true;\n\t}\n\tif(node = node.firstChild){\n\t\tdo{\n\t\t\tif(_visitNode(node,callback)){return true}\n        }while(node=node.nextSibling)\n    }\n}\n\n\n\nfunction Document(){\n\tthis.ownerDocument = this;\n}\n\nfunction _onAddAttribute(doc,el,newAttr){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tel._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value\n\t}\n}\n\nfunction _onRemoveAttribute(doc,el,newAttr,remove){\n\tdoc && doc._inc++;\n\tvar ns = newAttr.namespaceURI ;\n\tif(ns === NAMESPACE.XMLNS){\n\t\t//update namespace\n\t\tdelete el._nsMap[newAttr.prefix?newAttr.localName:'']\n\t}\n}\n\n/**\n * Updates `el.childNodes`, updating the indexed items and it's `length`.\n * Passing `newChild` means it will be appended.\n * Otherwise it's assumed that an item has been removed,\n * and `el.firstNode` and it's `.nextSibling` are used\n * to walk the current list of child nodes.\n *\n * @param {Document} doc\n * @param {Node} el\n * @param {Node} [newChild]\n * @private\n */\nfunction _onUpdateChild (doc, el, newChild) {\n\tif(doc && doc._inc){\n\t\tdoc._inc++;\n\t\t//update childNodes\n\t\tvar cs = el.childNodes;\n\t\tif (newChild) {\n\t\t\tcs[cs.length++] = newChild;\n\t\t} else {\n\t\t\tvar child = el.firstChild;\n\t\t\tvar i = 0;\n\t\t\twhile (child) {\n\t\t\t\tcs[i++] = child;\n\t\t\t\tchild = child.nextSibling;\n\t\t\t}\n\t\t\tcs.length = i;\n\t\t\tdelete cs[cs.length];\n\t\t}\n\t}\n}\n\n/**\n * Removes the connections between `parentNode` and `child`\n * and any existing `child.previousSibling` or `child.nextSibling`.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n *\n * @param {Node} parentNode\n * @param {Node} child\n * @returns {Node} the child that was removed.\n * @private\n */\nfunction _removeChild (parentNode, child) {\n\tvar previous = child.previousSibling;\n\tvar next = child.nextSibling;\n\tif (previous) {\n\t\tprevious.nextSibling = next;\n\t} else {\n\t\tparentNode.firstChild = next;\n\t}\n\tif (next) {\n\t\tnext.previousSibling = previous;\n\t} else {\n\t\tparentNode.lastChild = previous;\n\t}\n\tchild.parentNode = null;\n\tchild.previousSibling = null;\n\tchild.nextSibling = null;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode);\n\treturn child;\n}\n\n/**\n * Returns `true` if `node` can be a parent for insertion.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasValidParentNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE)\n\t);\n}\n\n/**\n * Returns `true` if `node` can be inserted according to it's `nodeType`.\n * @param {Node} node\n * @returns {boolean}\n */\nfunction hasInsertableNodeType(node) {\n\treturn (\n\t\tnode &&\n\t\t(isElementNode(node) ||\n\t\t\tisTextNode(node) ||\n\t\t\tisDocTypeNode(node) ||\n\t\t\tnode.nodeType === Node.DOCUMENT_FRAGMENT_NODE ||\n\t\t\tnode.nodeType === Node.COMMENT_NODE ||\n\t\t\tnode.nodeType === Node.PROCESSING_INSTRUCTION_NODE)\n\t);\n}\n\n/**\n * Returns true if `node` is a DOCTYPE node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isDocTypeNode(node) {\n\treturn node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n}\n\n/**\n * Returns true if the node is an element\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isElementNode(node) {\n\treturn node && node.nodeType === Node.ELEMENT_NODE;\n}\n/**\n * Returns true if `node` is a text node\n * @param {Node} node\n * @returns {boolean}\n */\nfunction isTextNode(node) {\n\treturn node && node.nodeType === Node.TEXT_NODE;\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Document} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementInsertionPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\tif (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n * according to the presence and position of a doctype node on the same level.\n *\n * @param {Node} doc The document node\n * @param {Node} child the node that would become the nextSibling if the element would be inserted\n * @returns {boolean} `true` if an element can be inserted before child\n * @private\n * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction isElementReplacementPossible(doc, child) {\n\tvar parentChildNodes = doc.childNodes || [];\n\n\tfunction hasElementChildThatIsNotChild(node) {\n\t\treturn isElementNode(node) && node !== child;\n\t}\n\n\tif (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n\t\treturn false;\n\t}\n\tvar docTypeNode = find(parentChildNodes, isDocTypeNode);\n\treturn !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n}\n\n/**\n * @private\n * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n *\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidity1to5(parent, node, child) {\n\t// 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n\tif (!hasValidParentNodeType(parent)) {\n\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n\t}\n\t// 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n\t// not implemented!\n\t// 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n\tif (child && child.parentNode !== parent) {\n\t\tthrow new DOMException(NOT_FOUND_ERR, 'child not in parent');\n\t}\n\tif (\n\t\t// 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n\t\t!hasInsertableNodeType(node) ||\n\t\t// 5. If either `node` is a Text node and `parent` is a document,\n\t\t// the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n\t\t// || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n\t\t// or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n\t\t(isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE)\n\t) {\n\t\tthrow new DOMException(\n\t\t\tHIERARCHY_REQUEST_ERR,\n\t\t\t'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType\n\t\t);\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreInsertionValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If node has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child,\n\t\t// `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child, `child` is a doctype,\n\t\t// or `child` is non-null and a doctype is following `child`.\n\t\tif (!isElementInsertionPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\t// `parent` has a doctype child,\n\t\tif (find(parentChildNodes, isDocTypeNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// `child` is non-null and an element is preceding `child`,\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t\t// or `child` is null and `parent` has an element child.\n\t\tif (!child && parentElementChild) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * Step 6 of the checks before inserting and before replacing a child are different.\n *\n * @param {Document} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n * @see https://dom.spec.whatwg.org/#concept-node-replace\n */\nfunction assertPreReplacementValidityInDocument(parent, node, child) {\n\tvar parentChildNodes = parent.childNodes || [];\n\tvar nodeChildNodes = node.childNodes || [];\n\n\t// DocumentFragment\n\tif (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n\t\tvar nodeChildElements = nodeChildNodes.filter(isElementNode);\n\t\t// If `node` has more than one element child or has a Text node child.\n\t\tif (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n\t\t}\n\t\t// Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n\t\t}\n\t}\n\t// Element\n\tif (isElementNode(node)) {\n\t\t// `parent` has an element child that is not `child` or a doctype is following `child`.\n\t\tif (!isElementReplacementPossible(parent, child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n\t\t}\n\t}\n\t// DocumentType\n\tif (isDocTypeNode(node)) {\n\t\tfunction hasDoctypeChildThatIsNotChild(node) {\n\t\t\treturn isDocTypeNode(node) && node !== child;\n\t\t}\n\n\t\t// `parent` has a doctype child that is not `child`,\n\t\tif (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n\t\t}\n\t\tvar parentElementChild = find(parentChildNodes, isElementNode);\n\t\t// or an element is preceding `child`.\n\t\tif (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n\t\t\tthrow new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n\t\t}\n\t}\n}\n\n/**\n * @private\n * @param {Node} parent the parent node to insert `node` into\n * @param {Node} node the node to insert\n * @param {Node=} child the node that should become the `nextSibling` of `node`\n * @returns {Node}\n * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n * @throws DOMException if `child` is provided but is not a child of `parent`.\n * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n */\nfunction _insertBefore(parent, node, child, _inDocumentAssertion) {\n\t// To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n\tassertPreInsertionValidity1to5(parent, node, child);\n\n\t// If parent is a document, and any of the statements below, switched on the interface node implements,\n\t// are true, then throw a \"HierarchyRequestError\" DOMException.\n\tif (parent.nodeType === Node.DOCUMENT_NODE) {\n\t\t(_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n\t}\n\n\tvar cp = node.parentNode;\n\tif(cp){\n\t\tcp.removeChild(node);//remove and update\n\t}\n\tif(node.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\tvar newFirst = node.firstChild;\n\t\tif (newFirst == null) {\n\t\t\treturn node;\n\t\t}\n\t\tvar newLast = node.lastChild;\n\t}else{\n\t\tnewFirst = newLast = node;\n\t}\n\tvar pre = child ? child.previousSibling : parent.lastChild;\n\n\tnewFirst.previousSibling = pre;\n\tnewLast.nextSibling = child;\n\n\n\tif(pre){\n\t\tpre.nextSibling = newFirst;\n\t}else{\n\t\tparent.firstChild = newFirst;\n\t}\n\tif(child == null){\n\t\tparent.lastChild = newLast;\n\t}else{\n\t\tchild.previousSibling = newLast;\n\t}\n\tdo{\n\t\tnewFirst.parentNode = parent;\n\t}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))\n\t_onUpdateChild(parent.ownerDocument||parent, parent);\n\t//console.log(parent.lastChild.nextSibling == null)\n\tif (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n\t\tnode.firstChild = node.lastChild = null;\n\t}\n\treturn node;\n}\n\n/**\n * Appends `newChild` to `parentNode`.\n * If `newChild` is already connected to a `parentNode` it is first removed from it.\n *\n * @see https://github.com/xmldom/xmldom/issues/135\n * @see https://github.com/xmldom/xmldom/issues/145\n * @param {Node} parentNode\n * @param {Node} newChild\n * @returns {Node}\n * @private\n */\nfunction _appendSingleChild (parentNode, newChild) {\n\tif (newChild.parentNode) {\n\t\tnewChild.parentNode.removeChild(newChild);\n\t}\n\tnewChild.parentNode = parentNode;\n\tnewChild.previousSibling = parentNode.lastChild;\n\tnewChild.nextSibling = null;\n\tif (newChild.previousSibling) {\n\t\tnewChild.previousSibling.nextSibling = newChild;\n\t} else {\n\t\tparentNode.firstChild = newChild;\n\t}\n\tparentNode.lastChild = newChild;\n\t_onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n\treturn newChild;\n}\n\nDocument.prototype = {\n\t//implementation : null,\n\tnodeName :  '#document',\n\tnodeType :  DOCUMENT_NODE,\n\t/**\n\t * The DocumentType node of the document.\n\t *\n\t * @readonly\n\t * @type DocumentType\n\t */\n\tdoctype :  null,\n\tdocumentElement :  null,\n\t_inc : 1,\n\n\tinsertBefore :  function(newChild, refChild){//raises\n\t\tif(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){\n\t\t\tvar child = newChild.firstChild;\n\t\t\twhile(child){\n\t\t\t\tvar next = child.nextSibling;\n\t\t\t\tthis.insertBefore(child,refChild);\n\t\t\t\tchild = next;\n\t\t\t}\n\t\t\treturn newChild;\n\t\t}\n\t\t_insertBefore(this, newChild, refChild);\n\t\tnewChild.ownerDocument = this;\n\t\tif (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\n\t\treturn newChild;\n\t},\n\tremoveChild :  function(oldChild){\n\t\tif(this.documentElement == oldChild){\n\t\t\tthis.documentElement = null;\n\t\t}\n\t\treturn _removeChild(this,oldChild);\n\t},\n\treplaceChild: function (newChild, oldChild) {\n\t\t//raises\n\t\t_insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n\t\tnewChild.ownerDocument = this;\n\t\tif (oldChild) {\n\t\t\tthis.removeChild(oldChild);\n\t\t}\n\t\tif (isElementNode(newChild)) {\n\t\t\tthis.documentElement = newChild;\n\t\t}\n\t},\n\t// Introduced in DOM Level 2:\n\timportNode : function(importedNode,deep){\n\t\treturn importNode(this,importedNode,deep);\n\t},\n\t// Introduced in DOM Level 2:\n\tgetElementById :\tfunction(id){\n\t\tvar rtv = null;\n\t\t_visitNode(this.documentElement,function(node){\n\t\t\tif(node.nodeType == ELEMENT_NODE){\n\t\t\t\tif(node.getAttribute('id') == id){\n\t\t\t\t\trtv = node;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn rtv;\n\t},\n\n\t/**\n\t * The `getElementsByClassName` method of `Document` interface returns an array-like object\n\t * of all child elements which have **all** of the given class name(s).\n\t *\n\t * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n\t *\n\t *\n\t * Warning: This is a live LiveNodeList.\n\t * Changes in the DOM will reflect in the array as the changes occur.\n\t * If an element selected by this array no longer qualifies for the selector,\n\t * it will automatically be removed. Be aware of this for iteration purposes.\n\t *\n\t * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n\t * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n\t */\n\tgetElementsByClassName: function(classNames) {\n\t\tvar classNamesSet = toOrderedSet(classNames)\n\t\treturn new LiveNodeList(this, function(base) {\n\t\t\tvar ls = [];\n\t\t\tif (classNamesSet.length > 0) {\n\t\t\t\t_visitNode(base.documentElement, function(node) {\n\t\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE) {\n\t\t\t\t\t\tvar nodeClassNames = node.getAttribute('class')\n\t\t\t\t\t\t// can be null if the attribute does not exist\n\t\t\t\t\t\tif (nodeClassNames) {\n\t\t\t\t\t\t\t// before splitting and iterating just compare them for the most common case\n\t\t\t\t\t\t\tvar matches = classNames === nodeClassNames;\n\t\t\t\t\t\t\tif (!matches) {\n\t\t\t\t\t\t\t\tvar nodeClassNamesSet = toOrderedSet(nodeClassNames)\n\t\t\t\t\t\t\t\tmatches = classNamesSet.every(arrayIncludes(nodeClassNamesSet))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(matches) {\n\t\t\t\t\t\t\t\tls.push(node);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn ls;\n\t\t});\n\t},\n\n\t//document factory method:\n\tcreateElement :\tfunction(tagName){\n\t\tvar node = new Element();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = tagName;\n\t\tnode.tagName = tagName;\n\t\tnode.localName = tagName;\n\t\tnode.childNodes = new NodeList();\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\tcreateDocumentFragment :\tfunction(){\n\t\tvar node = new DocumentFragment();\n\t\tnode.ownerDocument = this;\n\t\tnode.childNodes = new NodeList();\n\t\treturn node;\n\t},\n\tcreateTextNode :\tfunction(data){\n\t\tvar node = new Text();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateComment :\tfunction(data){\n\t\tvar node = new Comment();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateCDATASection :\tfunction(data){\n\t\tvar node = new CDATASection();\n\t\tnode.ownerDocument = this;\n\t\tnode.appendData(data)\n\t\treturn node;\n\t},\n\tcreateProcessingInstruction :\tfunction(target,data){\n\t\tvar node = new ProcessingInstruction();\n\t\tnode.ownerDocument = this;\n\t\tnode.tagName = node.nodeName = node.target = target;\n\t\tnode.nodeValue = node.data = data;\n\t\treturn node;\n\t},\n\tcreateAttribute :\tfunction(name){\n\t\tvar node = new Attr();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.name = name;\n\t\tnode.nodeName\t= name;\n\t\tnode.localName = name;\n\t\tnode.specified = true;\n\t\treturn node;\n\t},\n\tcreateEntityReference :\tfunction(name){\n\t\tvar node = new EntityReference();\n\t\tnode.ownerDocument\t= this;\n\t\tnode.nodeName\t= name;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateElementNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Element();\n\t\tvar pl = qualifiedName.split(':');\n\t\tvar attrs\t= node.attributes = new NamedNodeMap();\n\t\tnode.childNodes = new NodeList();\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.tagName = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\tattrs._ownerElement = node;\n\t\treturn node;\n\t},\n\t// Introduced in DOM Level 2:\n\tcreateAttributeNS :\tfunction(namespaceURI,qualifiedName){\n\t\tvar node = new Attr();\n\t\tvar pl = qualifiedName.split(':');\n\t\tnode.ownerDocument = this;\n\t\tnode.nodeName = qualifiedName;\n\t\tnode.name = qualifiedName;\n\t\tnode.namespaceURI = namespaceURI;\n\t\tnode.specified = true;\n\t\tif(pl.length == 2){\n\t\t\tnode.prefix = pl[0];\n\t\t\tnode.localName = pl[1];\n\t\t}else{\n\t\t\t//el.prefix = null;\n\t\t\tnode.localName = qualifiedName;\n\t\t}\n\t\treturn node;\n\t}\n};\n_extends(Document,Node);\n\n\nfunction Element() {\n\tthis._nsMap = {};\n};\nElement.prototype = {\n\tnodeType : ELEMENT_NODE,\n\thasAttribute : function(name){\n\t\treturn this.getAttributeNode(name)!=null;\n\t},\n\tgetAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name);\n\t\treturn attr && attr.value || '';\n\t},\n\tgetAttributeNode : function(name){\n\t\treturn this.attributes.getNamedItem(name);\n\t},\n\tsetAttribute : function(name, value){\n\t\tvar attr = this.ownerDocument.createAttribute(name);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tremoveAttribute : function(name){\n\t\tvar attr = this.getAttributeNode(name)\n\t\tattr && this.removeAttributeNode(attr);\n\t},\n\n\t//four real opeartion method\n\tappendChild:function(newChild){\n\t\tif(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){\n\t\t\treturn this.insertBefore(newChild,null);\n\t\t}else{\n\t\t\treturn _appendSingleChild(this,newChild);\n\t\t}\n\t},\n\tsetAttributeNode : function(newAttr){\n\t\treturn this.attributes.setNamedItem(newAttr);\n\t},\n\tsetAttributeNodeNS : function(newAttr){\n\t\treturn this.attributes.setNamedItemNS(newAttr);\n\t},\n\tremoveAttributeNode : function(oldAttr){\n\t\t//console.log(this == oldAttr.ownerElement)\n\t\treturn this.attributes.removeNamedItem(oldAttr.nodeName);\n\t},\n\t//get real attribute name,and remove it by removeAttributeNode\n\tremoveAttributeNS : function(namespaceURI, localName){\n\t\tvar old = this.getAttributeNodeNS(namespaceURI, localName);\n\t\told && this.removeAttributeNode(old);\n\t},\n\n\thasAttributeNS : function(namespaceURI, localName){\n\t\treturn this.getAttributeNodeNS(namespaceURI, localName)!=null;\n\t},\n\tgetAttributeNS : function(namespaceURI, localName){\n\t\tvar attr = this.getAttributeNodeNS(namespaceURI, localName);\n\t\treturn attr && attr.value || '';\n\t},\n\tsetAttributeNS : function(namespaceURI, qualifiedName, value){\n\t\tvar attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n\t\tattr.value = attr.nodeValue = \"\" + value;\n\t\tthis.setAttributeNode(attr)\n\t},\n\tgetAttributeNodeNS : function(namespaceURI, localName){\n\t\treturn this.attributes.getNamedItemNS(namespaceURI, localName);\n\t},\n\n\tgetElementsByTagName : function(tagName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\t\t});\n\t},\n\tgetElementsByTagNameNS : function(namespaceURI, localName){\n\t\treturn new LiveNodeList(this,function(base){\n\t\t\tvar ls = [];\n\t\t\t_visitNode(base,function(node){\n\t\t\t\tif(node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)){\n\t\t\t\t\tls.push(node);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn ls;\n\n\t\t});\n\t}\n};\nDocument.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\nDocument.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n\n\n_extends(Element,Node);\nfunction Attr() {\n};\nAttr.prototype.nodeType = ATTRIBUTE_NODE;\n_extends(Attr,Node);\n\n\nfunction CharacterData() {\n};\nCharacterData.prototype = {\n\tdata : '',\n\tsubstringData : function(offset, count) {\n\t\treturn this.data.substring(offset, offset+count);\n\t},\n\tappendData: function(text) {\n\t\ttext = this.data+text;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t},\n\tinsertData: function(offset,text) {\n\t\tthis.replaceData(offset,0,text);\n\n\t},\n\tappendChild:function(newChild){\n\t\tthrow new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR])\n\t},\n\tdeleteData: function(offset, count) {\n\t\tthis.replaceData(offset,count,\"\");\n\t},\n\treplaceData: function(offset, count, text) {\n\t\tvar start = this.data.substring(0,offset);\n\t\tvar end = this.data.substring(offset+count);\n\t\ttext = start + text + end;\n\t\tthis.nodeValue = this.data = text;\n\t\tthis.length = text.length;\n\t}\n}\n_extends(CharacterData,Node);\nfunction Text() {\n};\nText.prototype = {\n\tnodeName : \"#text\",\n\tnodeType : TEXT_NODE,\n\tsplitText : function(offset) {\n\t\tvar text = this.data;\n\t\tvar newText = text.substring(offset);\n\t\ttext = text.substring(0, offset);\n\t\tthis.data = this.nodeValue = text;\n\t\tthis.length = text.length;\n\t\tvar newNode = this.ownerDocument.createTextNode(newText);\n\t\tif(this.parentNode){\n\t\t\tthis.parentNode.insertBefore(newNode, this.nextSibling);\n\t\t}\n\t\treturn newNode;\n\t}\n}\n_extends(Text,CharacterData);\nfunction Comment() {\n};\nComment.prototype = {\n\tnodeName : \"#comment\",\n\tnodeType : COMMENT_NODE\n}\n_extends(Comment,CharacterData);\n\nfunction CDATASection() {\n};\nCDATASection.prototype = {\n\tnodeName : \"#cdata-section\",\n\tnodeType : CDATA_SECTION_NODE\n}\n_extends(CDATASection,CharacterData);\n\n\nfunction DocumentType() {\n};\nDocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n_extends(DocumentType,Node);\n\nfunction Notation() {\n};\nNotation.prototype.nodeType = NOTATION_NODE;\n_extends(Notation,Node);\n\nfunction Entity() {\n};\nEntity.prototype.nodeType = ENTITY_NODE;\n_extends(Entity,Node);\n\nfunction EntityReference() {\n};\nEntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n_extends(EntityReference,Node);\n\nfunction DocumentFragment() {\n};\nDocumentFragment.prototype.nodeName =\t\"#document-fragment\";\nDocumentFragment.prototype.nodeType =\tDOCUMENT_FRAGMENT_NODE;\n_extends(DocumentFragment,Node);\n\n\nfunction ProcessingInstruction() {\n}\nProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n_extends(ProcessingInstruction,Node);\nfunction XMLSerializer(){}\nXMLSerializer.prototype.serializeToString = function(node,isHtml,nodeFilter){\n\treturn nodeSerializeToString.call(node,isHtml,nodeFilter);\n}\nNode.prototype.toString = nodeSerializeToString;\nfunction nodeSerializeToString(isHtml,nodeFilter){\n\tvar buf = [];\n\tvar refNode = this.nodeType == 9 && this.documentElement || this;\n\tvar prefix = refNode.prefix;\n\tvar uri = refNode.namespaceURI;\n\n\tif(uri && prefix == null){\n\t\t//console.log(prefix)\n\t\tvar prefix = refNode.lookupPrefix(uri);\n\t\tif(prefix == null){\n\t\t\t//isHTML = true;\n\t\t\tvar visibleNamespaces=[\n\t\t\t{namespace:uri,prefix:null}\n\t\t\t//{namespace:uri,prefix:''}\n\t\t\t]\n\t\t}\n\t}\n\tserializeToString(this,buf,isHtml,nodeFilter,visibleNamespaces);\n\t//console.log('###',this.nodeType,uri,prefix,buf.join(''))\n\treturn buf.join('');\n}\n\nfunction needNamespaceDefine(node, isHTML, visibleNamespaces) {\n\tvar prefix = node.prefix || '';\n\tvar uri = node.namespaceURI;\n\t// According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n\t// and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n\t// > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n\t// in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n\t// and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n\t// > [...] Furthermore, the attribute value [...] must not be an empty string.\n\t// so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n\tif (!uri) {\n\t\treturn false;\n\t}\n\tif (prefix === \"xml\" && uri === NAMESPACE.XML || uri === NAMESPACE.XMLNS) {\n\t\treturn false;\n\t}\n\n\tvar i = visibleNamespaces.length\n\twhile (i--) {\n\t\tvar ns = visibleNamespaces[i];\n\t\t// get namespace prefix\n\t\tif (ns.prefix === prefix) {\n\t\t\treturn ns.namespace !== uri;\n\t\t}\n\t}\n\treturn true;\n}\n/**\n * Well-formed constraint: No < in Attribute Values\n * > The replacement text of any entity referred to directly or indirectly\n * > in an attribute value must not contain a <.\n * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n * @see https://www.w3.org/TR/xml11/#NT-AttValue\n *\n * Literal whitespace other than space that appear in attribute values\n * are serialized as their entity references, so they will be preserved.\n * (In contrast to whitespace literals in the input which are normalized to spaces)\n * @see https://www.w3.org/TR/xml11/#AVNormalize\n * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n */\nfunction addSerializedAttribute(buf, qualifiedName, value) {\n\tbuf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"')\n}\n\nfunction serializeToString(node,buf,isHTML,nodeFilter,visibleNamespaces){\n\tif (!visibleNamespaces) {\n\t\tvisibleNamespaces = [];\n\t}\n\n\tif(nodeFilter){\n\t\tnode = nodeFilter(node);\n\t\tif(node){\n\t\t\tif(typeof node == 'string'){\n\t\t\t\tbuf.push(node);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}else{\n\t\t\treturn;\n\t\t}\n\t\t//buf.sort.apply(attrs, attributeSorter);\n\t}\n\n\tswitch(node.nodeType){\n\tcase ELEMENT_NODE:\n\t\tvar attrs = node.attributes;\n\t\tvar len = attrs.length;\n\t\tvar child = node.firstChild;\n\t\tvar nodeName = node.tagName;\n\n\t\tisHTML = NAMESPACE.isHTML(node.namespaceURI) || isHTML\n\n\t\tvar prefixedNodeName = nodeName\n\t\tif (!isHTML && !node.prefix && node.namespaceURI) {\n\t\t\tvar defaultNS\n\t\t\t// lookup current default ns from `xmlns` attribute\n\t\t\tfor (var ai = 0; ai < attrs.length; ai++) {\n\t\t\t\tif (attrs.item(ai).name === 'xmlns') {\n\t\t\t\t\tdefaultNS = attrs.item(ai).value\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!defaultNS) {\n\t\t\t\t// lookup current default ns in visibleNamespaces\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tdefaultNS = namespace.namespace\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (defaultNS !== node.namespaceURI) {\n\t\t\t\tfor (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n\t\t\t\t\tvar namespace = visibleNamespaces[nsi]\n\t\t\t\t\tif (namespace.namespace === node.namespaceURI) {\n\t\t\t\t\t\tif (namespace.prefix) {\n\t\t\t\t\t\t\tprefixedNodeName = namespace.prefix + ':' + nodeName\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbuf.push('<', prefixedNodeName);\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\t// add namespaces for attributes\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (attr.prefix == 'xmlns') {\n\t\t\t\tvisibleNamespaces.push({ prefix: attr.localName, namespace: attr.value });\n\t\t\t}else if(attr.nodeName == 'xmlns'){\n\t\t\t\tvisibleNamespaces.push({ prefix: '', namespace: attr.value });\n\t\t\t}\n\t\t}\n\n\t\tfor(var i=0;i<len;i++){\n\t\t\tvar attr = attrs.item(i);\n\t\t\tif (needNamespaceDefine(attr,isHTML, visibleNamespaces)) {\n\t\t\t\tvar prefix = attr.prefix||'';\n\t\t\t\tvar uri = attr.namespaceURI;\n\t\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t\t}\n\t\t\tserializeToString(attr,buf,isHTML,nodeFilter,visibleNamespaces);\n\t\t}\n\n\t\t// add namespace for current node\n\t\tif (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n\t\t\tvar prefix = node.prefix||'';\n\t\t\tvar uri = node.namespaceURI;\n\t\t\taddSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n\t\t\tvisibleNamespaces.push({ prefix: prefix, namespace:uri });\n\t\t}\n\n\t\tif(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){\n\t\t\tbuf.push('>');\n\t\t\t//if is cdata child node\n\t\t\tif(isHTML && /^script$/i.test(nodeName)){\n\t\t\t\twhile(child){\n\t\t\t\t\tif(child.data){\n\t\t\t\t\t\tbuf.push(child.data);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\t}\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}else\n\t\t\t{\n\t\t\t\twhile(child){\n\t\t\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\t\t\tchild = child.nextSibling;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuf.push('</',prefixedNodeName,'>');\n\t\t}else{\n\t\t\tbuf.push('/>');\n\t\t}\n\t\t// remove added visible namespaces\n\t\t//visibleNamespaces.length = startVisibleNamespaces;\n\t\treturn;\n\tcase DOCUMENT_NODE:\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tserializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t\treturn;\n\tcase ATTRIBUTE_NODE:\n\t\treturn addSerializedAttribute(buf, node.name, node.value);\n\tcase TEXT_NODE:\n\t\t/**\n\t\t * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n\t\t * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n\t\t * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n\t\t * `&amp;` and `&lt;` respectively.\n\t\t * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n\t\t * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n\t\t * when that string is not marking the end of a CDATA section.\n\t\t *\n\t\t * In the content of elements, character data is any string of characters\n\t\t * which does not contain the start-delimiter of any markup\n\t\t * and does not include the CDATA-section-close delimiter, `]]>`.\n\t\t *\n\t\t * @see https://www.w3.org/TR/xml/#NT-CharData\n\t\t * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n\t\t */\n\t\treturn buf.push(node.data\n\t\t\t.replace(/[<&>]/g,_xmlEncoder)\n\t\t);\n\tcase CDATA_SECTION_NODE:\n\t\treturn buf.push( '<![CDATA[',node.data,']]>');\n\tcase COMMENT_NODE:\n\t\treturn buf.push( \"<!--\",node.data,\"-->\");\n\tcase DOCUMENT_TYPE_NODE:\n\t\tvar pubid = node.publicId;\n\t\tvar sysid = node.systemId;\n\t\tbuf.push('<!DOCTYPE ',node.name);\n\t\tif(pubid){\n\t\t\tbuf.push(' PUBLIC ', pubid);\n\t\t\tif (sysid && sysid!='.') {\n\t\t\t\tbuf.push(' ', sysid);\n\t\t\t}\n\t\t\tbuf.push('>');\n\t\t}else if(sysid && sysid!='.'){\n\t\t\tbuf.push(' SYSTEM ', sysid, '>');\n\t\t}else{\n\t\t\tvar sub = node.internalSubset;\n\t\t\tif(sub){\n\t\t\t\tbuf.push(\" [\",sub,\"]\");\n\t\t\t}\n\t\t\tbuf.push(\">\");\n\t\t}\n\t\treturn;\n\tcase PROCESSING_INSTRUCTION_NODE:\n\t\treturn buf.push( \"<?\",node.target,\" \",node.data,\"?>\");\n\tcase ENTITY_REFERENCE_NODE:\n\t\treturn buf.push( '&',node.nodeName,';');\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE:\n\tdefault:\n\t\tbuf.push('??',node.nodeName);\n\t}\n}\nfunction importNode(doc,node,deep){\n\tvar node2;\n\tswitch (node.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tnode2 = node.cloneNode(false);\n\t\tnode2.ownerDocument = doc;\n\t\t//var attrs = node2.attributes;\n\t\t//var len = attrs.length;\n\t\t//for(var i=0;i<len;i++){\n\t\t\t//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n\t\t//}\n\tcase DOCUMENT_FRAGMENT_NODE:\n\t\tbreak;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t\tbreak;\n\t//case ENTITY_REFERENCE_NODE:\n\t//case PROCESSING_INSTRUCTION_NODE:\n\t////case TEXT_NODE:\n\t//case CDATA_SECTION_NODE:\n\t//case COMMENT_NODE:\n\t//\tdeep = false;\n\t//\tbreak;\n\t//case DOCUMENT_NODE:\n\t//case DOCUMENT_TYPE_NODE:\n\t//cannot be imported.\n\t//case ENTITY_NODE:\n\t//case NOTATION_NODE：\n\t//can not hit in level3\n\t//default:throw e;\n\t}\n\tif(!node2){\n\t\tnode2 = node.cloneNode(false);//false\n\t}\n\tnode2.ownerDocument = doc;\n\tnode2.parentNode = null;\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(importNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n//\n//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n//\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\nfunction cloneNode(doc,node,deep){\n\tvar node2 = new node.constructor();\n\tfor (var n in node) {\n\t\tif (Object.prototype.hasOwnProperty.call(node, n)) {\n\t\t\tvar v = node[n];\n\t\t\tif (typeof v != \"object\") {\n\t\t\t\tif (v != node2[n]) {\n\t\t\t\t\tnode2[n] = v;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(node.childNodes){\n\t\tnode2.childNodes = new NodeList();\n\t}\n\tnode2.ownerDocument = doc;\n\tswitch (node2.nodeType) {\n\tcase ELEMENT_NODE:\n\t\tvar attrs\t= node.attributes;\n\t\tvar attrs2\t= node2.attributes = new NamedNodeMap();\n\t\tvar len = attrs.length\n\t\tattrs2._ownerElement = node2;\n\t\tfor(var i=0;i<len;i++){\n\t\t\tnode2.setAttributeNode(cloneNode(doc,attrs.item(i),true));\n\t\t}\n\t\tbreak;;\n\tcase ATTRIBUTE_NODE:\n\t\tdeep = true;\n\t}\n\tif(deep){\n\t\tvar child = node.firstChild;\n\t\twhile(child){\n\t\t\tnode2.appendChild(cloneNode(doc,child,deep));\n\t\t\tchild = child.nextSibling;\n\t\t}\n\t}\n\treturn node2;\n}\n\nfunction __set__(object,key,value){\n\tobject[key] = value\n}\n//do dynamic\ntry{\n\tif(Object.defineProperty){\n\t\tObject.defineProperty(LiveNodeList.prototype,'length',{\n\t\t\tget:function(){\n\t\t\t\t_updateLiveList(this);\n\t\t\t\treturn this.$$length;\n\t\t\t}\n\t\t});\n\n\t\tObject.defineProperty(Node.prototype,'textContent',{\n\t\t\tget:function(){\n\t\t\t\treturn getTextContent(this);\n\t\t\t},\n\n\t\t\tset:function(data){\n\t\t\t\tswitch(this.nodeType){\n\t\t\t\tcase ELEMENT_NODE:\n\t\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\t\twhile(this.firstChild){\n\t\t\t\t\t\tthis.removeChild(this.firstChild);\n\t\t\t\t\t}\n\t\t\t\t\tif(data || String(data)){\n\t\t\t\t\t\tthis.appendChild(this.ownerDocument.createTextNode(data));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthis.data = data;\n\t\t\t\t\tthis.value = data;\n\t\t\t\t\tthis.nodeValue = data;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tfunction getTextContent(node){\n\t\t\tswitch(node.nodeType){\n\t\t\tcase ELEMENT_NODE:\n\t\t\tcase DOCUMENT_FRAGMENT_NODE:\n\t\t\t\tvar buf = [];\n\t\t\t\tnode = node.firstChild;\n\t\t\t\twhile(node){\n\t\t\t\t\tif(node.nodeType!==7 && node.nodeType !==8){\n\t\t\t\t\t\tbuf.push(getTextContent(node));\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.nextSibling;\n\t\t\t\t}\n\t\t\t\treturn buf.join('');\n\t\t\tdefault:\n\t\t\t\treturn node.nodeValue;\n\t\t\t}\n\t\t}\n\n\t\t__set__ = function(object,key,value){\n\t\t\t//console.log(value)\n\t\t\tobject['$$'+key] = value\n\t\t}\n\t}\n}catch(e){//ie8\n}\n\n//if(typeof require == 'function'){\n\texports.DocumentType = DocumentType;\n\texports.DOMException = DOMException;\n\texports.DOMImplementation = DOMImplementation;\n\texports.Element = Element;\n\texports.Node = Node;\n\texports.NodeList = NodeList;\n\texports.XMLSerializer = XMLSerializer;\n//}\n","'use strict';\n\nvar freeze = require('./conventions').freeze;\n\n/**\n * The entities that are predefined in every XML document.\n *\n * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n */\nexports.XML_ENTITIES = freeze({\n\tamp: '&',\n\tapos: \"'\",\n\tgt: '>',\n\tlt: '<',\n\tquot: '\"',\n});\n\n/**\n * A map of all entities that are detected in an HTML document.\n * They contain all entries from `XML_ENTITIES`.\n *\n * @see XML_ENTITIES\n * @see DOMParser.parseFromString\n * @see DOMImplementation.prototype.createHTMLDocument\n * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n * @see https://html.spec.whatwg.org/entities.json JSON\n * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n */\nexports.HTML_ENTITIES = freeze({\n\tAacute: '\\u00C1',\n\taacute: '\\u00E1',\n\tAbreve: '\\u0102',\n\tabreve: '\\u0103',\n\tac: '\\u223E',\n\tacd: '\\u223F',\n\tacE: '\\u223E\\u0333',\n\tAcirc: '\\u00C2',\n\tacirc: '\\u00E2',\n\tacute: '\\u00B4',\n\tAcy: '\\u0410',\n\tacy: '\\u0430',\n\tAElig: '\\u00C6',\n\taelig: '\\u00E6',\n\taf: '\\u2061',\n\tAfr: '\\uD835\\uDD04',\n\tafr: '\\uD835\\uDD1E',\n\tAgrave: '\\u00C0',\n\tagrave: '\\u00E0',\n\talefsym: '\\u2135',\n\taleph: '\\u2135',\n\tAlpha: '\\u0391',\n\talpha: '\\u03B1',\n\tAmacr: '\\u0100',\n\tamacr: '\\u0101',\n\tamalg: '\\u2A3F',\n\tAMP: '\\u0026',\n\tamp: '\\u0026',\n\tAnd: '\\u2A53',\n\tand: '\\u2227',\n\tandand: '\\u2A55',\n\tandd: '\\u2A5C',\n\tandslope: '\\u2A58',\n\tandv: '\\u2A5A',\n\tang: '\\u2220',\n\tange: '\\u29A4',\n\tangle: '\\u2220',\n\tangmsd: '\\u2221',\n\tangmsdaa: '\\u29A8',\n\tangmsdab: '\\u29A9',\n\tangmsdac: '\\u29AA',\n\tangmsdad: '\\u29AB',\n\tangmsdae: '\\u29AC',\n\tangmsdaf: '\\u29AD',\n\tangmsdag: '\\u29AE',\n\tangmsdah: '\\u29AF',\n\tangrt: '\\u221F',\n\tangrtvb: '\\u22BE',\n\tangrtvbd: '\\u299D',\n\tangsph: '\\u2222',\n\tangst: '\\u00C5',\n\tangzarr: '\\u237C',\n\tAogon: '\\u0104',\n\taogon: '\\u0105',\n\tAopf: '\\uD835\\uDD38',\n\taopf: '\\uD835\\uDD52',\n\tap: '\\u2248',\n\tapacir: '\\u2A6F',\n\tapE: '\\u2A70',\n\tape: '\\u224A',\n\tapid: '\\u224B',\n\tapos: '\\u0027',\n\tApplyFunction: '\\u2061',\n\tapprox: '\\u2248',\n\tapproxeq: '\\u224A',\n\tAring: '\\u00C5',\n\taring: '\\u00E5',\n\tAscr: '\\uD835\\uDC9C',\n\tascr: '\\uD835\\uDCB6',\n\tAssign: '\\u2254',\n\tast: '\\u002A',\n\tasymp: '\\u2248',\n\tasympeq: '\\u224D',\n\tAtilde: '\\u00C3',\n\tatilde: '\\u00E3',\n\tAuml: '\\u00C4',\n\tauml: '\\u00E4',\n\tawconint: '\\u2233',\n\tawint: '\\u2A11',\n\tbackcong: '\\u224C',\n\tbackepsilon: '\\u03F6',\n\tbackprime: '\\u2035',\n\tbacksim: '\\u223D',\n\tbacksimeq: '\\u22CD',\n\tBackslash: '\\u2216',\n\tBarv: '\\u2AE7',\n\tbarvee: '\\u22BD',\n\tBarwed: '\\u2306',\n\tbarwed: '\\u2305',\n\tbarwedge: '\\u2305',\n\tbbrk: '\\u23B5',\n\tbbrktbrk: '\\u23B6',\n\tbcong: '\\u224C',\n\tBcy: '\\u0411',\n\tbcy: '\\u0431',\n\tbdquo: '\\u201E',\n\tbecaus: '\\u2235',\n\tBecause: '\\u2235',\n\tbecause: '\\u2235',\n\tbemptyv: '\\u29B0',\n\tbepsi: '\\u03F6',\n\tbernou: '\\u212C',\n\tBernoullis: '\\u212C',\n\tBeta: '\\u0392',\n\tbeta: '\\u03B2',\n\tbeth: '\\u2136',\n\tbetween: '\\u226C',\n\tBfr: '\\uD835\\uDD05',\n\tbfr: '\\uD835\\uDD1F',\n\tbigcap: '\\u22C2',\n\tbigcirc: '\\u25EF',\n\tbigcup: '\\u22C3',\n\tbigodot: '\\u2A00',\n\tbigoplus: '\\u2A01',\n\tbigotimes: '\\u2A02',\n\tbigsqcup: '\\u2A06',\n\tbigstar: '\\u2605',\n\tbigtriangledown: '\\u25BD',\n\tbigtriangleup: '\\u25B3',\n\tbiguplus: '\\u2A04',\n\tbigvee: '\\u22C1',\n\tbigwedge: '\\u22C0',\n\tbkarow: '\\u290D',\n\tblacklozenge: '\\u29EB',\n\tblacksquare: '\\u25AA',\n\tblacktriangle: '\\u25B4',\n\tblacktriangledown: '\\u25BE',\n\tblacktriangleleft: '\\u25C2',\n\tblacktriangleright: '\\u25B8',\n\tblank: '\\u2423',\n\tblk12: '\\u2592',\n\tblk14: '\\u2591',\n\tblk34: '\\u2593',\n\tblock: '\\u2588',\n\tbne: '\\u003D\\u20E5',\n\tbnequiv: '\\u2261\\u20E5',\n\tbNot: '\\u2AED',\n\tbnot: '\\u2310',\n\tBopf: '\\uD835\\uDD39',\n\tbopf: '\\uD835\\uDD53',\n\tbot: '\\u22A5',\n\tbottom: '\\u22A5',\n\tbowtie: '\\u22C8',\n\tboxbox: '\\u29C9',\n\tboxDL: '\\u2557',\n\tboxDl: '\\u2556',\n\tboxdL: '\\u2555',\n\tboxdl: '\\u2510',\n\tboxDR: '\\u2554',\n\tboxDr: '\\u2553',\n\tboxdR: '\\u2552',\n\tboxdr: '\\u250C',\n\tboxH: '\\u2550',\n\tboxh: '\\u2500',\n\tboxHD: '\\u2566',\n\tboxHd: '\\u2564',\n\tboxhD: '\\u2565',\n\tboxhd: '\\u252C',\n\tboxHU: '\\u2569',\n\tboxHu: '\\u2567',\n\tboxhU: '\\u2568',\n\tboxhu: '\\u2534',\n\tboxminus: '\\u229F',\n\tboxplus: '\\u229E',\n\tboxtimes: '\\u22A0',\n\tboxUL: '\\u255D',\n\tboxUl: '\\u255C',\n\tboxuL: '\\u255B',\n\tboxul: '\\u2518',\n\tboxUR: '\\u255A',\n\tboxUr: '\\u2559',\n\tboxuR: '\\u2558',\n\tboxur: '\\u2514',\n\tboxV: '\\u2551',\n\tboxv: '\\u2502',\n\tboxVH: '\\u256C',\n\tboxVh: '\\u256B',\n\tboxvH: '\\u256A',\n\tboxvh: '\\u253C',\n\tboxVL: '\\u2563',\n\tboxVl: '\\u2562',\n\tboxvL: '\\u2561',\n\tboxvl: '\\u2524',\n\tboxVR: '\\u2560',\n\tboxVr: '\\u255F',\n\tboxvR: '\\u255E',\n\tboxvr: '\\u251C',\n\tbprime: '\\u2035',\n\tBreve: '\\u02D8',\n\tbreve: '\\u02D8',\n\tbrvbar: '\\u00A6',\n\tBscr: '\\u212C',\n\tbscr: '\\uD835\\uDCB7',\n\tbsemi: '\\u204F',\n\tbsim: '\\u223D',\n\tbsime: '\\u22CD',\n\tbsol: '\\u005C',\n\tbsolb: '\\u29C5',\n\tbsolhsub: '\\u27C8',\n\tbull: '\\u2022',\n\tbullet: '\\u2022',\n\tbump: '\\u224E',\n\tbumpE: '\\u2AAE',\n\tbumpe: '\\u224F',\n\tBumpeq: '\\u224E',\n\tbumpeq: '\\u224F',\n\tCacute: '\\u0106',\n\tcacute: '\\u0107',\n\tCap: '\\u22D2',\n\tcap: '\\u2229',\n\tcapand: '\\u2A44',\n\tcapbrcup: '\\u2A49',\n\tcapcap: '\\u2A4B',\n\tcapcup: '\\u2A47',\n\tcapdot: '\\u2A40',\n\tCapitalDifferentialD: '\\u2145',\n\tcaps: '\\u2229\\uFE00',\n\tcaret: '\\u2041',\n\tcaron: '\\u02C7',\n\tCayleys: '\\u212D',\n\tccaps: '\\u2A4D',\n\tCcaron: '\\u010C',\n\tccaron: '\\u010D',\n\tCcedil: '\\u00C7',\n\tccedil: '\\u00E7',\n\tCcirc: '\\u0108',\n\tccirc: '\\u0109',\n\tCconint: '\\u2230',\n\tccups: '\\u2A4C',\n\tccupssm: '\\u2A50',\n\tCdot: '\\u010A',\n\tcdot: '\\u010B',\n\tcedil: '\\u00B8',\n\tCedilla: '\\u00B8',\n\tcemptyv: '\\u29B2',\n\tcent: '\\u00A2',\n\tCenterDot: '\\u00B7',\n\tcenterdot: '\\u00B7',\n\tCfr: '\\u212D',\n\tcfr: '\\uD835\\uDD20',\n\tCHcy: '\\u0427',\n\tchcy: '\\u0447',\n\tcheck: '\\u2713',\n\tcheckmark: '\\u2713',\n\tChi: '\\u03A7',\n\tchi: '\\u03C7',\n\tcir: '\\u25CB',\n\tcirc: '\\u02C6',\n\tcirceq: '\\u2257',\n\tcirclearrowleft: '\\u21BA',\n\tcirclearrowright: '\\u21BB',\n\tcircledast: '\\u229B',\n\tcircledcirc: '\\u229A',\n\tcircleddash: '\\u229D',\n\tCircleDot: '\\u2299',\n\tcircledR: '\\u00AE',\n\tcircledS: '\\u24C8',\n\tCircleMinus: '\\u2296',\n\tCirclePlus: '\\u2295',\n\tCircleTimes: '\\u2297',\n\tcirE: '\\u29C3',\n\tcire: '\\u2257',\n\tcirfnint: '\\u2A10',\n\tcirmid: '\\u2AEF',\n\tcirscir: '\\u29C2',\n\tClockwiseContourIntegral: '\\u2232',\n\tCloseCurlyDoubleQuote: '\\u201D',\n\tCloseCurlyQuote: '\\u2019',\n\tclubs: '\\u2663',\n\tclubsuit: '\\u2663',\n\tColon: '\\u2237',\n\tcolon: '\\u003A',\n\tColone: '\\u2A74',\n\tcolone: '\\u2254',\n\tcoloneq: '\\u2254',\n\tcomma: '\\u002C',\n\tcommat: '\\u0040',\n\tcomp: '\\u2201',\n\tcompfn: '\\u2218',\n\tcomplement: '\\u2201',\n\tcomplexes: '\\u2102',\n\tcong: '\\u2245',\n\tcongdot: '\\u2A6D',\n\tCongruent: '\\u2261',\n\tConint: '\\u222F',\n\tconint: '\\u222E',\n\tContourIntegral: '\\u222E',\n\tCopf: '\\u2102',\n\tcopf: '\\uD835\\uDD54',\n\tcoprod: '\\u2210',\n\tCoproduct: '\\u2210',\n\tCOPY: '\\u00A9',\n\tcopy: '\\u00A9',\n\tcopysr: '\\u2117',\n\tCounterClockwiseContourIntegral: '\\u2233',\n\tcrarr: '\\u21B5',\n\tCross: '\\u2A2F',\n\tcross: '\\u2717',\n\tCscr: '\\uD835\\uDC9E',\n\tcscr: '\\uD835\\uDCB8',\n\tcsub: '\\u2ACF',\n\tcsube: '\\u2AD1',\n\tcsup: '\\u2AD0',\n\tcsupe: '\\u2AD2',\n\tctdot: '\\u22EF',\n\tcudarrl: '\\u2938',\n\tcudarrr: '\\u2935',\n\tcuepr: '\\u22DE',\n\tcuesc: '\\u22DF',\n\tcularr: '\\u21B6',\n\tcularrp: '\\u293D',\n\tCup: '\\u22D3',\n\tcup: '\\u222A',\n\tcupbrcap: '\\u2A48',\n\tCupCap: '\\u224D',\n\tcupcap: '\\u2A46',\n\tcupcup: '\\u2A4A',\n\tcupdot: '\\u228D',\n\tcupor: '\\u2A45',\n\tcups: '\\u222A\\uFE00',\n\tcurarr: '\\u21B7',\n\tcurarrm: '\\u293C',\n\tcurlyeqprec: '\\u22DE',\n\tcurlyeqsucc: '\\u22DF',\n\tcurlyvee: '\\u22CE',\n\tcurlywedge: '\\u22CF',\n\tcurren: '\\u00A4',\n\tcurvearrowleft: '\\u21B6',\n\tcurvearrowright: '\\u21B7',\n\tcuvee: '\\u22CE',\n\tcuwed: '\\u22CF',\n\tcwconint: '\\u2232',\n\tcwint: '\\u2231',\n\tcylcty: '\\u232D',\n\tDagger: '\\u2021',\n\tdagger: '\\u2020',\n\tdaleth: '\\u2138',\n\tDarr: '\\u21A1',\n\tdArr: '\\u21D3',\n\tdarr: '\\u2193',\n\tdash: '\\u2010',\n\tDashv: '\\u2AE4',\n\tdashv: '\\u22A3',\n\tdbkarow: '\\u290F',\n\tdblac: '\\u02DD',\n\tDcaron: '\\u010E',\n\tdcaron: '\\u010F',\n\tDcy: '\\u0414',\n\tdcy: '\\u0434',\n\tDD: '\\u2145',\n\tdd: '\\u2146',\n\tddagger: '\\u2021',\n\tddarr: '\\u21CA',\n\tDDotrahd: '\\u2911',\n\tddotseq: '\\u2A77',\n\tdeg: '\\u00B0',\n\tDel: '\\u2207',\n\tDelta: '\\u0394',\n\tdelta: '\\u03B4',\n\tdemptyv: '\\u29B1',\n\tdfisht: '\\u297F',\n\tDfr: '\\uD835\\uDD07',\n\tdfr: '\\uD835\\uDD21',\n\tdHar: '\\u2965',\n\tdharl: '\\u21C3',\n\tdharr: '\\u21C2',\n\tDiacriticalAcute: '\\u00B4',\n\tDiacriticalDot: '\\u02D9',\n\tDiacriticalDoubleAcute: '\\u02DD',\n\tDiacriticalGrave: '\\u0060',\n\tDiacriticalTilde: '\\u02DC',\n\tdiam: '\\u22C4',\n\tDiamond: '\\u22C4',\n\tdiamond: '\\u22C4',\n\tdiamondsuit: '\\u2666',\n\tdiams: '\\u2666',\n\tdie: '\\u00A8',\n\tDifferentialD: '\\u2146',\n\tdigamma: '\\u03DD',\n\tdisin: '\\u22F2',\n\tdiv: '\\u00F7',\n\tdivide: '\\u00F7',\n\tdivideontimes: '\\u22C7',\n\tdivonx: '\\u22C7',\n\tDJcy: '\\u0402',\n\tdjcy: '\\u0452',\n\tdlcorn: '\\u231E',\n\tdlcrop: '\\u230D',\n\tdollar: '\\u0024',\n\tDopf: '\\uD835\\uDD3B',\n\tdopf: '\\uD835\\uDD55',\n\tDot: '\\u00A8',\n\tdot: '\\u02D9',\n\tDotDot: '\\u20DC',\n\tdoteq: '\\u2250',\n\tdoteqdot: '\\u2251',\n\tDotEqual: '\\u2250',\n\tdotminus: '\\u2238',\n\tdotplus: '\\u2214',\n\tdotsquare: '\\u22A1',\n\tdoublebarwedge: '\\u2306',\n\tDoubleContourIntegral: '\\u222F',\n\tDoubleDot: '\\u00A8',\n\tDoubleDownArrow: '\\u21D3',\n\tDoubleLeftArrow: '\\u21D0',\n\tDoubleLeftRightArrow: '\\u21D4',\n\tDoubleLeftTee: '\\u2AE4',\n\tDoubleLongLeftArrow: '\\u27F8',\n\tDoubleLongLeftRightArrow: '\\u27FA',\n\tDoubleLongRightArrow: '\\u27F9',\n\tDoubleRightArrow: '\\u21D2',\n\tDoubleRightTee: '\\u22A8',\n\tDoubleUpArrow: '\\u21D1',\n\tDoubleUpDownArrow: '\\u21D5',\n\tDoubleVerticalBar: '\\u2225',\n\tDownArrow: '\\u2193',\n\tDownarrow: '\\u21D3',\n\tdownarrow: '\\u2193',\n\tDownArrowBar: '\\u2913',\n\tDownArrowUpArrow: '\\u21F5',\n\tDownBreve: '\\u0311',\n\tdowndownarrows: '\\u21CA',\n\tdownharpoonleft: '\\u21C3',\n\tdownharpoonright: '\\u21C2',\n\tDownLeftRightVector: '\\u2950',\n\tDownLeftTeeVector: '\\u295E',\n\tDownLeftVector: '\\u21BD',\n\tDownLeftVectorBar: '\\u2956',\n\tDownRightTeeVector: '\\u295F',\n\tDownRightVector: '\\u21C1',\n\tDownRightVectorBar: '\\u2957',\n\tDownTee: '\\u22A4',\n\tDownTeeArrow: '\\u21A7',\n\tdrbkarow: '\\u2910',\n\tdrcorn: '\\u231F',\n\tdrcrop: '\\u230C',\n\tDscr: '\\uD835\\uDC9F',\n\tdscr: '\\uD835\\uDCB9',\n\tDScy: '\\u0405',\n\tdscy: '\\u0455',\n\tdsol: '\\u29F6',\n\tDstrok: '\\u0110',\n\tdstrok: '\\u0111',\n\tdtdot: '\\u22F1',\n\tdtri: '\\u25BF',\n\tdtrif: '\\u25BE',\n\tduarr: '\\u21F5',\n\tduhar: '\\u296F',\n\tdwangle: '\\u29A6',\n\tDZcy: '\\u040F',\n\tdzcy: '\\u045F',\n\tdzigrarr: '\\u27FF',\n\tEacute: '\\u00C9',\n\teacute: '\\u00E9',\n\teaster: '\\u2A6E',\n\tEcaron: '\\u011A',\n\tecaron: '\\u011B',\n\tecir: '\\u2256',\n\tEcirc: '\\u00CA',\n\tecirc: '\\u00EA',\n\tecolon: '\\u2255',\n\tEcy: '\\u042D',\n\tecy: '\\u044D',\n\teDDot: '\\u2A77',\n\tEdot: '\\u0116',\n\teDot: '\\u2251',\n\tedot: '\\u0117',\n\tee: '\\u2147',\n\tefDot: '\\u2252',\n\tEfr: '\\uD835\\uDD08',\n\tefr: '\\uD835\\uDD22',\n\teg: '\\u2A9A',\n\tEgrave: '\\u00C8',\n\tegrave: '\\u00E8',\n\tegs: '\\u2A96',\n\tegsdot: '\\u2A98',\n\tel: '\\u2A99',\n\tElement: '\\u2208',\n\telinters: '\\u23E7',\n\tell: '\\u2113',\n\tels: '\\u2A95',\n\telsdot: '\\u2A97',\n\tEmacr: '\\u0112',\n\temacr: '\\u0113',\n\tempty: '\\u2205',\n\temptyset: '\\u2205',\n\tEmptySmallSquare: '\\u25FB',\n\temptyv: '\\u2205',\n\tEmptyVerySmallSquare: '\\u25AB',\n\temsp: '\\u2003',\n\temsp13: '\\u2004',\n\temsp14: '\\u2005',\n\tENG: '\\u014A',\n\teng: '\\u014B',\n\tensp: '\\u2002',\n\tEogon: '\\u0118',\n\teogon: '\\u0119',\n\tEopf: '\\uD835\\uDD3C',\n\teopf: '\\uD835\\uDD56',\n\tepar: '\\u22D5',\n\teparsl: '\\u29E3',\n\teplus: '\\u2A71',\n\tepsi: '\\u03B5',\n\tEpsilon: '\\u0395',\n\tepsilon: '\\u03B5',\n\tepsiv: '\\u03F5',\n\teqcirc: '\\u2256',\n\teqcolon: '\\u2255',\n\teqsim: '\\u2242',\n\teqslantgtr: '\\u2A96',\n\teqslantless: '\\u2A95',\n\tEqual: '\\u2A75',\n\tequals: '\\u003D',\n\tEqualTilde: '\\u2242',\n\tequest: '\\u225F',\n\tEquilibrium: '\\u21CC',\n\tequiv: '\\u2261',\n\tequivDD: '\\u2A78',\n\teqvparsl: '\\u29E5',\n\terarr: '\\u2971',\n\terDot: '\\u2253',\n\tEscr: '\\u2130',\n\tescr: '\\u212F',\n\tesdot: '\\u2250',\n\tEsim: '\\u2A73',\n\tesim: '\\u2242',\n\tEta: '\\u0397',\n\teta: '\\u03B7',\n\tETH: '\\u00D0',\n\teth: '\\u00F0',\n\tEuml: '\\u00CB',\n\teuml: '\\u00EB',\n\teuro: '\\u20AC',\n\texcl: '\\u0021',\n\texist: '\\u2203',\n\tExists: '\\u2203',\n\texpectation: '\\u2130',\n\tExponentialE: '\\u2147',\n\texponentiale: '\\u2147',\n\tfallingdotseq: '\\u2252',\n\tFcy: '\\u0424',\n\tfcy: '\\u0444',\n\tfemale: '\\u2640',\n\tffilig: '\\uFB03',\n\tfflig: '\\uFB00',\n\tffllig: '\\uFB04',\n\tFfr: '\\uD835\\uDD09',\n\tffr: '\\uD835\\uDD23',\n\tfilig: '\\uFB01',\n\tFilledSmallSquare: '\\u25FC',\n\tFilledVerySmallSquare: '\\u25AA',\n\tfjlig: '\\u0066\\u006A',\n\tflat: '\\u266D',\n\tfllig: '\\uFB02',\n\tfltns: '\\u25B1',\n\tfnof: '\\u0192',\n\tFopf: '\\uD835\\uDD3D',\n\tfopf: '\\uD835\\uDD57',\n\tForAll: '\\u2200',\n\tforall: '\\u2200',\n\tfork: '\\u22D4',\n\tforkv: '\\u2AD9',\n\tFouriertrf: '\\u2131',\n\tfpartint: '\\u2A0D',\n\tfrac12: '\\u00BD',\n\tfrac13: '\\u2153',\n\tfrac14: '\\u00BC',\n\tfrac15: '\\u2155',\n\tfrac16: '\\u2159',\n\tfrac18: '\\u215B',\n\tfrac23: '\\u2154',\n\tfrac25: '\\u2156',\n\tfrac34: '\\u00BE',\n\tfrac35: '\\u2157',\n\tfrac38: '\\u215C',\n\tfrac45: '\\u2158',\n\tfrac56: '\\u215A',\n\tfrac58: '\\u215D',\n\tfrac78: '\\u215E',\n\tfrasl: '\\u2044',\n\tfrown: '\\u2322',\n\tFscr: '\\u2131',\n\tfscr: '\\uD835\\uDCBB',\n\tgacute: '\\u01F5',\n\tGamma: '\\u0393',\n\tgamma: '\\u03B3',\n\tGammad: '\\u03DC',\n\tgammad: '\\u03DD',\n\tgap: '\\u2A86',\n\tGbreve: '\\u011E',\n\tgbreve: '\\u011F',\n\tGcedil: '\\u0122',\n\tGcirc: '\\u011C',\n\tgcirc: '\\u011D',\n\tGcy: '\\u0413',\n\tgcy: '\\u0433',\n\tGdot: '\\u0120',\n\tgdot: '\\u0121',\n\tgE: '\\u2267',\n\tge: '\\u2265',\n\tgEl: '\\u2A8C',\n\tgel: '\\u22DB',\n\tgeq: '\\u2265',\n\tgeqq: '\\u2267',\n\tgeqslant: '\\u2A7E',\n\tges: '\\u2A7E',\n\tgescc: '\\u2AA9',\n\tgesdot: '\\u2A80',\n\tgesdoto: '\\u2A82',\n\tgesdotol: '\\u2A84',\n\tgesl: '\\u22DB\\uFE00',\n\tgesles: '\\u2A94',\n\tGfr: '\\uD835\\uDD0A',\n\tgfr: '\\uD835\\uDD24',\n\tGg: '\\u22D9',\n\tgg: '\\u226B',\n\tggg: '\\u22D9',\n\tgimel: '\\u2137',\n\tGJcy: '\\u0403',\n\tgjcy: '\\u0453',\n\tgl: '\\u2277',\n\tgla: '\\u2AA5',\n\tglE: '\\u2A92',\n\tglj: '\\u2AA4',\n\tgnap: '\\u2A8A',\n\tgnapprox: '\\u2A8A',\n\tgnE: '\\u2269',\n\tgne: '\\u2A88',\n\tgneq: '\\u2A88',\n\tgneqq: '\\u2269',\n\tgnsim: '\\u22E7',\n\tGopf: '\\uD835\\uDD3E',\n\tgopf: '\\uD835\\uDD58',\n\tgrave: '\\u0060',\n\tGreaterEqual: '\\u2265',\n\tGreaterEqualLess: '\\u22DB',\n\tGreaterFullEqual: '\\u2267',\n\tGreaterGreater: '\\u2AA2',\n\tGreaterLess: '\\u2277',\n\tGreaterSlantEqual: '\\u2A7E',\n\tGreaterTilde: '\\u2273',\n\tGscr: '\\uD835\\uDCA2',\n\tgscr: '\\u210A',\n\tgsim: '\\u2273',\n\tgsime: '\\u2A8E',\n\tgsiml: '\\u2A90',\n\tGt: '\\u226B',\n\tGT: '\\u003E',\n\tgt: '\\u003E',\n\tgtcc: '\\u2AA7',\n\tgtcir: '\\u2A7A',\n\tgtdot: '\\u22D7',\n\tgtlPar: '\\u2995',\n\tgtquest: '\\u2A7C',\n\tgtrapprox: '\\u2A86',\n\tgtrarr: '\\u2978',\n\tgtrdot: '\\u22D7',\n\tgtreqless: '\\u22DB',\n\tgtreqqless: '\\u2A8C',\n\tgtrless: '\\u2277',\n\tgtrsim: '\\u2273',\n\tgvertneqq: '\\u2269\\uFE00',\n\tgvnE: '\\u2269\\uFE00',\n\tHacek: '\\u02C7',\n\thairsp: '\\u200A',\n\thalf: '\\u00BD',\n\thamilt: '\\u210B',\n\tHARDcy: '\\u042A',\n\thardcy: '\\u044A',\n\thArr: '\\u21D4',\n\tharr: '\\u2194',\n\tharrcir: '\\u2948',\n\tharrw: '\\u21AD',\n\tHat: '\\u005E',\n\thbar: '\\u210F',\n\tHcirc: '\\u0124',\n\thcirc: '\\u0125',\n\thearts: '\\u2665',\n\theartsuit: '\\u2665',\n\thellip: '\\u2026',\n\thercon: '\\u22B9',\n\tHfr: '\\u210C',\n\thfr: '\\uD835\\uDD25',\n\tHilbertSpace: '\\u210B',\n\thksearow: '\\u2925',\n\thkswarow: '\\u2926',\n\thoarr: '\\u21FF',\n\thomtht: '\\u223B',\n\thookleftarrow: '\\u21A9',\n\thookrightarrow: '\\u21AA',\n\tHopf: '\\u210D',\n\thopf: '\\uD835\\uDD59',\n\thorbar: '\\u2015',\n\tHorizontalLine: '\\u2500',\n\tHscr: '\\u210B',\n\thscr: '\\uD835\\uDCBD',\n\thslash: '\\u210F',\n\tHstrok: '\\u0126',\n\thstrok: '\\u0127',\n\tHumpDownHump: '\\u224E',\n\tHumpEqual: '\\u224F',\n\thybull: '\\u2043',\n\thyphen: '\\u2010',\n\tIacute: '\\u00CD',\n\tiacute: '\\u00ED',\n\tic: '\\u2063',\n\tIcirc: '\\u00CE',\n\ticirc: '\\u00EE',\n\tIcy: '\\u0418',\n\ticy: '\\u0438',\n\tIdot: '\\u0130',\n\tIEcy: '\\u0415',\n\tiecy: '\\u0435',\n\tiexcl: '\\u00A1',\n\tiff: '\\u21D4',\n\tIfr: '\\u2111',\n\tifr: '\\uD835\\uDD26',\n\tIgrave: '\\u00CC',\n\tigrave: '\\u00EC',\n\tii: '\\u2148',\n\tiiiint: '\\u2A0C',\n\tiiint: '\\u222D',\n\tiinfin: '\\u29DC',\n\tiiota: '\\u2129',\n\tIJlig: '\\u0132',\n\tijlig: '\\u0133',\n\tIm: '\\u2111',\n\tImacr: '\\u012A',\n\timacr: '\\u012B',\n\timage: '\\u2111',\n\tImaginaryI: '\\u2148',\n\timagline: '\\u2110',\n\timagpart: '\\u2111',\n\timath: '\\u0131',\n\timof: '\\u22B7',\n\timped: '\\u01B5',\n\tImplies: '\\u21D2',\n\tin: '\\u2208',\n\tincare: '\\u2105',\n\tinfin: '\\u221E',\n\tinfintie: '\\u29DD',\n\tinodot: '\\u0131',\n\tInt: '\\u222C',\n\tint: '\\u222B',\n\tintcal: '\\u22BA',\n\tintegers: '\\u2124',\n\tIntegral: '\\u222B',\n\tintercal: '\\u22BA',\n\tIntersection: '\\u22C2',\n\tintlarhk: '\\u2A17',\n\tintprod: '\\u2A3C',\n\tInvisibleComma: '\\u2063',\n\tInvisibleTimes: '\\u2062',\n\tIOcy: '\\u0401',\n\tiocy: '\\u0451',\n\tIogon: '\\u012E',\n\tiogon: '\\u012F',\n\tIopf: '\\uD835\\uDD40',\n\tiopf: '\\uD835\\uDD5A',\n\tIota: '\\u0399',\n\tiota: '\\u03B9',\n\tiprod: '\\u2A3C',\n\tiquest: '\\u00BF',\n\tIscr: '\\u2110',\n\tiscr: '\\uD835\\uDCBE',\n\tisin: '\\u2208',\n\tisindot: '\\u22F5',\n\tisinE: '\\u22F9',\n\tisins: '\\u22F4',\n\tisinsv: '\\u22F3',\n\tisinv: '\\u2208',\n\tit: '\\u2062',\n\tItilde: '\\u0128',\n\titilde: '\\u0129',\n\tIukcy: '\\u0406',\n\tiukcy: '\\u0456',\n\tIuml: '\\u00CF',\n\tiuml: '\\u00EF',\n\tJcirc: '\\u0134',\n\tjcirc: '\\u0135',\n\tJcy: '\\u0419',\n\tjcy: '\\u0439',\n\tJfr: '\\uD835\\uDD0D',\n\tjfr: '\\uD835\\uDD27',\n\tjmath: '\\u0237',\n\tJopf: '\\uD835\\uDD41',\n\tjopf: '\\uD835\\uDD5B',\n\tJscr: '\\uD835\\uDCA5',\n\tjscr: '\\uD835\\uDCBF',\n\tJsercy: '\\u0408',\n\tjsercy: '\\u0458',\n\tJukcy: '\\u0404',\n\tjukcy: '\\u0454',\n\tKappa: '\\u039A',\n\tkappa: '\\u03BA',\n\tkappav: '\\u03F0',\n\tKcedil: '\\u0136',\n\tkcedil: '\\u0137',\n\tKcy: '\\u041A',\n\tkcy: '\\u043A',\n\tKfr: '\\uD835\\uDD0E',\n\tkfr: '\\uD835\\uDD28',\n\tkgreen: '\\u0138',\n\tKHcy: '\\u0425',\n\tkhcy: '\\u0445',\n\tKJcy: '\\u040C',\n\tkjcy: '\\u045C',\n\tKopf: '\\uD835\\uDD42',\n\tkopf: '\\uD835\\uDD5C',\n\tKscr: '\\uD835\\uDCA6',\n\tkscr: '\\uD835\\uDCC0',\n\tlAarr: '\\u21DA',\n\tLacute: '\\u0139',\n\tlacute: '\\u013A',\n\tlaemptyv: '\\u29B4',\n\tlagran: '\\u2112',\n\tLambda: '\\u039B',\n\tlambda: '\\u03BB',\n\tLang: '\\u27EA',\n\tlang: '\\u27E8',\n\tlangd: '\\u2991',\n\tlangle: '\\u27E8',\n\tlap: '\\u2A85',\n\tLaplacetrf: '\\u2112',\n\tlaquo: '\\u00AB',\n\tLarr: '\\u219E',\n\tlArr: '\\u21D0',\n\tlarr: '\\u2190',\n\tlarrb: '\\u21E4',\n\tlarrbfs: '\\u291F',\n\tlarrfs: '\\u291D',\n\tlarrhk: '\\u21A9',\n\tlarrlp: '\\u21AB',\n\tlarrpl: '\\u2939',\n\tlarrsim: '\\u2973',\n\tlarrtl: '\\u21A2',\n\tlat: '\\u2AAB',\n\tlAtail: '\\u291B',\n\tlatail: '\\u2919',\n\tlate: '\\u2AAD',\n\tlates: '\\u2AAD\\uFE00',\n\tlBarr: '\\u290E',\n\tlbarr: '\\u290C',\n\tlbbrk: '\\u2772',\n\tlbrace: '\\u007B',\n\tlbrack: '\\u005B',\n\tlbrke: '\\u298B',\n\tlbrksld: '\\u298F',\n\tlbrkslu: '\\u298D',\n\tLcaron: '\\u013D',\n\tlcaron: '\\u013E',\n\tLcedil: '\\u013B',\n\tlcedil: '\\u013C',\n\tlceil: '\\u2308',\n\tlcub: '\\u007B',\n\tLcy: '\\u041B',\n\tlcy: '\\u043B',\n\tldca: '\\u2936',\n\tldquo: '\\u201C',\n\tldquor: '\\u201E',\n\tldrdhar: '\\u2967',\n\tldrushar: '\\u294B',\n\tldsh: '\\u21B2',\n\tlE: '\\u2266',\n\tle: '\\u2264',\n\tLeftAngleBracket: '\\u27E8',\n\tLeftArrow: '\\u2190',\n\tLeftarrow: '\\u21D0',\n\tleftarrow: '\\u2190',\n\tLeftArrowBar: '\\u21E4',\n\tLeftArrowRightArrow: '\\u21C6',\n\tleftarrowtail: '\\u21A2',\n\tLeftCeiling: '\\u2308',\n\tLeftDoubleBracket: '\\u27E6',\n\tLeftDownTeeVector: '\\u2961',\n\tLeftDownVector: '\\u21C3',\n\tLeftDownVectorBar: '\\u2959',\n\tLeftFloor: '\\u230A',\n\tleftharpoondown: '\\u21BD',\n\tleftharpoonup: '\\u21BC',\n\tleftleftarrows: '\\u21C7',\n\tLeftRightArrow: '\\u2194',\n\tLeftrightarrow: '\\u21D4',\n\tleftrightarrow: '\\u2194',\n\tleftrightarrows: '\\u21C6',\n\tleftrightharpoons: '\\u21CB',\n\tleftrightsquigarrow: '\\u21AD',\n\tLeftRightVector: '\\u294E',\n\tLeftTee: '\\u22A3',\n\tLeftTeeArrow: '\\u21A4',\n\tLeftTeeVector: '\\u295A',\n\tleftthreetimes: '\\u22CB',\n\tLeftTriangle: '\\u22B2',\n\tLeftTriangleBar: '\\u29CF',\n\tLeftTriangleEqual: '\\u22B4',\n\tLeftUpDownVector: '\\u2951',\n\tLeftUpTeeVector: '\\u2960',\n\tLeftUpVector: '\\u21BF',\n\tLeftUpVectorBar: '\\u2958',\n\tLeftVector: '\\u21BC',\n\tLeftVectorBar: '\\u2952',\n\tlEg: '\\u2A8B',\n\tleg: '\\u22DA',\n\tleq: '\\u2264',\n\tleqq: '\\u2266',\n\tleqslant: '\\u2A7D',\n\tles: '\\u2A7D',\n\tlescc: '\\u2AA8',\n\tlesdot: '\\u2A7F',\n\tlesdoto: '\\u2A81',\n\tlesdotor: '\\u2A83',\n\tlesg: '\\u22DA\\uFE00',\n\tlesges: '\\u2A93',\n\tlessapprox: '\\u2A85',\n\tlessdot: '\\u22D6',\n\tlesseqgtr: '\\u22DA',\n\tlesseqqgtr: '\\u2A8B',\n\tLessEqualGreater: '\\u22DA',\n\tLessFullEqual: '\\u2266',\n\tLessGreater: '\\u2276',\n\tlessgtr: '\\u2276',\n\tLessLess: '\\u2AA1',\n\tlesssim: '\\u2272',\n\tLessSlantEqual: '\\u2A7D',\n\tLessTilde: '\\u2272',\n\tlfisht: '\\u297C',\n\tlfloor: '\\u230A',\n\tLfr: '\\uD835\\uDD0F',\n\tlfr: '\\uD835\\uDD29',\n\tlg: '\\u2276',\n\tlgE: '\\u2A91',\n\tlHar: '\\u2962',\n\tlhard: '\\u21BD',\n\tlharu: '\\u21BC',\n\tlharul: '\\u296A',\n\tlhblk: '\\u2584',\n\tLJcy: '\\u0409',\n\tljcy: '\\u0459',\n\tLl: '\\u22D8',\n\tll: '\\u226A',\n\tllarr: '\\u21C7',\n\tllcorner: '\\u231E',\n\tLleftarrow: '\\u21DA',\n\tllhard: '\\u296B',\n\tlltri: '\\u25FA',\n\tLmidot: '\\u013F',\n\tlmidot: '\\u0140',\n\tlmoust: '\\u23B0',\n\tlmoustache: '\\u23B0',\n\tlnap: '\\u2A89',\n\tlnapprox: '\\u2A89',\n\tlnE: '\\u2268',\n\tlne: '\\u2A87',\n\tlneq: '\\u2A87',\n\tlneqq: '\\u2268',\n\tlnsim: '\\u22E6',\n\tloang: '\\u27EC',\n\tloarr: '\\u21FD',\n\tlobrk: '\\u27E6',\n\tLongLeftArrow: '\\u27F5',\n\tLongleftarrow: '\\u27F8',\n\tlongleftarrow: '\\u27F5',\n\tLongLeftRightArrow: '\\u27F7',\n\tLongleftrightarrow: '\\u27FA',\n\tlongleftrightarrow: '\\u27F7',\n\tlongmapsto: '\\u27FC',\n\tLongRightArrow: '\\u27F6',\n\tLongrightarrow: '\\u27F9',\n\tlongrightarrow: '\\u27F6',\n\tlooparrowleft: '\\u21AB',\n\tlooparrowright: '\\u21AC',\n\tlopar: '\\u2985',\n\tLopf: '\\uD835\\uDD43',\n\tlopf: '\\uD835\\uDD5D',\n\tloplus: '\\u2A2D',\n\tlotimes: '\\u2A34',\n\tlowast: '\\u2217',\n\tlowbar: '\\u005F',\n\tLowerLeftArrow: '\\u2199',\n\tLowerRightArrow: '\\u2198',\n\tloz: '\\u25CA',\n\tlozenge: '\\u25CA',\n\tlozf: '\\u29EB',\n\tlpar: '\\u0028',\n\tlparlt: '\\u2993',\n\tlrarr: '\\u21C6',\n\tlrcorner: '\\u231F',\n\tlrhar: '\\u21CB',\n\tlrhard: '\\u296D',\n\tlrm: '\\u200E',\n\tlrtri: '\\u22BF',\n\tlsaquo: '\\u2039',\n\tLscr: '\\u2112',\n\tlscr: '\\uD835\\uDCC1',\n\tLsh: '\\u21B0',\n\tlsh: '\\u21B0',\n\tlsim: '\\u2272',\n\tlsime: '\\u2A8D',\n\tlsimg: '\\u2A8F',\n\tlsqb: '\\u005B',\n\tlsquo: '\\u2018',\n\tlsquor: '\\u201A',\n\tLstrok: '\\u0141',\n\tlstrok: '\\u0142',\n\tLt: '\\u226A',\n\tLT: '\\u003C',\n\tlt: '\\u003C',\n\tltcc: '\\u2AA6',\n\tltcir: '\\u2A79',\n\tltdot: '\\u22D6',\n\tlthree: '\\u22CB',\n\tltimes: '\\u22C9',\n\tltlarr: '\\u2976',\n\tltquest: '\\u2A7B',\n\tltri: '\\u25C3',\n\tltrie: '\\u22B4',\n\tltrif: '\\u25C2',\n\tltrPar: '\\u2996',\n\tlurdshar: '\\u294A',\n\tluruhar: '\\u2966',\n\tlvertneqq: '\\u2268\\uFE00',\n\tlvnE: '\\u2268\\uFE00',\n\tmacr: '\\u00AF',\n\tmale: '\\u2642',\n\tmalt: '\\u2720',\n\tmaltese: '\\u2720',\n\tMap: '\\u2905',\n\tmap: '\\u21A6',\n\tmapsto: '\\u21A6',\n\tmapstodown: '\\u21A7',\n\tmapstoleft: '\\u21A4',\n\tmapstoup: '\\u21A5',\n\tmarker: '\\u25AE',\n\tmcomma: '\\u2A29',\n\tMcy: '\\u041C',\n\tmcy: '\\u043C',\n\tmdash: '\\u2014',\n\tmDDot: '\\u223A',\n\tmeasuredangle: '\\u2221',\n\tMediumSpace: '\\u205F',\n\tMellintrf: '\\u2133',\n\tMfr: '\\uD835\\uDD10',\n\tmfr: '\\uD835\\uDD2A',\n\tmho: '\\u2127',\n\tmicro: '\\u00B5',\n\tmid: '\\u2223',\n\tmidast: '\\u002A',\n\tmidcir: '\\u2AF0',\n\tmiddot: '\\u00B7',\n\tminus: '\\u2212',\n\tminusb: '\\u229F',\n\tminusd: '\\u2238',\n\tminusdu: '\\u2A2A',\n\tMinusPlus: '\\u2213',\n\tmlcp: '\\u2ADB',\n\tmldr: '\\u2026',\n\tmnplus: '\\u2213',\n\tmodels: '\\u22A7',\n\tMopf: '\\uD835\\uDD44',\n\tmopf: '\\uD835\\uDD5E',\n\tmp: '\\u2213',\n\tMscr: '\\u2133',\n\tmscr: '\\uD835\\uDCC2',\n\tmstpos: '\\u223E',\n\tMu: '\\u039C',\n\tmu: '\\u03BC',\n\tmultimap: '\\u22B8',\n\tmumap: '\\u22B8',\n\tnabla: '\\u2207',\n\tNacute: '\\u0143',\n\tnacute: '\\u0144',\n\tnang: '\\u2220\\u20D2',\n\tnap: '\\u2249',\n\tnapE: '\\u2A70\\u0338',\n\tnapid: '\\u224B\\u0338',\n\tnapos: '\\u0149',\n\tnapprox: '\\u2249',\n\tnatur: '\\u266E',\n\tnatural: '\\u266E',\n\tnaturals: '\\u2115',\n\tnbsp: '\\u00A0',\n\tnbump: '\\u224E\\u0338',\n\tnbumpe: '\\u224F\\u0338',\n\tncap: '\\u2A43',\n\tNcaron: '\\u0147',\n\tncaron: '\\u0148',\n\tNcedil: '\\u0145',\n\tncedil: '\\u0146',\n\tncong: '\\u2247',\n\tncongdot: '\\u2A6D\\u0338',\n\tncup: '\\u2A42',\n\tNcy: '\\u041D',\n\tncy: '\\u043D',\n\tndash: '\\u2013',\n\tne: '\\u2260',\n\tnearhk: '\\u2924',\n\tneArr: '\\u21D7',\n\tnearr: '\\u2197',\n\tnearrow: '\\u2197',\n\tnedot: '\\u2250\\u0338',\n\tNegativeMediumSpace: '\\u200B',\n\tNegativeThickSpace: '\\u200B',\n\tNegativeThinSpace: '\\u200B',\n\tNegativeVeryThinSpace: '\\u200B',\n\tnequiv: '\\u2262',\n\tnesear: '\\u2928',\n\tnesim: '\\u2242\\u0338',\n\tNestedGreaterGreater: '\\u226B',\n\tNestedLessLess: '\\u226A',\n\tNewLine: '\\u000A',\n\tnexist: '\\u2204',\n\tnexists: '\\u2204',\n\tNfr: '\\uD835\\uDD11',\n\tnfr: '\\uD835\\uDD2B',\n\tngE: '\\u2267\\u0338',\n\tnge: '\\u2271',\n\tngeq: '\\u2271',\n\tngeqq: '\\u2267\\u0338',\n\tngeqslant: '\\u2A7E\\u0338',\n\tnges: '\\u2A7E\\u0338',\n\tnGg: '\\u22D9\\u0338',\n\tngsim: '\\u2275',\n\tnGt: '\\u226B\\u20D2',\n\tngt: '\\u226F',\n\tngtr: '\\u226F',\n\tnGtv: '\\u226B\\u0338',\n\tnhArr: '\\u21CE',\n\tnharr: '\\u21AE',\n\tnhpar: '\\u2AF2',\n\tni: '\\u220B',\n\tnis: '\\u22FC',\n\tnisd: '\\u22FA',\n\tniv: '\\u220B',\n\tNJcy: '\\u040A',\n\tnjcy: '\\u045A',\n\tnlArr: '\\u21CD',\n\tnlarr: '\\u219A',\n\tnldr: '\\u2025',\n\tnlE: '\\u2266\\u0338',\n\tnle: '\\u2270',\n\tnLeftarrow: '\\u21CD',\n\tnleftarrow: '\\u219A',\n\tnLeftrightarrow: '\\u21CE',\n\tnleftrightarrow: '\\u21AE',\n\tnleq: '\\u2270',\n\tnleqq: '\\u2266\\u0338',\n\tnleqslant: '\\u2A7D\\u0338',\n\tnles: '\\u2A7D\\u0338',\n\tnless: '\\u226E',\n\tnLl: '\\u22D8\\u0338',\n\tnlsim: '\\u2274',\n\tnLt: '\\u226A\\u20D2',\n\tnlt: '\\u226E',\n\tnltri: '\\u22EA',\n\tnltrie: '\\u22EC',\n\tnLtv: '\\u226A\\u0338',\n\tnmid: '\\u2224',\n\tNoBreak: '\\u2060',\n\tNonBreakingSpace: '\\u00A0',\n\tNopf: '\\u2115',\n\tnopf: '\\uD835\\uDD5F',\n\tNot: '\\u2AEC',\n\tnot: '\\u00AC',\n\tNotCongruent: '\\u2262',\n\tNotCupCap: '\\u226D',\n\tNotDoubleVerticalBar: '\\u2226',\n\tNotElement: '\\u2209',\n\tNotEqual: '\\u2260',\n\tNotEqualTilde: '\\u2242\\u0338',\n\tNotExists: '\\u2204',\n\tNotGreater: '\\u226F',\n\tNotGreaterEqual: '\\u2271',\n\tNotGreaterFullEqual: '\\u2267\\u0338',\n\tNotGreaterGreater: '\\u226B\\u0338',\n\tNotGreaterLess: '\\u2279',\n\tNotGreaterSlantEqual: '\\u2A7E\\u0338',\n\tNotGreaterTilde: '\\u2275',\n\tNotHumpDownHump: '\\u224E\\u0338',\n\tNotHumpEqual: '\\u224F\\u0338',\n\tnotin: '\\u2209',\n\tnotindot: '\\u22F5\\u0338',\n\tnotinE: '\\u22F9\\u0338',\n\tnotinva: '\\u2209',\n\tnotinvb: '\\u22F7',\n\tnotinvc: '\\u22F6',\n\tNotLeftTriangle: '\\u22EA',\n\tNotLeftTriangleBar: '\\u29CF\\u0338',\n\tNotLeftTriangleEqual: '\\u22EC',\n\tNotLess: '\\u226E',\n\tNotLessEqual: '\\u2270',\n\tNotLessGreater: '\\u2278',\n\tNotLessLess: '\\u226A\\u0338',\n\tNotLessSlantEqual: '\\u2A7D\\u0338',\n\tNotLessTilde: '\\u2274',\n\tNotNestedGreaterGreater: '\\u2AA2\\u0338',\n\tNotNestedLessLess: '\\u2AA1\\u0338',\n\tnotni: '\\u220C',\n\tnotniva: '\\u220C',\n\tnotnivb: '\\u22FE',\n\tnotnivc: '\\u22FD',\n\tNotPrecedes: '\\u2280',\n\tNotPrecedesEqual: '\\u2AAF\\u0338',\n\tNotPrecedesSlantEqual: '\\u22E0',\n\tNotReverseElement: '\\u220C',\n\tNotRightTriangle: '\\u22EB',\n\tNotRightTriangleBar: '\\u29D0\\u0338',\n\tNotRightTriangleEqual: '\\u22ED',\n\tNotSquareSubset: '\\u228F\\u0338',\n\tNotSquareSubsetEqual: '\\u22E2',\n\tNotSquareSuperset: '\\u2290\\u0338',\n\tNotSquareSupersetEqual: '\\u22E3',\n\tNotSubset: '\\u2282\\u20D2',\n\tNotSubsetEqual: '\\u2288',\n\tNotSucceeds: '\\u2281',\n\tNotSucceedsEqual: '\\u2AB0\\u0338',\n\tNotSucceedsSlantEqual: '\\u22E1',\n\tNotSucceedsTilde: '\\u227F\\u0338',\n\tNotSuperset: '\\u2283\\u20D2',\n\tNotSupersetEqual: '\\u2289',\n\tNotTilde: '\\u2241',\n\tNotTildeEqual: '\\u2244',\n\tNotTildeFullEqual: '\\u2247',\n\tNotTildeTilde: '\\u2249',\n\tNotVerticalBar: '\\u2224',\n\tnpar: '\\u2226',\n\tnparallel: '\\u2226',\n\tnparsl: '\\u2AFD\\u20E5',\n\tnpart: '\\u2202\\u0338',\n\tnpolint: '\\u2A14',\n\tnpr: '\\u2280',\n\tnprcue: '\\u22E0',\n\tnpre: '\\u2AAF\\u0338',\n\tnprec: '\\u2280',\n\tnpreceq: '\\u2AAF\\u0338',\n\tnrArr: '\\u21CF',\n\tnrarr: '\\u219B',\n\tnrarrc: '\\u2933\\u0338',\n\tnrarrw: '\\u219D\\u0338',\n\tnRightarrow: '\\u21CF',\n\tnrightarrow: '\\u219B',\n\tnrtri: '\\u22EB',\n\tnrtrie: '\\u22ED',\n\tnsc: '\\u2281',\n\tnsccue: '\\u22E1',\n\tnsce: '\\u2AB0\\u0338',\n\tNscr: '\\uD835\\uDCA9',\n\tnscr: '\\uD835\\uDCC3',\n\tnshortmid: '\\u2224',\n\tnshortparallel: '\\u2226',\n\tnsim: '\\u2241',\n\tnsime: '\\u2244',\n\tnsimeq: '\\u2244',\n\tnsmid: '\\u2224',\n\tnspar: '\\u2226',\n\tnsqsube: '\\u22E2',\n\tnsqsupe: '\\u22E3',\n\tnsub: '\\u2284',\n\tnsubE: '\\u2AC5\\u0338',\n\tnsube: '\\u2288',\n\tnsubset: '\\u2282\\u20D2',\n\tnsubseteq: '\\u2288',\n\tnsubseteqq: '\\u2AC5\\u0338',\n\tnsucc: '\\u2281',\n\tnsucceq: '\\u2AB0\\u0338',\n\tnsup: '\\u2285',\n\tnsupE: '\\u2AC6\\u0338',\n\tnsupe: '\\u2289',\n\tnsupset: '\\u2283\\u20D2',\n\tnsupseteq: '\\u2289',\n\tnsupseteqq: '\\u2AC6\\u0338',\n\tntgl: '\\u2279',\n\tNtilde: '\\u00D1',\n\tntilde: '\\u00F1',\n\tntlg: '\\u2278',\n\tntriangleleft: '\\u22EA',\n\tntrianglelefteq: '\\u22EC',\n\tntriangleright: '\\u22EB',\n\tntrianglerighteq: '\\u22ED',\n\tNu: '\\u039D',\n\tnu: '\\u03BD',\n\tnum: '\\u0023',\n\tnumero: '\\u2116',\n\tnumsp: '\\u2007',\n\tnvap: '\\u224D\\u20D2',\n\tnVDash: '\\u22AF',\n\tnVdash: '\\u22AE',\n\tnvDash: '\\u22AD',\n\tnvdash: '\\u22AC',\n\tnvge: '\\u2265\\u20D2',\n\tnvgt: '\\u003E\\u20D2',\n\tnvHarr: '\\u2904',\n\tnvinfin: '\\u29DE',\n\tnvlArr: '\\u2902',\n\tnvle: '\\u2264\\u20D2',\n\tnvlt: '\\u003C\\u20D2',\n\tnvltrie: '\\u22B4\\u20D2',\n\tnvrArr: '\\u2903',\n\tnvrtrie: '\\u22B5\\u20D2',\n\tnvsim: '\\u223C\\u20D2',\n\tnwarhk: '\\u2923',\n\tnwArr: '\\u21D6',\n\tnwarr: '\\u2196',\n\tnwarrow: '\\u2196',\n\tnwnear: '\\u2927',\n\tOacute: '\\u00D3',\n\toacute: '\\u00F3',\n\toast: '\\u229B',\n\tocir: '\\u229A',\n\tOcirc: '\\u00D4',\n\tocirc: '\\u00F4',\n\tOcy: '\\u041E',\n\tocy: '\\u043E',\n\todash: '\\u229D',\n\tOdblac: '\\u0150',\n\todblac: '\\u0151',\n\todiv: '\\u2A38',\n\todot: '\\u2299',\n\todsold: '\\u29BC',\n\tOElig: '\\u0152',\n\toelig: '\\u0153',\n\tofcir: '\\u29BF',\n\tOfr: '\\uD835\\uDD12',\n\tofr: '\\uD835\\uDD2C',\n\togon: '\\u02DB',\n\tOgrave: '\\u00D2',\n\tograve: '\\u00F2',\n\togt: '\\u29C1',\n\tohbar: '\\u29B5',\n\tohm: '\\u03A9',\n\toint: '\\u222E',\n\tolarr: '\\u21BA',\n\tolcir: '\\u29BE',\n\tolcross: '\\u29BB',\n\toline: '\\u203E',\n\tolt: '\\u29C0',\n\tOmacr: '\\u014C',\n\tomacr: '\\u014D',\n\tOmega: '\\u03A9',\n\tomega: '\\u03C9',\n\tOmicron: '\\u039F',\n\tomicron: '\\u03BF',\n\tomid: '\\u29B6',\n\tominus: '\\u2296',\n\tOopf: '\\uD835\\uDD46',\n\toopf: '\\uD835\\uDD60',\n\topar: '\\u29B7',\n\tOpenCurlyDoubleQuote: '\\u201C',\n\tOpenCurlyQuote: '\\u2018',\n\toperp: '\\u29B9',\n\toplus: '\\u2295',\n\tOr: '\\u2A54',\n\tor: '\\u2228',\n\torarr: '\\u21BB',\n\tord: '\\u2A5D',\n\torder: '\\u2134',\n\torderof: '\\u2134',\n\tordf: '\\u00AA',\n\tordm: '\\u00BA',\n\torigof: '\\u22B6',\n\toror: '\\u2A56',\n\torslope: '\\u2A57',\n\torv: '\\u2A5B',\n\toS: '\\u24C8',\n\tOscr: '\\uD835\\uDCAA',\n\toscr: '\\u2134',\n\tOslash: '\\u00D8',\n\toslash: '\\u00F8',\n\tosol: '\\u2298',\n\tOtilde: '\\u00D5',\n\totilde: '\\u00F5',\n\tOtimes: '\\u2A37',\n\totimes: '\\u2297',\n\totimesas: '\\u2A36',\n\tOuml: '\\u00D6',\n\touml: '\\u00F6',\n\tovbar: '\\u233D',\n\tOverBar: '\\u203E',\n\tOverBrace: '\\u23DE',\n\tOverBracket: '\\u23B4',\n\tOverParenthesis: '\\u23DC',\n\tpar: '\\u2225',\n\tpara: '\\u00B6',\n\tparallel: '\\u2225',\n\tparsim: '\\u2AF3',\n\tparsl: '\\u2AFD',\n\tpart: '\\u2202',\n\tPartialD: '\\u2202',\n\tPcy: '\\u041F',\n\tpcy: '\\u043F',\n\tpercnt: '\\u0025',\n\tperiod: '\\u002E',\n\tpermil: '\\u2030',\n\tperp: '\\u22A5',\n\tpertenk: '\\u2031',\n\tPfr: '\\uD835\\uDD13',\n\tpfr: '\\uD835\\uDD2D',\n\tPhi: '\\u03A6',\n\tphi: '\\u03C6',\n\tphiv: '\\u03D5',\n\tphmmat: '\\u2133',\n\tphone: '\\u260E',\n\tPi: '\\u03A0',\n\tpi: '\\u03C0',\n\tpitchfork: '\\u22D4',\n\tpiv: '\\u03D6',\n\tplanck: '\\u210F',\n\tplanckh: '\\u210E',\n\tplankv: '\\u210F',\n\tplus: '\\u002B',\n\tplusacir: '\\u2A23',\n\tplusb: '\\u229E',\n\tpluscir: '\\u2A22',\n\tplusdo: '\\u2214',\n\tplusdu: '\\u2A25',\n\tpluse: '\\u2A72',\n\tPlusMinus: '\\u00B1',\n\tplusmn: '\\u00B1',\n\tplussim: '\\u2A26',\n\tplustwo: '\\u2A27',\n\tpm: '\\u00B1',\n\tPoincareplane: '\\u210C',\n\tpointint: '\\u2A15',\n\tPopf: '\\u2119',\n\tpopf: '\\uD835\\uDD61',\n\tpound: '\\u00A3',\n\tPr: '\\u2ABB',\n\tpr: '\\u227A',\n\tprap: '\\u2AB7',\n\tprcue: '\\u227C',\n\tprE: '\\u2AB3',\n\tpre: '\\u2AAF',\n\tprec: '\\u227A',\n\tprecapprox: '\\u2AB7',\n\tpreccurlyeq: '\\u227C',\n\tPrecedes: '\\u227A',\n\tPrecedesEqual: '\\u2AAF',\n\tPrecedesSlantEqual: '\\u227C',\n\tPrecedesTilde: '\\u227E',\n\tpreceq: '\\u2AAF',\n\tprecnapprox: '\\u2AB9',\n\tprecneqq: '\\u2AB5',\n\tprecnsim: '\\u22E8',\n\tprecsim: '\\u227E',\n\tPrime: '\\u2033',\n\tprime: '\\u2032',\n\tprimes: '\\u2119',\n\tprnap: '\\u2AB9',\n\tprnE: '\\u2AB5',\n\tprnsim: '\\u22E8',\n\tprod: '\\u220F',\n\tProduct: '\\u220F',\n\tprofalar: '\\u232E',\n\tprofline: '\\u2312',\n\tprofsurf: '\\u2313',\n\tprop: '\\u221D',\n\tProportion: '\\u2237',\n\tProportional: '\\u221D',\n\tpropto: '\\u221D',\n\tprsim: '\\u227E',\n\tprurel: '\\u22B0',\n\tPscr: '\\uD835\\uDCAB',\n\tpscr: '\\uD835\\uDCC5',\n\tPsi: '\\u03A8',\n\tpsi: '\\u03C8',\n\tpuncsp: '\\u2008',\n\tQfr: '\\uD835\\uDD14',\n\tqfr: '\\uD835\\uDD2E',\n\tqint: '\\u2A0C',\n\tQopf: '\\u211A',\n\tqopf: '\\uD835\\uDD62',\n\tqprime: '\\u2057',\n\tQscr: '\\uD835\\uDCAC',\n\tqscr: '\\uD835\\uDCC6',\n\tquaternions: '\\u210D',\n\tquatint: '\\u2A16',\n\tquest: '\\u003F',\n\tquesteq: '\\u225F',\n\tQUOT: '\\u0022',\n\tquot: '\\u0022',\n\trAarr: '\\u21DB',\n\trace: '\\u223D\\u0331',\n\tRacute: '\\u0154',\n\tracute: '\\u0155',\n\tradic: '\\u221A',\n\traemptyv: '\\u29B3',\n\tRang: '\\u27EB',\n\trang: '\\u27E9',\n\trangd: '\\u2992',\n\trange: '\\u29A5',\n\trangle: '\\u27E9',\n\traquo: '\\u00BB',\n\tRarr: '\\u21A0',\n\trArr: '\\u21D2',\n\trarr: '\\u2192',\n\trarrap: '\\u2975',\n\trarrb: '\\u21E5',\n\trarrbfs: '\\u2920',\n\trarrc: '\\u2933',\n\trarrfs: '\\u291E',\n\trarrhk: '\\u21AA',\n\trarrlp: '\\u21AC',\n\trarrpl: '\\u2945',\n\trarrsim: '\\u2974',\n\tRarrtl: '\\u2916',\n\trarrtl: '\\u21A3',\n\trarrw: '\\u219D',\n\trAtail: '\\u291C',\n\tratail: '\\u291A',\n\tratio: '\\u2236',\n\trationals: '\\u211A',\n\tRBarr: '\\u2910',\n\trBarr: '\\u290F',\n\trbarr: '\\u290D',\n\trbbrk: '\\u2773',\n\trbrace: '\\u007D',\n\trbrack: '\\u005D',\n\trbrke: '\\u298C',\n\trbrksld: '\\u298E',\n\trbrkslu: '\\u2990',\n\tRcaron: '\\u0158',\n\trcaron: '\\u0159',\n\tRcedil: '\\u0156',\n\trcedil: '\\u0157',\n\trceil: '\\u2309',\n\trcub: '\\u007D',\n\tRcy: '\\u0420',\n\trcy: '\\u0440',\n\trdca: '\\u2937',\n\trdldhar: '\\u2969',\n\trdquo: '\\u201D',\n\trdquor: '\\u201D',\n\trdsh: '\\u21B3',\n\tRe: '\\u211C',\n\treal: '\\u211C',\n\trealine: '\\u211B',\n\trealpart: '\\u211C',\n\treals: '\\u211D',\n\trect: '\\u25AD',\n\tREG: '\\u00AE',\n\treg: '\\u00AE',\n\tReverseElement: '\\u220B',\n\tReverseEquilibrium: '\\u21CB',\n\tReverseUpEquilibrium: '\\u296F',\n\trfisht: '\\u297D',\n\trfloor: '\\u230B',\n\tRfr: '\\u211C',\n\trfr: '\\uD835\\uDD2F',\n\trHar: '\\u2964',\n\trhard: '\\u21C1',\n\trharu: '\\u21C0',\n\trharul: '\\u296C',\n\tRho: '\\u03A1',\n\trho: '\\u03C1',\n\trhov: '\\u03F1',\n\tRightAngleBracket: '\\u27E9',\n\tRightArrow: '\\u2192',\n\tRightarrow: '\\u21D2',\n\trightarrow: '\\u2192',\n\tRightArrowBar: '\\u21E5',\n\tRightArrowLeftArrow: '\\u21C4',\n\trightarrowtail: '\\u21A3',\n\tRightCeiling: '\\u2309',\n\tRightDoubleBracket: '\\u27E7',\n\tRightDownTeeVector: '\\u295D',\n\tRightDownVector: '\\u21C2',\n\tRightDownVectorBar: '\\u2955',\n\tRightFloor: '\\u230B',\n\trightharpoondown: '\\u21C1',\n\trightharpoonup: '\\u21C0',\n\trightleftarrows: '\\u21C4',\n\trightleftharpoons: '\\u21CC',\n\trightrightarrows: '\\u21C9',\n\trightsquigarrow: '\\u219D',\n\tRightTee: '\\u22A2',\n\tRightTeeArrow: '\\u21A6',\n\tRightTeeVector: '\\u295B',\n\trightthreetimes: '\\u22CC',\n\tRightTriangle: '\\u22B3',\n\tRightTriangleBar: '\\u29D0',\n\tRightTriangleEqual: '\\u22B5',\n\tRightUpDownVector: '\\u294F',\n\tRightUpTeeVector: '\\u295C',\n\tRightUpVector: '\\u21BE',\n\tRightUpVectorBar: '\\u2954',\n\tRightVector: '\\u21C0',\n\tRightVectorBar: '\\u2953',\n\tring: '\\u02DA',\n\trisingdotseq: '\\u2253',\n\trlarr: '\\u21C4',\n\trlhar: '\\u21CC',\n\trlm: '\\u200F',\n\trmoust: '\\u23B1',\n\trmoustache: '\\u23B1',\n\trnmid: '\\u2AEE',\n\troang: '\\u27ED',\n\troarr: '\\u21FE',\n\trobrk: '\\u27E7',\n\tropar: '\\u2986',\n\tRopf: '\\u211D',\n\tropf: '\\uD835\\uDD63',\n\troplus: '\\u2A2E',\n\trotimes: '\\u2A35',\n\tRoundImplies: '\\u2970',\n\trpar: '\\u0029',\n\trpargt: '\\u2994',\n\trppolint: '\\u2A12',\n\trrarr: '\\u21C9',\n\tRrightarrow: '\\u21DB',\n\trsaquo: '\\u203A',\n\tRscr: '\\u211B',\n\trscr: '\\uD835\\uDCC7',\n\tRsh: '\\u21B1',\n\trsh: '\\u21B1',\n\trsqb: '\\u005D',\n\trsquo: '\\u2019',\n\trsquor: '\\u2019',\n\trthree: '\\u22CC',\n\trtimes: '\\u22CA',\n\trtri: '\\u25B9',\n\trtrie: '\\u22B5',\n\trtrif: '\\u25B8',\n\trtriltri: '\\u29CE',\n\tRuleDelayed: '\\u29F4',\n\truluhar: '\\u2968',\n\trx: '\\u211E',\n\tSacute: '\\u015A',\n\tsacute: '\\u015B',\n\tsbquo: '\\u201A',\n\tSc: '\\u2ABC',\n\tsc: '\\u227B',\n\tscap: '\\u2AB8',\n\tScaron: '\\u0160',\n\tscaron: '\\u0161',\n\tsccue: '\\u227D',\n\tscE: '\\u2AB4',\n\tsce: '\\u2AB0',\n\tScedil: '\\u015E',\n\tscedil: '\\u015F',\n\tScirc: '\\u015C',\n\tscirc: '\\u015D',\n\tscnap: '\\u2ABA',\n\tscnE: '\\u2AB6',\n\tscnsim: '\\u22E9',\n\tscpolint: '\\u2A13',\n\tscsim: '\\u227F',\n\tScy: '\\u0421',\n\tscy: '\\u0441',\n\tsdot: '\\u22C5',\n\tsdotb: '\\u22A1',\n\tsdote: '\\u2A66',\n\tsearhk: '\\u2925',\n\tseArr: '\\u21D8',\n\tsearr: '\\u2198',\n\tsearrow: '\\u2198',\n\tsect: '\\u00A7',\n\tsemi: '\\u003B',\n\tseswar: '\\u2929',\n\tsetminus: '\\u2216',\n\tsetmn: '\\u2216',\n\tsext: '\\u2736',\n\tSfr: '\\uD835\\uDD16',\n\tsfr: '\\uD835\\uDD30',\n\tsfrown: '\\u2322',\n\tsharp: '\\u266F',\n\tSHCHcy: '\\u0429',\n\tshchcy: '\\u0449',\n\tSHcy: '\\u0428',\n\tshcy: '\\u0448',\n\tShortDownArrow: '\\u2193',\n\tShortLeftArrow: '\\u2190',\n\tshortmid: '\\u2223',\n\tshortparallel: '\\u2225',\n\tShortRightArrow: '\\u2192',\n\tShortUpArrow: '\\u2191',\n\tshy: '\\u00AD',\n\tSigma: '\\u03A3',\n\tsigma: '\\u03C3',\n\tsigmaf: '\\u03C2',\n\tsigmav: '\\u03C2',\n\tsim: '\\u223C',\n\tsimdot: '\\u2A6A',\n\tsime: '\\u2243',\n\tsimeq: '\\u2243',\n\tsimg: '\\u2A9E',\n\tsimgE: '\\u2AA0',\n\tsiml: '\\u2A9D',\n\tsimlE: '\\u2A9F',\n\tsimne: '\\u2246',\n\tsimplus: '\\u2A24',\n\tsimrarr: '\\u2972',\n\tslarr: '\\u2190',\n\tSmallCircle: '\\u2218',\n\tsmallsetminus: '\\u2216',\n\tsmashp: '\\u2A33',\n\tsmeparsl: '\\u29E4',\n\tsmid: '\\u2223',\n\tsmile: '\\u2323',\n\tsmt: '\\u2AAA',\n\tsmte: '\\u2AAC',\n\tsmtes: '\\u2AAC\\uFE00',\n\tSOFTcy: '\\u042C',\n\tsoftcy: '\\u044C',\n\tsol: '\\u002F',\n\tsolb: '\\u29C4',\n\tsolbar: '\\u233F',\n\tSopf: '\\uD835\\uDD4A',\n\tsopf: '\\uD835\\uDD64',\n\tspades: '\\u2660',\n\tspadesuit: '\\u2660',\n\tspar: '\\u2225',\n\tsqcap: '\\u2293',\n\tsqcaps: '\\u2293\\uFE00',\n\tsqcup: '\\u2294',\n\tsqcups: '\\u2294\\uFE00',\n\tSqrt: '\\u221A',\n\tsqsub: '\\u228F',\n\tsqsube: '\\u2291',\n\tsqsubset: '\\u228F',\n\tsqsubseteq: '\\u2291',\n\tsqsup: '\\u2290',\n\tsqsupe: '\\u2292',\n\tsqsupset: '\\u2290',\n\tsqsupseteq: '\\u2292',\n\tsqu: '\\u25A1',\n\tSquare: '\\u25A1',\n\tsquare: '\\u25A1',\n\tSquareIntersection: '\\u2293',\n\tSquareSubset: '\\u228F',\n\tSquareSubsetEqual: '\\u2291',\n\tSquareSuperset: '\\u2290',\n\tSquareSupersetEqual: '\\u2292',\n\tSquareUnion: '\\u2294',\n\tsquarf: '\\u25AA',\n\tsquf: '\\u25AA',\n\tsrarr: '\\u2192',\n\tSscr: '\\uD835\\uDCAE',\n\tsscr: '\\uD835\\uDCC8',\n\tssetmn: '\\u2216',\n\tssmile: '\\u2323',\n\tsstarf: '\\u22C6',\n\tStar: '\\u22C6',\n\tstar: '\\u2606',\n\tstarf: '\\u2605',\n\tstraightepsilon: '\\u03F5',\n\tstraightphi: '\\u03D5',\n\tstrns: '\\u00AF',\n\tSub: '\\u22D0',\n\tsub: '\\u2282',\n\tsubdot: '\\u2ABD',\n\tsubE: '\\u2AC5',\n\tsube: '\\u2286',\n\tsubedot: '\\u2AC3',\n\tsubmult: '\\u2AC1',\n\tsubnE: '\\u2ACB',\n\tsubne: '\\u228A',\n\tsubplus: '\\u2ABF',\n\tsubrarr: '\\u2979',\n\tSubset: '\\u22D0',\n\tsubset: '\\u2282',\n\tsubseteq: '\\u2286',\n\tsubseteqq: '\\u2AC5',\n\tSubsetEqual: '\\u2286',\n\tsubsetneq: '\\u228A',\n\tsubsetneqq: '\\u2ACB',\n\tsubsim: '\\u2AC7',\n\tsubsub: '\\u2AD5',\n\tsubsup: '\\u2AD3',\n\tsucc: '\\u227B',\n\tsuccapprox: '\\u2AB8',\n\tsucccurlyeq: '\\u227D',\n\tSucceeds: '\\u227B',\n\tSucceedsEqual: '\\u2AB0',\n\tSucceedsSlantEqual: '\\u227D',\n\tSucceedsTilde: '\\u227F',\n\tsucceq: '\\u2AB0',\n\tsuccnapprox: '\\u2ABA',\n\tsuccneqq: '\\u2AB6',\n\tsuccnsim: '\\u22E9',\n\tsuccsim: '\\u227F',\n\tSuchThat: '\\u220B',\n\tSum: '\\u2211',\n\tsum: '\\u2211',\n\tsung: '\\u266A',\n\tSup: '\\u22D1',\n\tsup: '\\u2283',\n\tsup1: '\\u00B9',\n\tsup2: '\\u00B2',\n\tsup3: '\\u00B3',\n\tsupdot: '\\u2ABE',\n\tsupdsub: '\\u2AD8',\n\tsupE: '\\u2AC6',\n\tsupe: '\\u2287',\n\tsupedot: '\\u2AC4',\n\tSuperset: '\\u2283',\n\tSupersetEqual: '\\u2287',\n\tsuphsol: '\\u27C9',\n\tsuphsub: '\\u2AD7',\n\tsuplarr: '\\u297B',\n\tsupmult: '\\u2AC2',\n\tsupnE: '\\u2ACC',\n\tsupne: '\\u228B',\n\tsupplus: '\\u2AC0',\n\tSupset: '\\u22D1',\n\tsupset: '\\u2283',\n\tsupseteq: '\\u2287',\n\tsupseteqq: '\\u2AC6',\n\tsupsetneq: '\\u228B',\n\tsupsetneqq: '\\u2ACC',\n\tsupsim: '\\u2AC8',\n\tsupsub: '\\u2AD4',\n\tsupsup: '\\u2AD6',\n\tswarhk: '\\u2926',\n\tswArr: '\\u21D9',\n\tswarr: '\\u2199',\n\tswarrow: '\\u2199',\n\tswnwar: '\\u292A',\n\tszlig: '\\u00DF',\n\tTab: '\\u0009',\n\ttarget: '\\u2316',\n\tTau: '\\u03A4',\n\ttau: '\\u03C4',\n\ttbrk: '\\u23B4',\n\tTcaron: '\\u0164',\n\ttcaron: '\\u0165',\n\tTcedil: '\\u0162',\n\ttcedil: '\\u0163',\n\tTcy: '\\u0422',\n\ttcy: '\\u0442',\n\ttdot: '\\u20DB',\n\ttelrec: '\\u2315',\n\tTfr: '\\uD835\\uDD17',\n\ttfr: '\\uD835\\uDD31',\n\tthere4: '\\u2234',\n\tTherefore: '\\u2234',\n\ttherefore: '\\u2234',\n\tTheta: '\\u0398',\n\ttheta: '\\u03B8',\n\tthetasym: '\\u03D1',\n\tthetav: '\\u03D1',\n\tthickapprox: '\\u2248',\n\tthicksim: '\\u223C',\n\tThickSpace: '\\u205F\\u200A',\n\tthinsp: '\\u2009',\n\tThinSpace: '\\u2009',\n\tthkap: '\\u2248',\n\tthksim: '\\u223C',\n\tTHORN: '\\u00DE',\n\tthorn: '\\u00FE',\n\tTilde: '\\u223C',\n\ttilde: '\\u02DC',\n\tTildeEqual: '\\u2243',\n\tTildeFullEqual: '\\u2245',\n\tTildeTilde: '\\u2248',\n\ttimes: '\\u00D7',\n\ttimesb: '\\u22A0',\n\ttimesbar: '\\u2A31',\n\ttimesd: '\\u2A30',\n\ttint: '\\u222D',\n\ttoea: '\\u2928',\n\ttop: '\\u22A4',\n\ttopbot: '\\u2336',\n\ttopcir: '\\u2AF1',\n\tTopf: '\\uD835\\uDD4B',\n\ttopf: '\\uD835\\uDD65',\n\ttopfork: '\\u2ADA',\n\ttosa: '\\u2929',\n\ttprime: '\\u2034',\n\tTRADE: '\\u2122',\n\ttrade: '\\u2122',\n\ttriangle: '\\u25B5',\n\ttriangledown: '\\u25BF',\n\ttriangleleft: '\\u25C3',\n\ttrianglelefteq: '\\u22B4',\n\ttriangleq: '\\u225C',\n\ttriangleright: '\\u25B9',\n\ttrianglerighteq: '\\u22B5',\n\ttridot: '\\u25EC',\n\ttrie: '\\u225C',\n\ttriminus: '\\u2A3A',\n\tTripleDot: '\\u20DB',\n\ttriplus: '\\u2A39',\n\ttrisb: '\\u29CD',\n\ttritime: '\\u2A3B',\n\ttrpezium: '\\u23E2',\n\tTscr: '\\uD835\\uDCAF',\n\ttscr: '\\uD835\\uDCC9',\n\tTScy: '\\u0426',\n\ttscy: '\\u0446',\n\tTSHcy: '\\u040B',\n\ttshcy: '\\u045B',\n\tTstrok: '\\u0166',\n\ttstrok: '\\u0167',\n\ttwixt: '\\u226C',\n\ttwoheadleftarrow: '\\u219E',\n\ttwoheadrightarrow: '\\u21A0',\n\tUacute: '\\u00DA',\n\tuacute: '\\u00FA',\n\tUarr: '\\u219F',\n\tuArr: '\\u21D1',\n\tuarr: '\\u2191',\n\tUarrocir: '\\u2949',\n\tUbrcy: '\\u040E',\n\tubrcy: '\\u045E',\n\tUbreve: '\\u016C',\n\tubreve: '\\u016D',\n\tUcirc: '\\u00DB',\n\tucirc: '\\u00FB',\n\tUcy: '\\u0423',\n\tucy: '\\u0443',\n\tudarr: '\\u21C5',\n\tUdblac: '\\u0170',\n\tudblac: '\\u0171',\n\tudhar: '\\u296E',\n\tufisht: '\\u297E',\n\tUfr: '\\uD835\\uDD18',\n\tufr: '\\uD835\\uDD32',\n\tUgrave: '\\u00D9',\n\tugrave: '\\u00F9',\n\tuHar: '\\u2963',\n\tuharl: '\\u21BF',\n\tuharr: '\\u21BE',\n\tuhblk: '\\u2580',\n\tulcorn: '\\u231C',\n\tulcorner: '\\u231C',\n\tulcrop: '\\u230F',\n\tultri: '\\u25F8',\n\tUmacr: '\\u016A',\n\tumacr: '\\u016B',\n\tuml: '\\u00A8',\n\tUnderBar: '\\u005F',\n\tUnderBrace: '\\u23DF',\n\tUnderBracket: '\\u23B5',\n\tUnderParenthesis: '\\u23DD',\n\tUnion: '\\u22C3',\n\tUnionPlus: '\\u228E',\n\tUogon: '\\u0172',\n\tuogon: '\\u0173',\n\tUopf: '\\uD835\\uDD4C',\n\tuopf: '\\uD835\\uDD66',\n\tUpArrow: '\\u2191',\n\tUparrow: '\\u21D1',\n\tuparrow: '\\u2191',\n\tUpArrowBar: '\\u2912',\n\tUpArrowDownArrow: '\\u21C5',\n\tUpDownArrow: '\\u2195',\n\tUpdownarrow: '\\u21D5',\n\tupdownarrow: '\\u2195',\n\tUpEquilibrium: '\\u296E',\n\tupharpoonleft: '\\u21BF',\n\tupharpoonright: '\\u21BE',\n\tuplus: '\\u228E',\n\tUpperLeftArrow: '\\u2196',\n\tUpperRightArrow: '\\u2197',\n\tUpsi: '\\u03D2',\n\tupsi: '\\u03C5',\n\tupsih: '\\u03D2',\n\tUpsilon: '\\u03A5',\n\tupsilon: '\\u03C5',\n\tUpTee: '\\u22A5',\n\tUpTeeArrow: '\\u21A5',\n\tupuparrows: '\\u21C8',\n\turcorn: '\\u231D',\n\turcorner: '\\u231D',\n\turcrop: '\\u230E',\n\tUring: '\\u016E',\n\turing: '\\u016F',\n\turtri: '\\u25F9',\n\tUscr: '\\uD835\\uDCB0',\n\tuscr: '\\uD835\\uDCCA',\n\tutdot: '\\u22F0',\n\tUtilde: '\\u0168',\n\tutilde: '\\u0169',\n\tutri: '\\u25B5',\n\tutrif: '\\u25B4',\n\tuuarr: '\\u21C8',\n\tUuml: '\\u00DC',\n\tuuml: '\\u00FC',\n\tuwangle: '\\u29A7',\n\tvangrt: '\\u299C',\n\tvarepsilon: '\\u03F5',\n\tvarkappa: '\\u03F0',\n\tvarnothing: '\\u2205',\n\tvarphi: '\\u03D5',\n\tvarpi: '\\u03D6',\n\tvarpropto: '\\u221D',\n\tvArr: '\\u21D5',\n\tvarr: '\\u2195',\n\tvarrho: '\\u03F1',\n\tvarsigma: '\\u03C2',\n\tvarsubsetneq: '\\u228A\\uFE00',\n\tvarsubsetneqq: '\\u2ACB\\uFE00',\n\tvarsupsetneq: '\\u228B\\uFE00',\n\tvarsupsetneqq: '\\u2ACC\\uFE00',\n\tvartheta: '\\u03D1',\n\tvartriangleleft: '\\u22B2',\n\tvartriangleright: '\\u22B3',\n\tVbar: '\\u2AEB',\n\tvBar: '\\u2AE8',\n\tvBarv: '\\u2AE9',\n\tVcy: '\\u0412',\n\tvcy: '\\u0432',\n\tVDash: '\\u22AB',\n\tVdash: '\\u22A9',\n\tvDash: '\\u22A8',\n\tvdash: '\\u22A2',\n\tVdashl: '\\u2AE6',\n\tVee: '\\u22C1',\n\tvee: '\\u2228',\n\tveebar: '\\u22BB',\n\tveeeq: '\\u225A',\n\tvellip: '\\u22EE',\n\tVerbar: '\\u2016',\n\tverbar: '\\u007C',\n\tVert: '\\u2016',\n\tvert: '\\u007C',\n\tVerticalBar: '\\u2223',\n\tVerticalLine: '\\u007C',\n\tVerticalSeparator: '\\u2758',\n\tVerticalTilde: '\\u2240',\n\tVeryThinSpace: '\\u200A',\n\tVfr: '\\uD835\\uDD19',\n\tvfr: '\\uD835\\uDD33',\n\tvltri: '\\u22B2',\n\tvnsub: '\\u2282\\u20D2',\n\tvnsup: '\\u2283\\u20D2',\n\tVopf: '\\uD835\\uDD4D',\n\tvopf: '\\uD835\\uDD67',\n\tvprop: '\\u221D',\n\tvrtri: '\\u22B3',\n\tVscr: '\\uD835\\uDCB1',\n\tvscr: '\\uD835\\uDCCB',\n\tvsubnE: '\\u2ACB\\uFE00',\n\tvsubne: '\\u228A\\uFE00',\n\tvsupnE: '\\u2ACC\\uFE00',\n\tvsupne: '\\u228B\\uFE00',\n\tVvdash: '\\u22AA',\n\tvzigzag: '\\u299A',\n\tWcirc: '\\u0174',\n\twcirc: '\\u0175',\n\twedbar: '\\u2A5F',\n\tWedge: '\\u22C0',\n\twedge: '\\u2227',\n\twedgeq: '\\u2259',\n\tweierp: '\\u2118',\n\tWfr: '\\uD835\\uDD1A',\n\twfr: '\\uD835\\uDD34',\n\tWopf: '\\uD835\\uDD4E',\n\twopf: '\\uD835\\uDD68',\n\twp: '\\u2118',\n\twr: '\\u2240',\n\twreath: '\\u2240',\n\tWscr: '\\uD835\\uDCB2',\n\twscr: '\\uD835\\uDCCC',\n\txcap: '\\u22C2',\n\txcirc: '\\u25EF',\n\txcup: '\\u22C3',\n\txdtri: '\\u25BD',\n\tXfr: '\\uD835\\uDD1B',\n\txfr: '\\uD835\\uDD35',\n\txhArr: '\\u27FA',\n\txharr: '\\u27F7',\n\tXi: '\\u039E',\n\txi: '\\u03BE',\n\txlArr: '\\u27F8',\n\txlarr: '\\u27F5',\n\txmap: '\\u27FC',\n\txnis: '\\u22FB',\n\txodot: '\\u2A00',\n\tXopf: '\\uD835\\uDD4F',\n\txopf: '\\uD835\\uDD69',\n\txoplus: '\\u2A01',\n\txotime: '\\u2A02',\n\txrArr: '\\u27F9',\n\txrarr: '\\u27F6',\n\tXscr: '\\uD835\\uDCB3',\n\txscr: '\\uD835\\uDCCD',\n\txsqcup: '\\u2A06',\n\txuplus: '\\u2A04',\n\txutri: '\\u25B3',\n\txvee: '\\u22C1',\n\txwedge: '\\u22C0',\n\tYacute: '\\u00DD',\n\tyacute: '\\u00FD',\n\tYAcy: '\\u042F',\n\tyacy: '\\u044F',\n\tYcirc: '\\u0176',\n\tycirc: '\\u0177',\n\tYcy: '\\u042B',\n\tycy: '\\u044B',\n\tyen: '\\u00A5',\n\tYfr: '\\uD835\\uDD1C',\n\tyfr: '\\uD835\\uDD36',\n\tYIcy: '\\u0407',\n\tyicy: '\\u0457',\n\tYopf: '\\uD835\\uDD50',\n\tyopf: '\\uD835\\uDD6A',\n\tYscr: '\\uD835\\uDCB4',\n\tyscr: '\\uD835\\uDCCE',\n\tYUcy: '\\u042E',\n\tyucy: '\\u044E',\n\tYuml: '\\u0178',\n\tyuml: '\\u00FF',\n\tZacute: '\\u0179',\n\tzacute: '\\u017A',\n\tZcaron: '\\u017D',\n\tzcaron: '\\u017E',\n\tZcy: '\\u0417',\n\tzcy: '\\u0437',\n\tZdot: '\\u017B',\n\tzdot: '\\u017C',\n\tzeetrf: '\\u2128',\n\tZeroWidthSpace: '\\u200B',\n\tZeta: '\\u0396',\n\tzeta: '\\u03B6',\n\tZfr: '\\u2128',\n\tzfr: '\\uD835\\uDD37',\n\tZHcy: '\\u0416',\n\tzhcy: '\\u0436',\n\tzigrarr: '\\u21DD',\n\tZopf: '\\u2124',\n\tzopf: '\\uD835\\uDD6B',\n\tZscr: '\\uD835\\uDCB5',\n\tzscr: '\\uD835\\uDCCF',\n\tzwj: '\\u200D',\n\tzwnj: '\\u200C',\n});\n\n/**\n * @deprecated use `HTML_ENTITIES` instead\n * @see HTML_ENTITIES\n */\nexports.entityMap = exports.HTML_ENTITIES;\n","var dom = require('./dom')\nexports.DOMImplementation = dom.DOMImplementation\nexports.XMLSerializer = dom.XMLSerializer\nexports.DOMParser = require('./dom-parser').DOMParser\n","var NAMESPACE = require(\"./conventions\").NAMESPACE;\n\n//[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n//[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n//[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\nvar nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]///\\u10000-\\uEFFFF\nvar nameChar = new RegExp(\"[\\\\-\\\\.0-9\"+nameStartChar.source.slice(1,-1)+\"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\nvar tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\\:'+nameStartChar.source+nameChar.source+'*)?$');\n//var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\nvar S_TAG = 0;//tag name offerring\nvar S_ATTR = 1;//attr name offerring\nvar S_ATTR_SPACE=2;//attr name end and space offer\nvar S_EQ = 3;//=space?\nvar S_ATTR_NOQUOT_VALUE = 4;//attr value(no quot value only)\nvar S_ATTR_END = 5;//attr value end and no space(quot end)\nvar S_TAG_SPACE = 6;//(attr value end || tag end ) && (space offer)\nvar S_TAG_CLOSE = 7;//closed el<el />\n\n/**\n * Creates an error that will not be caught by XMLReader aka the SAX parser.\n *\n * @param {string} message\n * @param {any?} locator Optional, can provide details about the location in the source\n * @constructor\n */\nfunction ParseError(message, locator) {\n\tthis.message = message\n\tthis.locator = locator\n\tif(Error.captureStackTrace) Error.captureStackTrace(this, ParseError);\n}\nParseError.prototype = new Error();\nParseError.prototype.name = ParseError.name\n\nfunction XMLReader(){\n\n}\n\nXMLReader.prototype = {\n\tparse:function(source,defaultNSMap,entityMap){\n\t\tvar domBuilder = this.domBuilder;\n\t\tdomBuilder.startDocument();\n\t\t_copy(defaultNSMap ,defaultNSMap = {})\n\t\tparse(source,defaultNSMap,entityMap,\n\t\t\t\tdomBuilder,this.errorHandler);\n\t\tdomBuilder.endDocument();\n\t}\n}\nfunction parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){\n\tfunction fixedFromCharCode(code) {\n\t\t// String.prototype.fromCharCode does not supports\n\t\t// > 2 bytes unicode chars directly\n\t\tif (code > 0xffff) {\n\t\t\tcode -= 0x10000;\n\t\t\tvar surrogate1 = 0xd800 + (code >> 10)\n\t\t\t\t, surrogate2 = 0xdc00 + (code & 0x3ff);\n\n\t\t\treturn String.fromCharCode(surrogate1, surrogate2);\n\t\t} else {\n\t\t\treturn String.fromCharCode(code);\n\t\t}\n\t}\n\tfunction entityReplacer(a){\n\t\tvar k = a.slice(1,-1);\n\t\tif (Object.hasOwnProperty.call(entityMap, k)) {\n\t\t\treturn entityMap[k];\n\t\t}else if(k.charAt(0) === '#'){\n\t\t\treturn fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))\n\t\t}else{\n\t\t\terrorHandler.error('entity not found:'+a);\n\t\t\treturn a;\n\t\t}\n\t}\n\tfunction appendText(end){//has some bugs\n\t\tif(end>start){\n\t\t\tvar xt = source.substring(start,end).replace(/&#?\\w+;/g,entityReplacer);\n\t\t\tlocator&&position(start);\n\t\t\tdomBuilder.characters(xt,0,end-start);\n\t\t\tstart = end\n\t\t}\n\t}\n\tfunction position(p,m){\n\t\twhile(p>=lineEnd && (m = linePattern.exec(source))){\n\t\t\tlineStart = m.index;\n\t\t\tlineEnd = lineStart + m[0].length;\n\t\t\tlocator.lineNumber++;\n\t\t\t//console.log('line++:',locator,startPos,endPos)\n\t\t}\n\t\tlocator.columnNumber = p-lineStart+1;\n\t}\n\tvar lineStart = 0;\n\tvar lineEnd = 0;\n\tvar linePattern = /.*(?:\\r\\n?|\\n)|.*$/g\n\tvar locator = domBuilder.locator;\n\n\tvar parseStack = [{currentNSMap:defaultNSMapCopy}]\n\tvar closeMap = {};\n\tvar start = 0;\n\twhile(true){\n\t\ttry{\n\t\t\tvar tagStart = source.indexOf('<',start);\n\t\t\tif(tagStart<0){\n\t\t\t\tif(!source.substr(start).match(/^\\s*$/)){\n\t\t\t\t\tvar doc = domBuilder.doc;\n\t    \t\t\tvar text = doc.createTextNode(source.substr(start));\n\t    \t\t\tdoc.appendChild(text);\n\t    \t\t\tdomBuilder.currentElement = text;\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif(tagStart>start){\n\t\t\t\tappendText(tagStart);\n\t\t\t}\n\t\t\tswitch(source.charAt(tagStart+1)){\n\t\t\tcase '/':\n\t\t\t\tvar end = source.indexOf('>',tagStart+3);\n\t\t\t\tvar tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n\t\t\t\tvar config = parseStack.pop();\n\t\t\t\tif(end<0){\n\n\t        \t\ttagName = source.substring(tagStart+2).replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' is not complete:'+config.tagName);\n\t        \t\tend = tagStart+1+tagName.length;\n\t        \t}else if(tagName.match(/\\s</)){\n\t        \t\ttagName = tagName.replace(/[\\s<].*/,'');\n\t        \t\terrorHandler.error(\"end tag name: \"+tagName+' maybe not complete');\n\t        \t\tend = tagStart+1+tagName.length;\n\t\t\t\t}\n\t\t\t\tvar localNSMap = config.localNSMap;\n\t\t\t\tvar endMatch = config.tagName == tagName;\n\t\t\t\tvar endIgnoreCaseMach = endMatch || config.tagName&&config.tagName.toLowerCase() == tagName.toLowerCase()\n\t\t        if(endIgnoreCaseMach){\n\t\t        \tdomBuilder.endElement(config.uri,config.localName,tagName);\n\t\t\t\t\tif(localNSMap){\n\t\t\t\t\t\tfor (var prefix in localNSMap) {\n\t\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(!endMatch){\n\t\t            \terrorHandler.fatalError(\"end tag name: \"+tagName+' is not match the current start tagName:'+config.tagName ); // No known test case\n\t\t\t\t\t}\n\t\t        }else{\n\t\t        \tparseStack.push(config)\n\t\t        }\n\n\t\t\t\tend++;\n\t\t\t\tbreak;\n\t\t\t\t// end elment\n\t\t\tcase '?':// <?...?>\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseInstruction(source,tagStart,domBuilder);\n\t\t\t\tbreak;\n\t\t\tcase '!':// <!doctype,<![CDATA,<!--\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tend = parseDCC(source,tagStart,domBuilder,errorHandler);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tlocator&&position(tagStart);\n\t\t\t\tvar el = new ElementAttributes();\n\t\t\t\tvar currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\t\t\t\t//elStartEnd\n\t\t\t\tvar end = parseElementStartPart(source,tagStart,el,currentNSMap,entityReplacer,errorHandler);\n\t\t\t\tvar len = el.length;\n\n\n\t\t\t\tif(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){\n\t\t\t\t\tel.closed = true;\n\t\t\t\t\tif(!entityMap.nbsp){\n\t\t\t\t\t\terrorHandler.warning('unclosed xml attribute');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(locator && len){\n\t\t\t\t\tvar locator2 = copyLocator(locator,{});\n\t\t\t\t\t//try{//attribute position fixed\n\t\t\t\t\tfor(var i = 0;i<len;i++){\n\t\t\t\t\t\tvar a = el[i];\n\t\t\t\t\t\tposition(a.offset);\n\t\t\t\t\t\ta.locator = copyLocator(locator,{});\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator2\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t\tdomBuilder.locator = locator;\n\t\t\t\t}else{\n\t\t\t\t\tif(appendElement(el,domBuilder,currentNSMap)){\n\t\t\t\t\t\tparseStack.push(el)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (NAMESPACE.isHTML(el.uri) && !el.closed) {\n\t\t\t\t\tend = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)\n\t\t\t\t} else {\n\t\t\t\t\tend++;\n\t\t\t\t}\n\t\t\t}\n\t\t}catch(e){\n\t\t\tif (e instanceof ParseError) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t\terrorHandler.error('element parse error: '+e)\n\t\t\tend = -1;\n\t\t}\n\t\tif(end>start){\n\t\t\tstart = end;\n\t\t}else{\n\t\t\t//TODO: 这里有可能sax回退，有位置错误风险\n\t\t\tappendText(Math.max(tagStart,start)+1);\n\t\t}\n\t}\n}\nfunction copyLocator(f,t){\n\tt.lineNumber = f.lineNumber;\n\tt.columnNumber = f.columnNumber;\n\treturn t;\n}\n\n/**\n * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n */\nfunction parseElementStartPart(source,start,el,currentNSMap,entityReplacer,errorHandler){\n\n\t/**\n\t * @param {string} qname\n\t * @param {string} value\n\t * @param {number} startIndex\n\t */\n\tfunction addAttribute(qname, value, startIndex) {\n\t\tif (el.attributeNames.hasOwnProperty(qname)) {\n\t\t\terrorHandler.fatalError('Attribute ' + qname + ' redefined')\n\t\t}\n\t\tel.addValue(\n\t\t\tqname,\n\t\t\t// @see https://www.w3.org/TR/xml/#AVNormalize\n\t\t\t// since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n\t\t\t// - recursive replacement of (DTD) entity references\n\t\t\t// - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n\t\t\tvalue.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer),\n\t\t\tstartIndex\n\t\t)\n\t}\n\tvar attrName;\n\tvar value;\n\tvar p = ++start;\n\tvar s = S_TAG;//status\n\twhile(true){\n\t\tvar c = source.charAt(p);\n\t\tswitch(c){\n\t\tcase '=':\n\t\t\tif(s === S_ATTR){//attrName\n\t\t\t\tattrName = source.slice(start,p);\n\t\t\t\ts = S_EQ;\n\t\t\t}else if(s === S_ATTR_SPACE){\n\t\t\t\ts = S_EQ;\n\t\t\t}else{\n\t\t\t\t//fatalError: equal must after attrName or space after attrName\n\t\t\t\tthrow new Error('attribute equal must after attrName'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '\\'':\n\t\tcase '\"':\n\t\t\tif(s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n\t\t\t\t){//equal\n\t\t\t\tif(s === S_ATTR){\n\t\t\t\t\terrorHandler.warning('attribute value must after \"=\"')\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t}\n\t\t\t\tstart = p+1;\n\t\t\t\tp = source.indexOf(c,start)\n\t\t\t\tif(p>0){\n\t\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\t\taddAttribute(attrName, value, start-1);\n\t\t\t\t\ts = S_ATTR_END;\n\t\t\t\t}else{\n\t\t\t\t\t//fatalError: no end quot match\n\t\t\t\t\tthrow new Error('attribute value no end \\''+c+'\\' match');\n\t\t\t\t}\n\t\t\t}else if(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\tvalue = source.slice(start, p);\n\t\t\t\taddAttribute(attrName, value, start);\n\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed start quot('+c+')!!');\n\t\t\t\tstart = p+1;\n\t\t\t\ts = S_ATTR_END\n\t\t\t}else{\n\t\t\t\t//fatalError: no equal before\n\t\t\t\tthrow new Error('attribute value must after \"=\"'); // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase '/':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\ts =S_TAG_CLOSE;\n\t\t\t\tel.closed = true;\n\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\tcase S_ATTR:\n\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tel.closed = true;\n\t\t\t\tbreak;\n\t\t\t//case S_EQ:\n\t\t\tdefault:\n\t\t\t\tthrow new Error(\"attribute invalid close char('/')\") // No known test case\n\t\t\t}\n\t\t\tbreak;\n\t\tcase ''://end document\n\t\t\terrorHandler.error('unexpected end of input');\n\t\t\tif(s == S_TAG){\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\t}\n\t\t\treturn p;\n\t\tcase '>':\n\t\t\tswitch(s){\n\t\t\tcase S_TAG:\n\t\t\t\tel.setTagName(source.slice(start,p));\n\t\t\tcase S_ATTR_END:\n\t\t\tcase S_TAG_SPACE:\n\t\t\tcase S_TAG_CLOSE:\n\t\t\t\tbreak;//normal\n\t\t\tcase S_ATTR_NOQUOT_VALUE://Compatible state\n\t\t\tcase S_ATTR:\n\t\t\t\tvalue = source.slice(start,p);\n\t\t\t\tif(value.slice(-1) === '/'){\n\t\t\t\t\tel.closed  = true;\n\t\t\t\t\tvalue = value.slice(0,-1)\n\t\t\t\t}\n\t\t\tcase S_ATTR_SPACE:\n\t\t\t\tif(s === S_ATTR_SPACE){\n\t\t\t\t\tvalue = attrName;\n\t\t\t\t}\n\t\t\t\tif(s == S_ATTR_NOQUOT_VALUE){\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\t}else{\n\t\t\t\t\tif(!NAMESPACE.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)){\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed value!! \"'+value+'\" instead!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(value, value, start)\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase S_EQ:\n\t\t\t\tthrow new Error('attribute value missed!!');\n\t\t\t}\n//\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n\t\t\treturn p;\n\t\t/*xml space '\\x20' | #x9 | #xD | #xA; */\n\t\tcase '\\u0080':\n\t\t\tc = ' ';\n\t\tdefault:\n\t\t\tif(c<= ' '){//space\n\t\t\t\tswitch(s){\n\t\t\t\tcase S_TAG:\n\t\t\t\t\tel.setTagName(source.slice(start,p));//tagName\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR:\n\t\t\t\t\tattrName = source.slice(start,p)\n\t\t\t\t\ts = S_ATTR_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_NOQUOT_VALUE:\n\t\t\t\t\tvar value = source.slice(start, p);\n\t\t\t\t\terrorHandler.warning('attribute \"'+value+'\" missed quot(\")!!');\n\t\t\t\t\taddAttribute(attrName, value, start)\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\ts = S_TAG_SPACE;\n\t\t\t\t\tbreak;\n\t\t\t\t//case S_TAG_SPACE:\n\t\t\t\t//case S_EQ:\n\t\t\t\t//case S_ATTR_SPACE:\n\t\t\t\t//\tvoid();break;\n\t\t\t\t//case S_TAG_CLOSE:\n\t\t\t\t\t//ignore warning\n\t\t\t\t}\n\t\t\t}else{//not space\n//S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n//S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n\t\t\t\tswitch(s){\n\t\t\t\t//case S_TAG:void();break;\n\t\t\t\t//case S_ATTR:void();break;\n\t\t\t\t//case S_ATTR_NOQUOT_VALUE:void();break;\n\t\t\t\tcase S_ATTR_SPACE:\n\t\t\t\t\tvar tagName =  el.tagName;\n\t\t\t\t\tif (!NAMESPACE.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n\t\t\t\t\t\terrorHandler.warning('attribute \"'+attrName+'\" missed value!! \"'+attrName+'\" instead2!!')\n\t\t\t\t\t}\n\t\t\t\t\taddAttribute(attrName, attrName, start);\n\t\t\t\t\tstart = p;\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_ATTR_END:\n\t\t\t\t\terrorHandler.warning('attribute space is required\"'+attrName+'\"!!')\n\t\t\t\tcase S_TAG_SPACE:\n\t\t\t\t\ts = S_ATTR;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_EQ:\n\t\t\t\t\ts = S_ATTR_NOQUOT_VALUE;\n\t\t\t\t\tstart = p;\n\t\t\t\t\tbreak;\n\t\t\t\tcase S_TAG_CLOSE:\n\t\t\t\t\tthrow new Error(\"elements closed character '/' and '>' must be connected to\");\n\t\t\t\t}\n\t\t\t}\n\t\t}//end outer switch\n\t\t//console.log('p++',p)\n\t\tp++;\n\t}\n}\n/**\n * @return true if has new namespace define\n */\nfunction appendElement(el,domBuilder,currentNSMap){\n\tvar tagName = el.tagName;\n\tvar localNSMap = null;\n\t//var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n\tvar i = el.length;\n\twhile(i--){\n\t\tvar a = el[i];\n\t\tvar qName = a.qName;\n\t\tvar value = a.value;\n\t\tvar nsp = qName.indexOf(':');\n\t\tif(nsp>0){\n\t\t\tvar prefix = a.prefix = qName.slice(0,nsp);\n\t\t\tvar localName = qName.slice(nsp+1);\n\t\t\tvar nsPrefix = prefix === 'xmlns' && localName\n\t\t}else{\n\t\t\tlocalName = qName;\n\t\t\tprefix = null\n\t\t\tnsPrefix = qName === 'xmlns' && ''\n\t\t}\n\t\t//can not set prefix,because prefix !== ''\n\t\ta.localName = localName ;\n\t\t//prefix == null for no ns prefix attribute\n\t\tif(nsPrefix !== false){//hack!!\n\t\t\tif(localNSMap == null){\n\t\t\t\tlocalNSMap = {}\n\t\t\t\t//console.log(currentNSMap,0)\n\t\t\t\t_copy(currentNSMap,currentNSMap={})\n\t\t\t\t//console.log(currentNSMap,1)\n\t\t\t}\n\t\t\tcurrentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n\t\t\ta.uri = NAMESPACE.XMLNS\n\t\t\tdomBuilder.startPrefixMapping(nsPrefix, value)\n\t\t}\n\t}\n\tvar i = el.length;\n\twhile(i--){\n\t\ta = el[i];\n\t\tvar prefix = a.prefix;\n\t\tif(prefix){//no prefix attribute has no namespace\n\t\t\tif(prefix === 'xml'){\n\t\t\t\ta.uri = NAMESPACE.XML;\n\t\t\t}if(prefix !== 'xmlns'){\n\t\t\t\ta.uri = currentNSMap[prefix || '']\n\n\t\t\t\t//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n\t\t\t}\n\t\t}\n\t}\n\tvar nsp = tagName.indexOf(':');\n\tif(nsp>0){\n\t\tprefix = el.prefix = tagName.slice(0,nsp);\n\t\tlocalName = el.localName = tagName.slice(nsp+1);\n\t}else{\n\t\tprefix = null;//important!!\n\t\tlocalName = el.localName = tagName;\n\t}\n\t//no prefix element has default namespace\n\tvar ns = el.uri = currentNSMap[prefix || ''];\n\tdomBuilder.startElement(ns,localName,tagName,el);\n\t//endPrefixMapping and startPrefixMapping have not any help for dom builder\n\t//localNSMap = null\n\tif(el.closed){\n\t\tdomBuilder.endElement(ns,localName,tagName);\n\t\tif(localNSMap){\n\t\t\tfor (prefix in localNSMap) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n\t\t\t\t\tdomBuilder.endPrefixMapping(prefix);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}else{\n\t\tel.currentNSMap = currentNSMap;\n\t\tel.localNSMap = localNSMap;\n\t\t//parseStack.push(el);\n\t\treturn true;\n\t}\n}\nfunction parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){\n\tif(/^(?:script|textarea)$/i.test(tagName)){\n\t\tvar elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);\n\t\tvar text = source.substring(elStartEnd+1,elEndStart);\n\t\tif(/[&<]/.test(text)){\n\t\t\tif(/^script$/i.test(tagName)){\n\t\t\t\t//if(!/\\]\\]>/.test(text)){\n\t\t\t\t\t//lexHandler.startCDATA();\n\t\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\t\t//lexHandler.endCDATA();\n\t\t\t\t\treturn elEndStart;\n\t\t\t\t//}\n\t\t\t}//}else{//text area\n\t\t\t\ttext = text.replace(/&#?\\w+;/g,entityReplacer);\n\t\t\t\tdomBuilder.characters(text,0,text.length);\n\t\t\t\treturn elEndStart;\n\t\t\t//}\n\n\t\t}\n\t}\n\treturn elStartEnd+1;\n}\nfunction fixSelfClosed(source,elStartEnd,tagName,closeMap){\n\t//if(tagName in closeMap){\n\tvar pos = closeMap[tagName];\n\tif(pos == null){\n\t\t//console.log(tagName)\n\t\tpos =  source.lastIndexOf('</'+tagName+'>')\n\t\tif(pos<elStartEnd){//忘记闭合\n\t\t\tpos = source.lastIndexOf('</'+tagName)\n\t\t}\n\t\tcloseMap[tagName] =pos\n\t}\n\treturn pos<elStartEnd;\n\t//}\n}\n\nfunction _copy (source, target) {\n\tfor (var n in source) {\n\t\tif (Object.prototype.hasOwnProperty.call(source, n)) {\n\t\t\ttarget[n] = source[n];\n\t\t}\n\t}\n}\n\nfunction parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'\n\tvar next= source.charAt(start+2)\n\tswitch(next){\n\tcase '-':\n\t\tif(source.charAt(start + 3) === '-'){\n\t\t\tvar end = source.indexOf('-->',start+4);\n\t\t\t//append comment source.substring(4,end)//<!--\n\t\t\tif(end>start){\n\t\t\t\tdomBuilder.comment(source,start+4,end-start-4);\n\t\t\t\treturn end+3;\n\t\t\t}else{\n\t\t\t\terrorHandler.error(\"Unclosed comment\");\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}else{\n\t\t\t//error\n\t\t\treturn -1;\n\t\t}\n\tdefault:\n\t\tif(source.substr(start+3,6) == 'CDATA['){\n\t\t\tvar end = source.indexOf(']]>',start+9);\n\t\t\tdomBuilder.startCDATA();\n\t\t\tdomBuilder.characters(source,start+9,end-start-9);\n\t\t\tdomBuilder.endCDATA()\n\t\t\treturn end+3;\n\t\t}\n\t\t//<!DOCTYPE\n\t\t//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n\t\tvar matchs = split(source,start);\n\t\tvar len = matchs.length;\n\t\tif(len>1 && /!doctype/i.test(matchs[0][0])){\n\t\t\tvar name = matchs[1][0];\n\t\t\tvar pubid = false;\n\t\t\tvar sysid = false;\n\t\t\tif(len>3){\n\t\t\t\tif(/^public$/i.test(matchs[2][0])){\n\t\t\t\t\tpubid = matchs[3][0];\n\t\t\t\t\tsysid = len>4 && matchs[4][0];\n\t\t\t\t}else if(/^system$/i.test(matchs[2][0])){\n\t\t\t\t\tsysid = matchs[3][0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar lastMatch = matchs[len-1]\n\t\t\tdomBuilder.startDTD(name, pubid, sysid);\n\t\t\tdomBuilder.endDTD();\n\n\t\t\treturn lastMatch.index+lastMatch[0].length\n\t\t}\n\t}\n\treturn -1;\n}\n\n\n\nfunction parseInstruction(source,start,domBuilder){\n\tvar end = source.indexOf('?>',start);\n\tif(end){\n\t\tvar match = source.substring(start,end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n\t\tif(match){\n\t\t\tvar len = match[0].length;\n\t\t\tdomBuilder.processingInstruction(match[1], match[2]) ;\n\t\t\treturn end+2;\n\t\t}else{//error\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction ElementAttributes(){\n\tthis.attributeNames = {}\n}\nElementAttributes.prototype = {\n\tsetTagName:function(tagName){\n\t\tif(!tagNamePattern.test(tagName)){\n\t\t\tthrow new Error('invalid tagName:'+tagName)\n\t\t}\n\t\tthis.tagName = tagName\n\t},\n\taddValue:function(qName, value, offset) {\n\t\tif(!tagNamePattern.test(qName)){\n\t\t\tthrow new Error('invalid attribute:'+qName)\n\t\t}\n\t\tthis.attributeNames[qName] = this.length;\n\t\tthis[this.length++] = {qName:qName,value:value,offset:offset}\n\t},\n\tlength:0,\n\tgetLocalName:function(i){return this[i].localName},\n\tgetLocator:function(i){return this[i].locator},\n\tgetQName:function(i){return this[i].qName},\n\tgetURI:function(i){return this[i].uri},\n\tgetValue:function(i){return this[i].value}\n//\t,getIndex:function(uri, localName)){\n//\t\tif(localName){\n//\n//\t\t}else{\n//\t\t\tvar qName = uri\n//\t\t}\n//\t},\n//\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n//\tgetType:function(uri,localName){}\n//\tgetType:function(i){},\n}\n\n\n\nfunction split(source,start){\n\tvar match;\n\tvar buf = [];\n\tvar reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n\treg.lastIndex = start;\n\treg.exec(source);//skip <\n\twhile(match = reg.exec(source)){\n\t\tbuf.push(match);\n\t\tif(match[1])return buf;\n\t}\n}\n\nexports.XMLReader = XMLReader;\nexports.ParseError = ParseError;\n","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  if (!fn) {\n    return false\n  }\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","\nmodule.exports = function load (src, opts, cb) {\n  var head = document.head || document.getElementsByTagName('head')[0]\n  var script = document.createElement('script')\n\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  opts = opts || {}\n  cb = cb || function() {}\n\n  script.type = opts.type || 'text/javascript'\n  script.charset = opts.charset || 'utf8';\n  script.async = 'async' in opts ? !!opts.async : true\n  script.src = src\n\n  if (opts.attrs) {\n    setAttributes(script, opts.attrs)\n  }\n\n  if (opts.text) {\n    script.text = '' + opts.text\n  }\n\n  var onend = 'onload' in script ? stdOnEnd : ieOnEnd\n  onend(script, cb)\n\n  // some good legacy browsers (firefox) fail the 'in' detection above\n  // so as a fallback we always set onload\n  // old IE will ignore this and new IE will set onload\n  if (!script.onload) {\n    stdOnEnd(script, cb);\n  }\n\n  head.appendChild(script)\n}\n\nfunction setAttributes(script, attrs) {\n  for (var attr in attrs) {\n    script.setAttribute(attr, attrs[attr]);\n  }\n}\n\nfunction stdOnEnd (script, cb) {\n  script.onload = function () {\n    this.onerror = this.onload = null\n    cb(null, script)\n  }\n  script.onerror = function () {\n    // this.onload = null here is necessary\n    // because even IE9 works not like others\n    this.onerror = this.onload = null\n    cb(new Error('Failed to load ' + this.src), script)\n  }\n}\n\nfunction ieOnEnd (script, cb) {\n  script.onreadystatechange = function () {\n    if (this.readyState != 'complete' && this.readyState != 'loaded') return\n    this.onreadystatechange = null\n    cb(null, script) // there is no way to catch loading errors in IE8\n  }\n}\n","var safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","var getUint64 = require('../utils/numbers.js').getUint64;\n\nvar parseSidx = function(data) {\n  var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n    i = 12;\n\n  if (result.version === 0) {\n    result.earliestPresentationTime = view.getUint32(i);\n    result.firstOffset = view.getUint32(i + 4);\n    i += 8;\n  } else {\n    // read 64 bits\n    result.earliestPresentationTime = getUint64(data.subarray(i));\n    result.firstOffset = getUint64(data.subarray(i + 8));\n    i += 16;\n  }\n\n  i += 2; // reserved\n\n  var referenceCount = view.getUint16(i);\n\n  i += 2; // start of references\n\n  for (; referenceCount > 0; i += 12, referenceCount--) {\n    result.references.push({\n      referenceType: (data[i] & 0x80) >>> 7,\n      referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n      subsegmentDuration: view.getUint32(i + 4),\n      startsWithSap: !!(data[i + 8] & 0x80),\n      sapType: (data[i + 8] & 0x70) >>> 4,\n      sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n    });\n  }\n\n  return result;\n};\n\n\nmodule.exports = parseSidx;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs,\n  metadataTsToSeconds;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\n/**\n * Adjust ID3 tag or caption timing information by the timeline pts values\n * (if keepOriginalTimestamps is false) and convert to seconds\n */\nmetadataTsToSeconds = function(timestamp, timelineStartPts, keepOriginalTimestamps) {\n  return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n};\n\nmodule.exports = {\n  ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs,\n  metadataTsToSeconds: metadataTsToSeconds\n};\n","var MAX_UINT32 = Math.pow(2, 32);\n\nvar getUint64 = function(uint8) {\n  var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n  var value;\n\n  if (dv.getBigUint64) {\n    value = dv.getBigUint64(0);\n\n    if (value < Number.MAX_SAFE_INTEGER) {\n      return Number(value);\n    }\n\n    return value;\n  }\n\n  return (dv.getUint32(0) * MAX_UINT32) + dv.getUint32(4);\n};\n\nmodule.exports = {\n  getUint64: getUint64,\n  MAX_UINT32: MAX_UINT32\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.3\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    // START: Modifications:\n    // Apply guards for `Object.create(null)` handling. See:\n    // - https://github.com/FormidableLabs/react-fast-compare/issues/64\n    // - https://github.com/epoberezkin/fast-deep-equal/issues/49\n    if (a.valueOf !== Object.prototype.valueOf && typeof a.valueOf === 'function' && typeof b.valueOf === 'function') return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString && typeof a.toString === 'function' && typeof b.toString === 'function') return a.toString() === b.toString();\n    // END: Modifications\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar Player_exports = {};\n__export(Player_exports, {\n  default: () => Player\n});\nmodule.exports = __toCommonJS(Player_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_react_fast_compare = __toESM(require(\"react-fast-compare\"));\nvar import_props = require(\"./props\");\nvar import_utils = require(\"./utils\");\nconst SEEK_ON_PLAY_EXPIRY = 5e3;\nclass Player extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"mounted\", false);\n    __publicField(this, \"isReady\", false);\n    __publicField(this, \"isPlaying\", false);\n    // Track playing state internally to prevent bugs\n    __publicField(this, \"isLoading\", true);\n    // Use isLoading to prevent onPause when switching URL\n    __publicField(this, \"loadOnReady\", null);\n    __publicField(this, \"startOnPlay\", true);\n    __publicField(this, \"seekOnPlay\", null);\n    __publicField(this, \"onDurationCalled\", false);\n    __publicField(this, \"handlePlayerMount\", (player) => {\n      if (this.player) {\n        this.progress();\n        return;\n      }\n      this.player = player;\n      this.player.load(this.props.url);\n      this.progress();\n    });\n    __publicField(this, \"getInternalPlayer\", (key) => {\n      if (!this.player)\n        return null;\n      return this.player[key];\n    });\n    __publicField(this, \"progress\", () => {\n      if (this.props.url && this.player && this.isReady) {\n        const playedSeconds = this.getCurrentTime() || 0;\n        const loadedSeconds = this.getSecondsLoaded();\n        const duration = this.getDuration();\n        if (duration) {\n          const progress = {\n            playedSeconds,\n            played: playedSeconds / duration\n          };\n          if (loadedSeconds !== null) {\n            progress.loadedSeconds = loadedSeconds;\n            progress.loaded = loadedSeconds / duration;\n          }\n          if (progress.playedSeconds !== this.prevPlayed || progress.loadedSeconds !== this.prevLoaded) {\n            this.props.onProgress(progress);\n          }\n          this.prevPlayed = progress.playedSeconds;\n          this.prevLoaded = progress.loadedSeconds;\n        }\n      }\n      this.progressTimeout = setTimeout(this.progress, this.props.progressFrequency || this.props.progressInterval);\n    });\n    __publicField(this, \"handleReady\", () => {\n      if (!this.mounted)\n        return;\n      this.isReady = true;\n      this.isLoading = false;\n      const { onReady, playing, volume, muted } = this.props;\n      onReady();\n      if (!muted && volume !== null) {\n        this.player.setVolume(volume);\n      }\n      if (this.loadOnReady) {\n        this.player.load(this.loadOnReady, true);\n        this.loadOnReady = null;\n      } else if (playing) {\n        this.player.play();\n      }\n      this.handleDurationCheck();\n    });\n    __publicField(this, \"handlePlay\", () => {\n      this.isPlaying = true;\n      this.isLoading = false;\n      const { onStart, onPlay, playbackRate } = this.props;\n      if (this.startOnPlay) {\n        if (this.player.setPlaybackRate && playbackRate !== 1) {\n          this.player.setPlaybackRate(playbackRate);\n        }\n        onStart();\n        this.startOnPlay = false;\n      }\n      onPlay();\n      if (this.seekOnPlay) {\n        this.seekTo(this.seekOnPlay);\n        this.seekOnPlay = null;\n      }\n      this.handleDurationCheck();\n    });\n    __publicField(this, \"handlePause\", (e) => {\n      this.isPlaying = false;\n      if (!this.isLoading) {\n        this.props.onPause(e);\n      }\n    });\n    __publicField(this, \"handleEnded\", () => {\n      const { activePlayer, loop, onEnded } = this.props;\n      if (activePlayer.loopOnEnded && loop) {\n        this.seekTo(0);\n      }\n      if (!loop) {\n        this.isPlaying = false;\n        onEnded();\n      }\n    });\n    __publicField(this, \"handleError\", (...args) => {\n      this.isLoading = false;\n      this.props.onError(...args);\n    });\n    __publicField(this, \"handleDurationCheck\", () => {\n      clearTimeout(this.durationCheckTimeout);\n      const duration = this.getDuration();\n      if (duration) {\n        if (!this.onDurationCalled) {\n          this.props.onDuration(duration);\n          this.onDurationCalled = true;\n        }\n      } else {\n        this.durationCheckTimeout = setTimeout(this.handleDurationCheck, 100);\n      }\n    });\n    __publicField(this, \"handleLoaded\", () => {\n      this.isLoading = false;\n    });\n  }\n  componentDidMount() {\n    this.mounted = true;\n  }\n  componentWillUnmount() {\n    clearTimeout(this.progressTimeout);\n    clearTimeout(this.durationCheckTimeout);\n    if (this.isReady && this.props.stopOnUnmount) {\n      this.player.stop();\n      if (this.player.disablePIP) {\n        this.player.disablePIP();\n      }\n    }\n    this.mounted = false;\n  }\n  componentDidUpdate(prevProps) {\n    if (!this.player) {\n      return;\n    }\n    const { url, playing, volume, muted, playbackRate, pip, loop, activePlayer, disableDeferredLoading } = this.props;\n    if (!(0, import_react_fast_compare.default)(prevProps.url, url)) {\n      if (this.isLoading && !activePlayer.forceLoad && !disableDeferredLoading && !(0, import_utils.isMediaStream)(url)) {\n        console.warn(`ReactPlayer: the attempt to load ${url} is being deferred until the player has loaded`);\n        this.loadOnReady = url;\n        return;\n      }\n      this.isLoading = true;\n      this.startOnPlay = true;\n      this.onDurationCalled = false;\n      this.player.load(url, this.isReady);\n    }\n    if (!prevProps.playing && playing && !this.isPlaying) {\n      this.player.play();\n    }\n    if (prevProps.playing && !playing && this.isPlaying) {\n      this.player.pause();\n    }\n    if (!prevProps.pip && pip && this.player.enablePIP) {\n      this.player.enablePIP();\n    }\n    if (prevProps.pip && !pip && this.player.disablePIP) {\n      this.player.disablePIP();\n    }\n    if (prevProps.volume !== volume && volume !== null) {\n      this.player.setVolume(volume);\n    }\n    if (prevProps.muted !== muted) {\n      if (muted) {\n        this.player.mute();\n      } else {\n        this.player.unmute();\n        if (volume !== null) {\n          setTimeout(() => this.player.setVolume(volume));\n        }\n      }\n    }\n    if (prevProps.playbackRate !== playbackRate && this.player.setPlaybackRate) {\n      this.player.setPlaybackRate(playbackRate);\n    }\n    if (prevProps.loop !== loop && this.player.setLoop) {\n      this.player.setLoop(loop);\n    }\n  }\n  getDuration() {\n    if (!this.isReady)\n      return null;\n    return this.player.getDuration();\n  }\n  getCurrentTime() {\n    if (!this.isReady)\n      return null;\n    return this.player.getCurrentTime();\n  }\n  getSecondsLoaded() {\n    if (!this.isReady)\n      return null;\n    return this.player.getSecondsLoaded();\n  }\n  seekTo(amount, type, keepPlaying) {\n    if (!this.isReady) {\n      if (amount !== 0) {\n        this.seekOnPlay = amount;\n        setTimeout(() => {\n          this.seekOnPlay = null;\n        }, SEEK_ON_PLAY_EXPIRY);\n      }\n      return;\n    }\n    const isFraction = !type ? amount > 0 && amount < 1 : type === \"fraction\";\n    if (isFraction) {\n      const duration = this.player.getDuration();\n      if (!duration) {\n        console.warn(\"ReactPlayer: could not seek using fraction \\u2013\\xA0duration not yet available\");\n        return;\n      }\n      this.player.seekTo(duration * amount, keepPlaying);\n      return;\n    }\n    this.player.seekTo(amount, keepPlaying);\n  }\n  render() {\n    const Player2 = this.props.activePlayer;\n    if (!Player2) {\n      return null;\n    }\n    return /* @__PURE__ */ import_react.default.createElement(\n      Player2,\n      {\n        ...this.props,\n        onMount: this.handlePlayerMount,\n        onReady: this.handleReady,\n        onPlay: this.handlePlay,\n        onPause: this.handlePause,\n        onEnded: this.handleEnded,\n        onLoaded: this.handleLoaded,\n        onError: this.handleError\n      }\n    );\n  }\n}\n__publicField(Player, \"displayName\", \"Player\");\n__publicField(Player, \"propTypes\", import_props.propTypes);\n__publicField(Player, \"defaultProps\", import_props.defaultProps);\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar ReactPlayer_exports = {};\n__export(ReactPlayer_exports, {\n  createReactPlayer: () => createReactPlayer\n});\nmodule.exports = __toCommonJS(ReactPlayer_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_deepmerge = __toESM(require(\"deepmerge\"));\nvar import_memoize_one = __toESM(require(\"memoize-one\"));\nvar import_react_fast_compare = __toESM(require(\"react-fast-compare\"));\nvar import_props = require(\"./props\");\nvar import_utils = require(\"./utils\");\nvar import_Player = __toESM(require(\"./Player\"));\nconst Preview = (0, import_utils.lazy)(() => import(\n  /* webpackChunkName: 'reactPlayerPreview' */\n  \"./Preview\"\n));\nconst IS_BROWSER = typeof window !== \"undefined\" && window.document && typeof document !== \"undefined\";\nconst IS_GLOBAL = typeof global !== \"undefined\" && global.window && global.window.document;\nconst SUPPORTED_PROPS = Object.keys(import_props.propTypes);\nconst UniversalSuspense = IS_BROWSER || IS_GLOBAL ? import_react.Suspense : () => null;\nconst customPlayers = [];\nconst createReactPlayer = (players, fallback) => {\n  var _a;\n  return _a = class extends import_react.Component {\n    constructor() {\n      super(...arguments);\n      __publicField(this, \"state\", {\n        showPreview: !!this.props.light\n      });\n      // Use references, as refs is used by React\n      __publicField(this, \"references\", {\n        wrapper: (wrapper) => {\n          this.wrapper = wrapper;\n        },\n        player: (player) => {\n          this.player = player;\n        }\n      });\n      __publicField(this, \"handleClickPreview\", (e) => {\n        this.setState({ showPreview: false });\n        this.props.onClickPreview(e);\n      });\n      __publicField(this, \"showPreview\", () => {\n        this.setState({ showPreview: true });\n      });\n      __publicField(this, \"getDuration\", () => {\n        if (!this.player)\n          return null;\n        return this.player.getDuration();\n      });\n      __publicField(this, \"getCurrentTime\", () => {\n        if (!this.player)\n          return null;\n        return this.player.getCurrentTime();\n      });\n      __publicField(this, \"getSecondsLoaded\", () => {\n        if (!this.player)\n          return null;\n        return this.player.getSecondsLoaded();\n      });\n      __publicField(this, \"getInternalPlayer\", (key = \"player\") => {\n        if (!this.player)\n          return null;\n        return this.player.getInternalPlayer(key);\n      });\n      __publicField(this, \"seekTo\", (fraction, type, keepPlaying) => {\n        if (!this.player)\n          return null;\n        this.player.seekTo(fraction, type, keepPlaying);\n      });\n      __publicField(this, \"handleReady\", () => {\n        this.props.onReady(this);\n      });\n      __publicField(this, \"getActivePlayer\", (0, import_memoize_one.default)((url) => {\n        for (const player of [...customPlayers, ...players]) {\n          if (player.canPlay(url)) {\n            return player;\n          }\n        }\n        if (fallback) {\n          return fallback;\n        }\n        return null;\n      }));\n      __publicField(this, \"getConfig\", (0, import_memoize_one.default)((url, key) => {\n        const { config } = this.props;\n        return import_deepmerge.default.all([\n          import_props.defaultProps.config,\n          import_props.defaultProps.config[key] || {},\n          config,\n          config[key] || {}\n        ]);\n      }));\n      __publicField(this, \"getAttributes\", (0, import_memoize_one.default)((url) => {\n        return (0, import_utils.omit)(this.props, SUPPORTED_PROPS);\n      }));\n      __publicField(this, \"renderActivePlayer\", (url) => {\n        if (!url)\n          return null;\n        const player = this.getActivePlayer(url);\n        if (!player)\n          return null;\n        const config = this.getConfig(url, player.key);\n        return /* @__PURE__ */ import_react.default.createElement(\n          import_Player.default,\n          {\n            ...this.props,\n            key: player.key,\n            ref: this.references.player,\n            config,\n            activePlayer: player.lazyPlayer || player,\n            onReady: this.handleReady\n          }\n        );\n      });\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n      return !(0, import_react_fast_compare.default)(this.props, nextProps) || !(0, import_react_fast_compare.default)(this.state, nextState);\n    }\n    componentDidUpdate(prevProps) {\n      const { light } = this.props;\n      if (!prevProps.light && light) {\n        this.setState({ showPreview: true });\n      }\n      if (prevProps.light && !light) {\n        this.setState({ showPreview: false });\n      }\n    }\n    renderPreview(url) {\n      if (!url)\n        return null;\n      const { light, playIcon, previewTabIndex, oEmbedUrl, previewAriaLabel } = this.props;\n      return /* @__PURE__ */ import_react.default.createElement(\n        Preview,\n        {\n          url,\n          light,\n          playIcon,\n          previewTabIndex,\n          previewAriaLabel,\n          oEmbedUrl,\n          onClick: this.handleClickPreview\n        }\n      );\n    }\n    render() {\n      const { url, style, width, height, fallback: fallback2, wrapper: Wrapper } = this.props;\n      const { showPreview } = this.state;\n      const attributes = this.getAttributes(url);\n      const wrapperRef = typeof Wrapper === \"string\" ? this.references.wrapper : void 0;\n      return /* @__PURE__ */ import_react.default.createElement(Wrapper, { ref: wrapperRef, style: { ...style, width, height }, ...attributes }, /* @__PURE__ */ import_react.default.createElement(UniversalSuspense, { fallback: fallback2 }, showPreview ? this.renderPreview(url) : this.renderActivePlayer(url)));\n    }\n  }, __publicField(_a, \"displayName\", \"ReactPlayer\"), __publicField(_a, \"propTypes\", import_props.propTypes), __publicField(_a, \"defaultProps\", import_props.defaultProps), __publicField(_a, \"addCustomPlayer\", (player) => {\n    customPlayers.push(player);\n  }), __publicField(_a, \"removeCustomPlayers\", () => {\n    customPlayers.length = 0;\n  }), __publicField(_a, \"canPlay\", (url) => {\n    for (const Player2 of [...customPlayers, ...players]) {\n      if (Player2.canPlay(url)) {\n        return true;\n      }\n    }\n    return false;\n  }), __publicField(_a, \"canEnablePIP\", (url) => {\n    for (const Player2 of [...customPlayers, ...players]) {\n      if (Player2.canEnablePIP && Player2.canEnablePIP(url)) {\n        return true;\n      }\n    }\n    return false;\n  }), _a;\n};\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar src_exports = {};\n__export(src_exports, {\n  default: () => src_default\n});\nmodule.exports = __toCommonJS(src_exports);\nvar import_players = __toESM(require(\"./players\"));\nvar import_ReactPlayer = require(\"./ReactPlayer\");\nconst fallback = import_players.default[import_players.default.length - 1];\nvar src_default = (0, import_ReactPlayer.createReactPlayer)(import_players.default, fallback);\n","var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar patterns_exports = {};\n__export(patterns_exports, {\n  AUDIO_EXTENSIONS: () => AUDIO_EXTENSIONS,\n  DASH_EXTENSIONS: () => DASH_EXTENSIONS,\n  FLV_EXTENSIONS: () => FLV_EXTENSIONS,\n  HLS_EXTENSIONS: () => HLS_EXTENSIONS,\n  MATCH_URL_DAILYMOTION: () => MATCH_URL_DAILYMOTION,\n  MATCH_URL_FACEBOOK: () => MATCH_URL_FACEBOOK,\n  MATCH_URL_FACEBOOK_WATCH: () => MATCH_URL_FACEBOOK_WATCH,\n  MATCH_URL_KALTURA: () => MATCH_URL_KALTURA,\n  MATCH_URL_MIXCLOUD: () => MATCH_URL_MIXCLOUD,\n  MATCH_URL_MUX: () => MATCH_URL_MUX,\n  MATCH_URL_SOUNDCLOUD: () => MATCH_URL_SOUNDCLOUD,\n  MATCH_URL_STREAMABLE: () => MATCH_URL_STREAMABLE,\n  MATCH_URL_TWITCH_CHANNEL: () => MATCH_URL_TWITCH_CHANNEL,\n  MATCH_URL_TWITCH_VIDEO: () => MATCH_URL_TWITCH_VIDEO,\n  MATCH_URL_VIDYARD: () => MATCH_URL_VIDYARD,\n  MATCH_URL_VIMEO: () => MATCH_URL_VIMEO,\n  MATCH_URL_WISTIA: () => MATCH_URL_WISTIA,\n  MATCH_URL_YOUTUBE: () => MATCH_URL_YOUTUBE,\n  VIDEO_EXTENSIONS: () => VIDEO_EXTENSIONS,\n  canPlay: () => canPlay\n});\nmodule.exports = __toCommonJS(patterns_exports);\nvar import_utils = require(\"./utils\");\nconst MATCH_URL_YOUTUBE = /(?:youtu\\.be\\/|youtube(?:-nocookie|education)?\\.com\\/(?:embed\\/|v\\/|watch\\/|watch\\?v=|watch\\?.+&v=|shorts\\/|live\\/))((\\w|-){11})|youtube\\.com\\/playlist\\?list=|youtube\\.com\\/user\\//;\nconst MATCH_URL_SOUNDCLOUD = /(?:soundcloud\\.com|snd\\.sc)\\/[^.]+$/;\nconst MATCH_URL_VIMEO = /vimeo\\.com\\/(?!progressive_redirect).+/;\nconst MATCH_URL_MUX = /stream\\.mux\\.com\\/(\\w+)/;\nconst MATCH_URL_FACEBOOK = /^https?:\\/\\/(www\\.)?facebook\\.com.*\\/(video(s)?|watch|story)(\\.php?|\\/).+$/;\nconst MATCH_URL_FACEBOOK_WATCH = /^https?:\\/\\/fb\\.watch\\/.+$/;\nconst MATCH_URL_STREAMABLE = /streamable\\.com\\/([a-z0-9]+)$/;\nconst MATCH_URL_WISTIA = /(?:wistia\\.(?:com|net)|wi\\.st)\\/(?:medias|embed)\\/(?:iframe\\/)?([^?]+)/;\nconst MATCH_URL_TWITCH_VIDEO = /(?:www\\.|go\\.)?twitch\\.tv\\/videos\\/(\\d+)($|\\?)/;\nconst MATCH_URL_TWITCH_CHANNEL = /(?:www\\.|go\\.)?twitch\\.tv\\/([a-zA-Z0-9_]+)($|\\?)/;\nconst MATCH_URL_DAILYMOTION = /^(?:(?:https?):)?(?:\\/\\/)?(?:www\\.)?(?:(?:dailymotion\\.com(?:\\/embed)?\\/video)|dai\\.ly)\\/([a-zA-Z0-9]+)(?:_[\\w_-]+)?(?:[\\w.#_-]+)?/;\nconst MATCH_URL_MIXCLOUD = /mixcloud\\.com\\/([^/]+\\/[^/]+)/;\nconst MATCH_URL_VIDYARD = /vidyard.com\\/(?:watch\\/)?([a-zA-Z0-9-_]+)/;\nconst MATCH_URL_KALTURA = /^https?:\\/\\/[a-zA-Z]+\\.kaltura.(com|org)\\/p\\/([0-9]+)\\/sp\\/([0-9]+)00\\/embedIframeJs\\/uiconf_id\\/([0-9]+)\\/partner_id\\/([0-9]+)(.*)entry_id.([a-zA-Z0-9-_].*)$/;\nconst AUDIO_EXTENSIONS = /\\.(m4a|m4b|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\\?)/i;\nconst VIDEO_EXTENSIONS = /\\.(mp4|og[gv]|webm|mov|m4v)(#t=[,\\d+]+)?($|\\?)/i;\nconst HLS_EXTENSIONS = /\\.(m3u8)($|\\?)/i;\nconst DASH_EXTENSIONS = /\\.(mpd)($|\\?)/i;\nconst FLV_EXTENSIONS = /\\.(flv)($|\\?)/i;\nconst canPlayFile = (url) => {\n  if (url instanceof Array) {\n    for (const item of url) {\n      if (typeof item === \"string\" && canPlayFile(item)) {\n        return true;\n      }\n      if (canPlayFile(item.src)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if ((0, import_utils.isMediaStream)(url) || (0, import_utils.isBlobUrl)(url)) {\n    return true;\n  }\n  return AUDIO_EXTENSIONS.test(url) || VIDEO_EXTENSIONS.test(url) || HLS_EXTENSIONS.test(url) || DASH_EXTENSIONS.test(url) || FLV_EXTENSIONS.test(url);\n};\nconst canPlay = {\n  youtube: (url) => {\n    if (url instanceof Array) {\n      return url.every((item) => MATCH_URL_YOUTUBE.test(item));\n    }\n    return MATCH_URL_YOUTUBE.test(url);\n  },\n  soundcloud: (url) => MATCH_URL_SOUNDCLOUD.test(url) && !AUDIO_EXTENSIONS.test(url),\n  vimeo: (url) => MATCH_URL_VIMEO.test(url) && !VIDEO_EXTENSIONS.test(url) && !HLS_EXTENSIONS.test(url),\n  mux: (url) => MATCH_URL_MUX.test(url),\n  facebook: (url) => MATCH_URL_FACEBOOK.test(url) || MATCH_URL_FACEBOOK_WATCH.test(url),\n  streamable: (url) => MATCH_URL_STREAMABLE.test(url),\n  wistia: (url) => MATCH_URL_WISTIA.test(url),\n  twitch: (url) => MATCH_URL_TWITCH_VIDEO.test(url) || MATCH_URL_TWITCH_CHANNEL.test(url),\n  dailymotion: (url) => MATCH_URL_DAILYMOTION.test(url),\n  mixcloud: (url) => MATCH_URL_MIXCLOUD.test(url),\n  vidyard: (url) => MATCH_URL_VIDYARD.test(url),\n  kaltura: (url) => MATCH_URL_KALTURA.test(url),\n  file: canPlayFile\n};\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar players_exports = {};\n__export(players_exports, {\n  default: () => players_default\n});\nmodule.exports = __toCommonJS(players_exports);\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nvar players_default = [\n  {\n    key: \"youtube\",\n    name: \"YouTube\",\n    canPlay: import_patterns.canPlay.youtube,\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerYouTube' */\n      \"./YouTube\"\n    ))\n  },\n  {\n    key: \"soundcloud\",\n    name: \"SoundCloud\",\n    canPlay: import_patterns.canPlay.soundcloud,\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerSoundCloud' */\n      \"./SoundCloud\"\n    ))\n  },\n  {\n    key: \"vimeo\",\n    name: \"Vimeo\",\n    canPlay: import_patterns.canPlay.vimeo,\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerVimeo' */\n      \"./Vimeo\"\n    ))\n  },\n  {\n    key: \"mux\",\n    name: \"Mux\",\n    canPlay: import_patterns.canPlay.mux,\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerMux' */\n      \"./Mux\"\n    ))\n  },\n  {\n    key: \"facebook\",\n    name: \"Facebook\",\n    canPlay: import_patterns.canPlay.facebook,\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerFacebook' */\n      \"./Facebook\"\n    ))\n  },\n  {\n    key: \"streamable\",\n    name: \"Streamable\",\n    canPlay: import_patterns.canPlay.streamable,\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerStreamable' */\n      \"./Streamable\"\n    ))\n  },\n  {\n    key: \"wistia\",\n    name: \"Wistia\",\n    canPlay: import_patterns.canPlay.wistia,\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerWistia' */\n      \"./Wistia\"\n    ))\n  },\n  {\n    key: \"twitch\",\n    name: \"Twitch\",\n    canPlay: import_patterns.canPlay.twitch,\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerTwitch' */\n      \"./Twitch\"\n    ))\n  },\n  {\n    key: \"dailymotion\",\n    name: \"DailyMotion\",\n    canPlay: import_patterns.canPlay.dailymotion,\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerDailyMotion' */\n      \"./DailyMotion\"\n    ))\n  },\n  {\n    key: \"mixcloud\",\n    name: \"Mixcloud\",\n    canPlay: import_patterns.canPlay.mixcloud,\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerMixcloud' */\n      \"./Mixcloud\"\n    ))\n  },\n  {\n    key: \"vidyard\",\n    name: \"Vidyard\",\n    canPlay: import_patterns.canPlay.vidyard,\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerVidyard' */\n      \"./Vidyard\"\n    ))\n  },\n  {\n    key: \"kaltura\",\n    name: \"Kaltura\",\n    canPlay: import_patterns.canPlay.kaltura,\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerKaltura' */\n      \"./Kaltura\"\n    ))\n  },\n  {\n    key: \"file\",\n    name: \"FilePlayer\",\n    canPlay: import_patterns.canPlay.file,\n    canEnablePIP: (url) => {\n      return import_patterns.canPlay.file(url) && (document.pictureInPictureEnabled || (0, import_utils.supportsWebKitPresentationMode)()) && !import_patterns.AUDIO_EXTENSIONS.test(url);\n    },\n    lazyPlayer: (0, import_utils.lazy)(() => import(\n      /* webpackChunkName: 'reactPlayerFilePlayer' */\n      \"./FilePlayer\"\n    ))\n  }\n];\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar props_exports = {};\n__export(props_exports, {\n  defaultProps: () => defaultProps,\n  propTypes: () => propTypes\n});\nmodule.exports = __toCommonJS(props_exports);\nvar import_prop_types = __toESM(require(\"prop-types\"));\nconst { string, bool, number, array, oneOfType, shape, object, func, node } = import_prop_types.default;\nconst propTypes = {\n  url: oneOfType([string, array, object]),\n  playing: bool,\n  loop: bool,\n  controls: bool,\n  volume: number,\n  muted: bool,\n  playbackRate: number,\n  width: oneOfType([string, number]),\n  height: oneOfType([string, number]),\n  style: object,\n  progressInterval: number,\n  playsinline: bool,\n  pip: bool,\n  stopOnUnmount: bool,\n  light: oneOfType([bool, string, object]),\n  playIcon: node,\n  previewTabIndex: number,\n  previewAriaLabel: string,\n  fallback: node,\n  oEmbedUrl: string,\n  wrapper: oneOfType([\n    string,\n    func,\n    shape({ render: func.isRequired })\n  ]),\n  config: shape({\n    soundcloud: shape({\n      options: object\n    }),\n    youtube: shape({\n      playerVars: object,\n      embedOptions: object,\n      onUnstarted: func\n    }),\n    facebook: shape({\n      appId: string,\n      version: string,\n      playerId: string,\n      attributes: object\n    }),\n    dailymotion: shape({\n      params: object\n    }),\n    vimeo: shape({\n      playerOptions: object,\n      title: string\n    }),\n    mux: shape({\n      attributes: object,\n      version: string\n    }),\n    file: shape({\n      attributes: object,\n      tracks: array,\n      forceVideo: bool,\n      forceAudio: bool,\n      forceHLS: bool,\n      forceSafariHLS: bool,\n      forceDisableHls: bool,\n      forceDASH: bool,\n      forceFLV: bool,\n      hlsOptions: object,\n      hlsVersion: string,\n      dashVersion: string,\n      flvVersion: string\n    }),\n    wistia: shape({\n      options: object,\n      playerId: string,\n      customControls: array\n    }),\n    mixcloud: shape({\n      options: object\n    }),\n    twitch: shape({\n      options: object,\n      playerId: string\n    }),\n    vidyard: shape({\n      options: object\n    })\n  }),\n  onReady: func,\n  onStart: func,\n  onPlay: func,\n  onPause: func,\n  onBuffer: func,\n  onBufferEnd: func,\n  onEnded: func,\n  onError: func,\n  onDuration: func,\n  onSeek: func,\n  onPlaybackRateChange: func,\n  onPlaybackQualityChange: func,\n  onProgress: func,\n  onClickPreview: func,\n  onEnablePIP: func,\n  onDisablePIP: func\n};\nconst noop = () => {\n};\nconst defaultProps = {\n  playing: false,\n  loop: false,\n  controls: false,\n  volume: null,\n  muted: false,\n  playbackRate: 1,\n  width: \"640px\",\n  height: \"360px\",\n  style: {},\n  progressInterval: 1e3,\n  playsinline: false,\n  pip: false,\n  stopOnUnmount: true,\n  light: false,\n  fallback: null,\n  wrapper: \"div\",\n  previewTabIndex: 0,\n  previewAriaLabel: \"\",\n  oEmbedUrl: \"https://noembed.com/embed?url={url}\",\n  config: {\n    soundcloud: {\n      options: {\n        visual: true,\n        // Undocumented, but makes player fill container and look better\n        buying: false,\n        liking: false,\n        download: false,\n        sharing: false,\n        show_comments: false,\n        show_playcount: false\n      }\n    },\n    youtube: {\n      playerVars: {\n        playsinline: 1,\n        showinfo: 0,\n        rel: 0,\n        iv_load_policy: 3,\n        modestbranding: 1\n      },\n      embedOptions: {},\n      onUnstarted: noop\n    },\n    facebook: {\n      appId: \"1309697205772819\",\n      version: \"v3.3\",\n      playerId: null,\n      attributes: {}\n    },\n    dailymotion: {\n      params: {\n        api: 1,\n        \"endscreen-enable\": false\n      }\n    },\n    vimeo: {\n      playerOptions: {\n        autopause: false,\n        byline: false,\n        portrait: false,\n        title: false\n      },\n      title: null\n    },\n    mux: {\n      attributes: {},\n      version: \"2\"\n    },\n    file: {\n      attributes: {},\n      tracks: [],\n      forceVideo: false,\n      forceAudio: false,\n      forceHLS: false,\n      forceDASH: false,\n      forceFLV: false,\n      hlsOptions: {},\n      hlsVersion: \"1.1.4\",\n      dashVersion: \"3.1.3\",\n      flvVersion: \"1.5.0\",\n      forceDisableHls: false\n    },\n    wistia: {\n      options: {},\n      playerId: null,\n      customControls: null\n    },\n    mixcloud: {\n      options: {\n        hide_cover: 1\n      }\n    },\n    twitch: {\n      options: {},\n      playerId: null\n    },\n    vidyard: {\n      options: {}\n    }\n  },\n  onReady: noop,\n  onStart: noop,\n  onPlay: noop,\n  onPause: noop,\n  onBuffer: noop,\n  onBufferEnd: noop,\n  onEnded: noop,\n  onError: noop,\n  onDuration: noop,\n  onSeek: noop,\n  onPlaybackRateChange: noop,\n  onPlaybackQualityChange: noop,\n  onProgress: noop,\n  onClickPreview: noop,\n  onEnablePIP: noop,\n  onDisablePIP: noop\n};\n","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  // If the importer is in node compatibility mode or this is not an ESM\n  // file that has been converted to a CommonJS file using a Babel-\n  // compatible transform (i.e. \"__esModule\" has not been set), then set\n  // \"default\" to the CommonJS \"module.exports\" for node compatibility.\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\nvar utils_exports = {};\n__export(utils_exports, {\n  callPlayer: () => callPlayer,\n  getConfig: () => getConfig,\n  getSDK: () => getSDK,\n  isBlobUrl: () => isBlobUrl,\n  isMediaStream: () => isMediaStream,\n  lazy: () => lazy,\n  omit: () => omit,\n  parseEndTime: () => parseEndTime,\n  parseStartTime: () => parseStartTime,\n  queryString: () => queryString,\n  randomString: () => randomString,\n  supportsWebKitPresentationMode: () => supportsWebKitPresentationMode\n});\nmodule.exports = __toCommonJS(utils_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_load_script = __toESM(require(\"load-script\"));\nvar import_deepmerge = __toESM(require(\"deepmerge\"));\nconst lazy = (componentImportFn) => import_react.default.lazy(async () => {\n  const obj = await componentImportFn();\n  return typeof obj.default === \"function\" ? obj : obj.default;\n});\nconst MATCH_START_QUERY = /[?&#](?:start|t)=([0-9hms]+)/;\nconst MATCH_END_QUERY = /[?&#]end=([0-9hms]+)/;\nconst MATCH_START_STAMP = /(\\d+)(h|m|s)/g;\nconst MATCH_NUMERIC = /^\\d+$/;\nfunction parseTimeParam(url, pattern) {\n  if (url instanceof Array) {\n    return void 0;\n  }\n  const match = url.match(pattern);\n  if (match) {\n    const stamp = match[1];\n    if (stamp.match(MATCH_START_STAMP)) {\n      return parseTimeString(stamp);\n    }\n    if (MATCH_NUMERIC.test(stamp)) {\n      return parseInt(stamp);\n    }\n  }\n  return void 0;\n}\nfunction parseTimeString(stamp) {\n  let seconds = 0;\n  let array = MATCH_START_STAMP.exec(stamp);\n  while (array !== null) {\n    const [, count, period] = array;\n    if (period === \"h\")\n      seconds += parseInt(count, 10) * 60 * 60;\n    if (period === \"m\")\n      seconds += parseInt(count, 10) * 60;\n    if (period === \"s\")\n      seconds += parseInt(count, 10);\n    array = MATCH_START_STAMP.exec(stamp);\n  }\n  return seconds;\n}\nfunction parseStartTime(url) {\n  return parseTimeParam(url, MATCH_START_QUERY);\n}\nfunction parseEndTime(url) {\n  return parseTimeParam(url, MATCH_END_QUERY);\n}\nfunction randomString() {\n  return Math.random().toString(36).substr(2, 5);\n}\nfunction queryString(object) {\n  return Object.keys(object).map((key) => `${key}=${object[key]}`).join(\"&\");\n}\nfunction getGlobal(key) {\n  if (window[key]) {\n    return window[key];\n  }\n  if (window.exports && window.exports[key]) {\n    return window.exports[key];\n  }\n  if (window.module && window.module.exports && window.module.exports[key]) {\n    return window.module.exports[key];\n  }\n  return null;\n}\nconst requests = {};\nconst getSDK = enableStubOn(function getSDK2(url, sdkGlobal, sdkReady = null, isLoaded = () => true, fetchScript = import_load_script.default) {\n  const existingGlobal = getGlobal(sdkGlobal);\n  if (existingGlobal && isLoaded(existingGlobal)) {\n    return Promise.resolve(existingGlobal);\n  }\n  return new Promise((resolve, reject) => {\n    if (requests[url]) {\n      requests[url].push({ resolve, reject });\n      return;\n    }\n    requests[url] = [{ resolve, reject }];\n    const onLoaded = (sdk) => {\n      requests[url].forEach((request) => request.resolve(sdk));\n    };\n    if (sdkReady) {\n      const previousOnReady = window[sdkReady];\n      window[sdkReady] = function() {\n        if (previousOnReady)\n          previousOnReady();\n        onLoaded(getGlobal(sdkGlobal));\n      };\n    }\n    fetchScript(url, (err) => {\n      if (err) {\n        requests[url].forEach((request) => request.reject(err));\n        requests[url] = null;\n      } else if (!sdkReady) {\n        onLoaded(getGlobal(sdkGlobal));\n      }\n    });\n  });\n});\nfunction getConfig(props, defaultProps) {\n  return (0, import_deepmerge.default)(defaultProps.config, props.config);\n}\nfunction omit(object, ...arrays) {\n  const omitKeys = [].concat(...arrays);\n  const output = {};\n  const keys = Object.keys(object);\n  for (const key of keys) {\n    if (omitKeys.indexOf(key) === -1) {\n      output[key] = object[key];\n    }\n  }\n  return output;\n}\nfunction callPlayer(method, ...args) {\n  if (!this.player || !this.player[method]) {\n    let message = `ReactPlayer: ${this.constructor.displayName} player could not call %c${method}%c \\u2013 `;\n    if (!this.player) {\n      message += \"The player was not available\";\n    } else if (!this.player[method]) {\n      message += \"The method was not available\";\n    }\n    console.warn(message, \"font-weight: bold\", \"\");\n    return null;\n  }\n  return this.player[method](...args);\n}\nfunction isMediaStream(url) {\n  return typeof window !== \"undefined\" && typeof window.MediaStream !== \"undefined\" && url instanceof window.MediaStream;\n}\nfunction isBlobUrl(url) {\n  return /^blob:/.test(url);\n}\nfunction supportsWebKitPresentationMode(video = document.createElement(\"video\")) {\n  const notMobile = /iPhone|iPod/.test(navigator.userAgent) === false;\n  return video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === \"function\" && notMobile;\n}\nfunction enableStubOn(fn) {\n  if (false) {\n    const wrap = (...args) => wrap.stub(...args);\n    wrap.stub = fn;\n    return wrap;\n  }\n  return fn;\n}\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","// see https://tools.ietf.org/html/rfc1808\n\n(function (root) {\n  var URL_REGEX =\n    /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n  var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n\n  var URLToolkit = {\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(\n          basePartsForNormalise.path\n        );\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment,\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath =\n              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +\n              relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize\n          ? URLToolkit.normalizePath(relativeParts.path)\n          : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function (url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || '',\n      };\n    },\n    normalizePath: function (path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (\n        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length\n      ) {}\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function (parts) {\n      return (\n        parts.scheme +\n        parts.netLoc +\n        parts.path +\n        parts.params +\n        parts.query +\n        parts.fragment\n      );\n    },\n  };\n\n  if (typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if (typeof define === 'function' && define.amd)\n    define([], function () {\n      return URLToolkit;\n    });\n  else if (typeof exports === 'object') exports['URLToolkit'] = URLToolkit;\n  else root['URLToolkit'] = URLToolkit;\n})(this);\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import URLToolkit from 'url-toolkit';\nimport window from 'global/window';\nvar DEFAULT_LOCATION = 'http://example.com';\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n\n  if (/^data:/.test(baseUrl)) {\n    baseUrl = window.location && window.location.href || '';\n  } // IE11 supports URL but not the URL constructor\n  // feature detect the behavior we want\n\n\n  var nativeURL = typeof window.URL === 'function';\n  var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n  // and if baseUrl isn't an absolute url\n\n  var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n  if (nativeURL) {\n    baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n  } else if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = URLToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n  }\n\n  if (nativeURL) {\n    var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n    // and if we're location-less, remove the location\n    // otherwise, return the url unmodified\n\n    if (removeLocation) {\n      return newUrl.href.slice(DEFAULT_LOCATION.length);\n    } else if (protocolLess) {\n      return newUrl.href.slice(newUrl.protocol.length);\n    }\n\n    return newUrl.href;\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\nexport default resolveUrl;","/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = /*#__PURE__*/function () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  }\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n  ;\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n    // In Video.js we slice listener functions\n    // on trigger so that it does not mess up the order\n    // while we loop through.\n    //\n    // Here we slice on off so that the loop in trigger\n    // can continue using it's old reference to loop without\n    // messing up the order.\n\n    this.listeners[type] = this.listeners[type].slice(0);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  }\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n  ;\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  }\n  /**\n   * Destroys the stream and cleans up.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  }\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n  ;\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\nexport { Stream as default };","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","/*! @name m3u8-parser @version 7.1.0 @license Apache-2.0 */\nimport Stream from '@videojs/vhs-utils/es/stream.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array.js';\n\n/**\n * @file m3u8/line-stream.js\n */\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nclass LineStream extends Stream {\n  constructor() {\n    super();\n    this.buffer = '';\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  push(data) {\n    let nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  }\n\n}\n\nconst TAB = String.fromCharCode(0x09);\n\nconst parseByterange = function (byterangeString) {\n  // optionally match and capture 0+ digits before `@`\n  // optionally match and capture 0+ digits after `@`\n  const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n  const result = {};\n\n  if (match[1]) {\n    result.length = parseInt(match[1], 10);\n  }\n\n  if (match[2]) {\n    result.offset = parseInt(match[2], 10);\n  }\n\n  return result;\n};\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\n\nconst attributeSeparator = function () {\n  const key = '[^=]*';\n  const value = '\"[^\"]*\"|[^,]*';\n  const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nconst parseAttributes = function (attributes) {\n  const result = {};\n\n  if (!attributes) {\n    return result;\n  } // split the string using attributes as the separator\n\n\n  const attrs = attributes.split(attributeSeparator());\n  let i = attrs.length;\n  let attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nclass ParseStream extends Stream {\n  constructor() {\n    super();\n    this.customParsers = [];\n    this.tagMappers = [];\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  push(line) {\n    let match;\n    let event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    const newLines = this.tagMappers.reduce((acc, mapper) => {\n      const mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(newLine => {\n      for (let i = 0; i < this.customParsers.length; i++) {\n        if (this.customParsers[i].call(this, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        this.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n        return;\n      }\n\n      match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = _extends(parseByterange(match[1]), {\n          type: 'tag',\n          tagType: 'byterange'\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          const attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            event.byterange = parseByterange(attributes.BYTERANGE);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            const split = event.attributes.RESOLUTION.split('x');\n            const resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['FRAME-RATE']) {\n            event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-START:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'skip'\n        };\n        event.attributes = parseAttributes(match[1]);\n\n        if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n          event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n        }\n\n        if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n          event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['INDEPENDENT', 'GAP'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n\n        if (event.attributes.hasOwnProperty('BYTERANGE')) {\n          event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'server-control'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/.test(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'part-inf'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['PART-TARGET'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'preload-hint'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n            const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n            event.attributes.byterange = event.attributes.byterange || {};\n            event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n            delete event.attributes[key];\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'rendition-report'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseInt(event.attributes[key], 10);\n          }\n        });\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-DATERANGE:(.*)$/.exec(newLine);\n\n      if (match && match[1]) {\n        event = {\n          type: 'tag',\n          tagType: 'daterange'\n        };\n        event.attributes = parseAttributes(match[1]);\n        ['ID', 'CLASS'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = String(event.attributes[key]);\n          }\n        });\n        ['START-DATE', 'END-DATE'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = new Date(event.attributes[key]);\n          }\n        });\n        ['DURATION', 'PLANNED-DURATION'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = parseFloat(event.attributes[key]);\n          }\n        });\n        ['END-ON-NEXT'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = /YES/i.test(event.attributes[key]);\n          }\n        });\n        ['SCTE35-CMD', ' SCTE35-OUT', 'SCTE35-IN'].forEach(function (key) {\n          if (event.attributes.hasOwnProperty(key)) {\n            event.attributes[key] = event.attributes[key].toString(16);\n          }\n        });\n        const clientAttributePattern = /^X-([A-Z]+-)+[A-Z]+$/;\n\n        for (const key in event.attributes) {\n          if (!clientAttributePattern.test(key)) {\n            continue;\n          }\n\n          const isHexaDecimal = /[0-9A-Fa-f]{6}/g.test(event.attributes[key]);\n          const isDecimalFloating = /^\\d+(\\.\\d+)?$/.test(event.attributes[key]);\n          event.attributes[key] = isHexaDecimal ? event.attributes[key].toString(16) : isDecimalFloating ? parseFloat(event.attributes[key]) : String(event.attributes[key]);\n        }\n\n        this.trigger('data', event);\n        return;\n      }\n\n      match = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(newLine);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'tag',\n          tagType: 'independent-segments'\n        });\n        return;\n      }\n\n      match = /^#EXT-X-CONTENT-STEERING:(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'content-steering'\n        };\n        event.attributes = parseAttributes(match[1]);\n        this.trigger('data', event);\n        return;\n      } // unknown tag type\n\n\n      this.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  }\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser({\n    expression,\n    customType,\n    dataParser,\n    segment\n  }) {\n    if (typeof dataParser !== 'function') {\n      dataParser = line => line;\n    }\n\n    this.customParsers.push(line => {\n      const match = expression.exec(line);\n\n      if (match) {\n        this.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType,\n          segment\n        });\n        return true;\n      }\n    });\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper({\n    expression,\n    map\n  }) {\n    const mapFn = line => {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  }\n\n}\n\nconst camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n\nconst camelCaseKeys = function (attributes) {\n  const result = {};\n  Object.keys(attributes).forEach(function (key) {\n    result[camelCase(key)] = attributes[key];\n  });\n  return result;\n}; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n// we need this helper because defaults are based upon targetDuration and\n// partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n// target durations are set.\n\n\nconst setHoldBack = function (manifest) {\n  const {\n    serverControl,\n    targetDuration,\n    partTargetDuration\n  } = manifest;\n\n  if (!serverControl) {\n    return;\n  }\n\n  const tag = '#EXT-X-SERVER-CONTROL';\n  const hb = 'holdBack';\n  const phb = 'partHoldBack';\n  const minTargetDuration = targetDuration && targetDuration * 3;\n  const minPartDuration = partTargetDuration && partTargetDuration * 2;\n\n  if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n    serverControl[hb] = minTargetDuration;\n    this.trigger('info', {\n      message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n    });\n  }\n\n  if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n    });\n    serverControl[hb] = minTargetDuration;\n  } // default no part hold back to part target duration * 3\n\n\n  if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n    serverControl[phb] = partTargetDuration * 3;\n    this.trigger('info', {\n      message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n    });\n  } // if part hold back is too small default it to part target duration * 2\n\n\n  if (partTargetDuration && serverControl[phb] < minPartDuration) {\n    this.trigger('warn', {\n      message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n    });\n    serverControl[phb] = minPartDuration;\n  }\n};\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\n\nclass Parser extends Stream {\n  constructor() {\n    super();\n    this.lineStream = new LineStream();\n    this.parseStream = new ParseStream();\n    this.lineStream.pipe(this.parseStream);\n    this.lastProgramDateTime = null;\n    /* eslint-disable consistent-this */\n\n    const self = this;\n    /* eslint-enable consistent-this */\n\n    const uris = [];\n    let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    let currentMap; // if specified, the active decryption key\n\n    let key;\n    let hasParts = false;\n\n    const noop = function () {};\n\n    const defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n    // used in MPDs with Widevine encrypted streams.\n\n    const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n    let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      dateRanges: [],\n      segments: []\n    }; // keep track of the last seen segment's byte range end, as segments are not required\n    // to provide the offset, in which case it defaults to the next byte after the\n    // previous segment\n\n    let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n    let lastPartByterangeEnd = 0;\n    const dateRangeTags = {};\n    this.on('end', () => {\n      // only add preloadSegment if we don't yet have a uri for it.\n      // and we actually have parts/preloadHints\n      if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n        return;\n      }\n\n      if (!currentUri.map && currentMap) {\n        currentUri.map = currentMap;\n      }\n\n      if (!currentUri.key && key) {\n        currentUri.key = key;\n      }\n\n      if (!currentUri.timeline && typeof currentTimeline === 'number') {\n        currentUri.timeline = currentTimeline;\n      }\n\n      this.manifest.preloadSegment = currentUri;\n    }); // update the manifest with the m3u8 entry from the parse stream\n\n    this.parseStream.on('data', function (entry) {\n      let mediaGroup;\n      let rendition;\n      ({\n        tag() {\n          // switch based on the tag type\n          (({\n            version() {\n              if (entry.version) {\n                this.manifest.version = entry.version;\n              }\n            },\n\n            'allow-cache'() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n\n            byterange() {\n              const byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  /*\n                   * From the latest spec (as of this writing):\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                   *\n                   * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                   * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                   *\n                   * \"If o [offset] is not present, the sub-range begins at the next byte\n                   * following the sub-range of the previous media segment.\"\n                   */\n                  entry.offset = lastByterangeEnd;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n\n              lastByterangeEnd = byterange.offset + byterange.length;\n            },\n\n            endlist() {\n              this.manifest.endList = true;\n            },\n\n            inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.title) {\n                currentUri.title = entry.title;\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n\n            key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                  attributes: entry.attributes\n                };\n                return;\n              }\n\n              if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                this.manifest.contentProtection['com.microsoft.playready'] = {\n                  uri: entry.attributes.URI\n                };\n                return;\n              } // check if the content is encrypted for Widevine\n              // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n\n              if (entry.attributes.KEYFORMAT === widevineUuid) {\n                const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n\n                if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                  this.trigger('warn', {\n                    message: 'invalid key method provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                  this.trigger('warn', {\n                    message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                  });\n                }\n\n                if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                  this.trigger('warn', {\n                    message: 'invalid key URI provided for Widevine'\n                  });\n                  return;\n                }\n\n                if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                  this.trigger('warn', {\n                    message: 'invalid key ID provided for Widevine'\n                  });\n                  return;\n                } // if Widevine key attributes are valid, store them as `contentProtection`\n                // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n\n                this.manifest.contentProtection = this.manifest.contentProtection || {};\n                this.manifest.contentProtection['com.widevine.alpha'] = {\n                  attributes: {\n                    schemeIdUri: entry.attributes.KEYFORMAT,\n                    // remove '0x' from the key id string\n                    keyId: entry.attributes.KEYID.substring(2)\n                  },\n                  // decode the base64-encoded PSSH box\n                  pssh: decodeB64ToUint8Array(entry.attributes.URI.split(',')[1])\n                };\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                key.iv = entry.attributes.IV;\n              }\n            },\n\n            'media-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n\n            'discontinuity-sequence'() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n\n            'playlist-type'() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n\n            map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n\n              if (key) {\n                currentMap.key = key;\n              }\n            },\n\n            'stream-inf'() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n\n            media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n\n            discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n\n            'program-date-time'() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n              const {\n                lastProgramDateTime\n              } = this;\n              this.lastProgramDateTime = new Date(entry.dateTimeString).getTime(); // We should extrapolate Program Date Time backward only during first program date time occurrence.\n              // Once we have at least one program date time point, we can always extrapolate it forward using lastProgramDateTime reference.\n\n              if (lastProgramDateTime === null) {\n                // Extrapolate Program Date Time backward\n                // Since it is first program date time occurrence we're assuming that\n                // all this.manifest.segments have no program date time info\n                this.manifest.segments.reduceRight((programDateTime, segment) => {\n                  segment.programDateTime = programDateTime - segment.duration * 1000;\n                  return segment.programDateTime;\n                }, this.lastProgramDateTime);\n              }\n            },\n\n            targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n              setHoldBack.call(this, this.manifest);\n            },\n\n            start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n\n            'cue-out'() {\n              currentUri.cueOut = entry.data;\n            },\n\n            'cue-out-cont'() {\n              currentUri.cueOutCont = entry.data;\n            },\n\n            'cue-in'() {\n              currentUri.cueIn = entry.data;\n            },\n\n            'skip'() {\n              this.manifest.skip = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n            },\n\n            'part'() {\n              hasParts = true; // parts are always specifed before a segment\n\n              const segmentIndex = this.manifest.segments.length;\n              const part = camelCaseKeys(entry.attributes);\n              currentUri.parts = currentUri.parts || [];\n              currentUri.parts.push(part);\n\n              if (part.byterange) {\n                if (!part.byterange.hasOwnProperty('offset')) {\n                  part.byterange.offset = lastPartByterangeEnd;\n                }\n\n                lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n              }\n\n              const partIndex = currentUri.parts.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n\n              if (this.manifest.renditionReports) {\n                this.manifest.renditionReports.forEach((r, i) => {\n                  if (!r.hasOwnProperty('lastPart')) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                    });\n                  }\n                });\n              }\n            },\n\n            'server-control'() {\n              const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n\n              if (!attrs.hasOwnProperty('canBlockReload')) {\n                attrs.canBlockReload = false;\n                this.trigger('info', {\n                  message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                });\n              }\n\n              setHoldBack.call(this, this.manifest);\n\n              if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                this.trigger('warn', {\n                  message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                });\n              }\n            },\n\n            'preload-hint'() {\n              // parts are always specifed before a segment\n              const segmentIndex = this.manifest.segments.length;\n              const hint = camelCaseKeys(entry.attributes);\n              const isPart = hint.type && hint.type === 'PART';\n              currentUri.preloadHints = currentUri.preloadHints || [];\n              currentUri.preloadHints.push(hint);\n\n              if (hint.byterange) {\n                if (!hint.byterange.hasOwnProperty('offset')) {\n                  // use last part byterange end or zero if not a part.\n                  hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n\n                  if (isPart) {\n                    lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                  }\n                }\n              }\n\n              const index = currentUri.preloadHints.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n\n              if (!hint.type) {\n                return;\n              } // search through all preload hints except for the current one for\n              // a duplicate type.\n\n\n              for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                const otherHint = currentUri.preloadHints[i];\n\n                if (!otherHint.type) {\n                  continue;\n                }\n\n                if (otherHint.type === hint.type) {\n                  this.trigger('warn', {\n                    message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                  });\n                }\n              }\n            },\n\n            'rendition-report'() {\n              const report = camelCaseKeys(entry.attributes);\n              this.manifest.renditionReports = this.manifest.renditionReports || [];\n              this.manifest.renditionReports.push(report);\n              const index = this.manifest.renditionReports.length - 1;\n              const required = ['LAST-MSN', 'URI'];\n\n              if (hasParts) {\n                required.push('LAST-PART');\n              }\n\n              this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n            },\n\n            'part-inf'() {\n              this.manifest.partInf = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n\n              if (this.manifest.partInf.partTarget) {\n                this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n              }\n\n              setHoldBack.call(this, this.manifest);\n            },\n\n            'daterange'() {\n              this.manifest.dateRanges.push(camelCaseKeys(entry.attributes));\n              const index = this.manifest.dateRanges.length - 1;\n              this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${index}`, entry.attributes, ['ID', 'START-DATE']);\n              const dateRange = this.manifest.dateRanges[index];\n\n              if (dateRange.endDate && dateRange.startDate && new Date(dateRange.endDate) < new Date(dateRange.startDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE'\n                });\n              }\n\n              if (dateRange.duration && dateRange.duration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE DURATION must not be negative'\n                });\n              }\n\n              if (dateRange.plannedDuration && dateRange.plannedDuration < 0) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE PLANNED-DURATION must not be negative'\n                });\n              }\n\n              const endOnNextYes = !!dateRange.endOnNext;\n\n              if (endOnNextYes && !dateRange.class) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute'\n                });\n              }\n\n              if (endOnNextYes && (dateRange.duration || dateRange.endDate)) {\n                this.trigger('warn', {\n                  message: 'EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes'\n                });\n              }\n\n              if (dateRange.duration && dateRange.endDate) {\n                const startDate = dateRange.startDate;\n                const newDateInSeconds = startDate.getTime() + dateRange.duration * 1000;\n                this.manifest.dateRanges[index].endDate = new Date(newDateInSeconds);\n              }\n\n              if (!dateRangeTags[dateRange.id]) {\n                dateRangeTags[dateRange.id] = dateRange;\n              } else {\n                for (const attribute in dateRangeTags[dateRange.id]) {\n                  if (!!dateRange[attribute] && JSON.stringify(dateRangeTags[dateRange.id][attribute]) !== JSON.stringify(dateRange[attribute])) {\n                    this.trigger('warn', {\n                      message: 'EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values'\n                    });\n                    break;\n                  }\n                } // if tags with the same ID do not have conflicting attributes, merge them\n\n\n                const dateRangeWithSameId = this.manifest.dateRanges.findIndex(dateRangeToFind => dateRangeToFind.id === dateRange.id);\n                this.manifest.dateRanges[dateRangeWithSameId] = _extends(this.manifest.dateRanges[dateRangeWithSameId], dateRange);\n                dateRangeTags[dateRange.id] = _extends(dateRangeTags[dateRange.id], dateRange); // after merging, delete the duplicate dateRange that was added last\n\n                this.manifest.dateRanges.pop();\n              }\n            },\n\n            'independent-segments'() {\n              this.manifest.independentSegments = true;\n            },\n\n            'content-steering'() {\n              this.manifest.contentSteering = camelCaseKeys(entry.attributes);\n              this.warnOnMissingAttributes_('#EXT-X-CONTENT-STEERING', entry.attributes, ['SERVER-URI']);\n            }\n\n          })[entry.tagType] || noop).call(self);\n        },\n\n        uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (key) {\n            currentUri.key = key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // reset the last byterange end as it needs to be 0 between parts\n\n\n          lastPartByterangeEnd = 0; // Once we have at least one program date time we can always extrapolate it forward\n\n          if (this.lastProgramDateTime !== null) {\n            currentUri.programDateTime = this.lastProgramDateTime;\n            this.lastProgramDateTime += currentUri.duration * 1000;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n\n        comment() {// comments are not important for playback\n        },\n\n        custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n\n      })[entry.type].call(self);\n    });\n  }\n\n  warnOnMissingAttributes_(identifier, attributes, required) {\n    const missing = [];\n    required.forEach(function (key) {\n      if (!attributes.hasOwnProperty(key)) {\n        missing.push(key);\n      }\n    });\n\n    if (missing.length) {\n      this.trigger('warn', {\n        message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n      });\n    }\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  push(chunk) {\n    this.lineStream.push(chunk);\n  }\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n\n    if (this.manifest.dateRanges.length && this.lastProgramDateTime === null) {\n      this.trigger('warn', {\n        message: 'A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag'\n      });\n    }\n\n    this.lastProgramDateTime = null;\n    this.trigger('end');\n  }\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  addParser(options) {\n    this.parseStream.addParser(options);\n  }\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  }\n\n}\n\nexport { LineStream, ParseStream, Parser };\n","import window from 'global/window';\nvar regexs = {\n  // to determine mime types\n  mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n  webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n  ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n  // to determine if a codec is audio or video\n  video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n  audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n  text: /^(stpp.ttml.im1t)/,\n  // mux.js support regex\n  muxerVideo: /^(avc0?1)/,\n  muxerAudio: /^(mp4a)/,\n  // match nothing as muxer does not support text right now.\n  // there cannot never be a character before the start of a string\n  // so this matches nothing.\n  muxerText: /a^/\n};\nvar mediaTypes = ['video', 'audio', 'text'];\nvar upperMediaTypes = ['Video', 'Audio', 'Text'];\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string} codec\n *        Codec string to translate\n * @return {string}\n *         The translated codec string\n */\n\nexport var translateLegacyCodec = function translateLegacyCodec(codec) {\n  if (!codec) {\n    return codec;\n  }\n\n  return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n    var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n    var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n    return 'avc1.' + profileHex + '00' + avcLevelHex;\n  });\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec strings with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {string[]} codecs\n *        An array of codec strings to translate\n * @return {string[]}\n *         The translated array of codec strings\n */\n\nexport var translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(translateLegacyCodec);\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param {string} codecString\n *        The codec string\n * @return {string}\n *         The codec string with old apple-style codecs replaced\n *\n * @private\n */\n\nexport var mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * @typedef {Object} ParsedCodecInfo\n * @property {number} codecCount\n *           Number of codecs parsed\n * @property {string} [videoCodec]\n *           Parsed video codec (if found)\n * @property {string} [videoObjectTypeIndicator]\n *           Video object type indicator (if found)\n * @property {string|null} audioProfile\n *           Audio profile\n */\n\n/**\n * Parses a codec string to retrieve the number of codecs specified, the video codec and\n * object type indicator, and the audio profile.\n *\n * @param {string} [codecString]\n *        The codec string to parse\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var parseCodecs = function parseCodecs(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  var codecs = codecString.split(',');\n  var result = [];\n  codecs.forEach(function (codec) {\n    codec = codec.trim();\n    var codecType;\n    mediaTypes.forEach(function (name) {\n      var match = regexs[name].exec(codec.toLowerCase());\n\n      if (!match || match.length <= 1) {\n        return;\n      }\n\n      codecType = name; // maintain codec case\n\n      var type = codec.substring(0, match[1].length);\n      var details = codec.replace(type, '');\n      result.push({\n        type: type,\n        details: details,\n        mediaType: name\n      });\n    });\n\n    if (!codecType) {\n      result.push({\n        type: codec,\n        details: '',\n        mediaType: 'unknown'\n      });\n    }\n  });\n  return result;\n};\n/**\n * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n * a default alternate audio playlist for the provided audio group.\n *\n * @param {Object} master\n *        The master playlist\n * @param {string} audioGroupId\n *        ID of the audio group for which to find the default codec info\n * @return {ParsedCodecInfo}\n *         Parsed codec info\n */\n\nexport var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType.default && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS);\n    }\n  }\n\n  return null;\n};\nexport var isVideoCodec = function isVideoCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.video.test(codec.trim().toLowerCase());\n};\nexport var isAudioCodec = function isAudioCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.audio.test(codec.trim().toLowerCase());\n};\nexport var isTextCodec = function isTextCodec(codec) {\n  if (codec === void 0) {\n    codec = '';\n  }\n\n  return regexs.text.test(codec.trim().toLowerCase());\n};\nexport var getMimeForCodec = function getMimeForCodec(codecString) {\n  if (!codecString || typeof codecString !== 'string') {\n    return;\n  }\n\n  var codecs = codecString.toLowerCase().split(',').map(function (c) {\n    return translateLegacyCodec(c.trim());\n  }); // default to video type\n\n  var type = 'video'; // only change to audio type if the only codec we have is\n  // audio\n\n  if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n    type = 'audio';\n  } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n    // text uses application/<container> for now\n    type = 'application';\n  } // default the container to mp4\n\n\n  var container = 'mp4'; // every codec must be able to go into the container\n  // for that container to be the correct one\n\n  if (codecs.every(function (c) {\n    return regexs.mp4.test(c);\n  })) {\n    container = 'mp4';\n  } else if (codecs.every(function (c) {\n    return regexs.webm.test(c);\n  })) {\n    container = 'webm';\n  } else if (codecs.every(function (c) {\n    return regexs.ogg.test(c);\n  })) {\n    container = 'ogg';\n  }\n\n  return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n};\nexport var browserSupportsCodec = function browserSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n};\nexport var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n  if (codecString === void 0) {\n    codecString = '';\n  }\n\n  return codecString.toLowerCase().split(',').every(function (codec) {\n    codec = codec.trim(); // any match is supported.\n\n    for (var i = 0; i < upperMediaTypes.length; i++) {\n      var type = upperMediaTypes[i];\n\n      if (regexs[\"muxer\" + type].test(codec)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\nexport var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\nexport var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';","var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\nvar DASH_REGEX = /^application\\/dash\\+xml/i;\n/**\n * Returns a string that describes the type of source based on a video source object's\n * media type.\n *\n * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n *\n * @param {string} type\n *        Video source object media type\n * @return {('hls'|'dash'|'vhs-json'|null)}\n *         VHS source type string\n */\n\nexport var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  if (MPEGURL_REGEX.test(type)) {\n    return 'hls';\n  }\n\n  if (DASH_REGEX.test(type)) {\n    return 'dash';\n  } // Denotes the special case of a manifest object passed to http-streaming instead of a\n  // source URL.\n  //\n  // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n  //\n  // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n  // project, and the +json suffix identifies the structure of the media type.\n\n\n  if (type === 'application/vnd.videojs.vhs+json') {\n    return 'vhs-json';\n  }\n\n  return null;\n};","import window from 'global/window'; // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n\nvar repeat = function repeat(str, len) {\n  var acc = '';\n\n  while (len--) {\n    acc += str;\n  }\n\n  return acc;\n}; // count the number of bits it would take to represent a number\n// we used to do this with log2 but BigInt does not support builtin math\n// Math.ceil(log2(x));\n\n\nexport var countBits = function countBits(x) {\n  return x.toString(2).length;\n}; // count the number of whole bytes it would take to represent a number\n\nexport var countBytes = function countBytes(x) {\n  return Math.ceil(countBits(x) / 8);\n};\nexport var padStart = function padStart(b, len, str) {\n  if (str === void 0) {\n    str = ' ';\n  }\n\n  return (repeat(str, len) + b.toString()).slice(-len);\n};\nexport var isArrayBufferView = function isArrayBufferView(obj) {\n  if (ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(obj);\n  }\n\n  return obj && obj.buffer instanceof ArrayBuffer;\n};\nexport var isTypedArray = function isTypedArray(obj) {\n  return isArrayBufferView(obj);\n};\nexport var toUint8 = function toUint8(bytes) {\n  if (bytes instanceof Uint8Array) {\n    return bytes;\n  }\n\n  if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n    // any non-number or NaN leads to empty uint8array\n    // eslint-disable-next-line\n    if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n      bytes = 0;\n    } else {\n      bytes = [bytes];\n    }\n  }\n\n  return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n};\nexport var toHexString = function toHexString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(16), 2, '0');\n  }\n\n  return str;\n};\nexport var toBinaryString = function toBinaryString(bytes) {\n  bytes = toUint8(bytes);\n  var str = '';\n\n  for (var i = 0; i < bytes.length; i++) {\n    str += padStart(bytes[i].toString(2), 8, '0');\n  }\n\n  return str;\n};\nvar BigInt = window.BigInt || Number;\nvar BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\nexport var ENDIANNESS = function () {\n  var a = new Uint16Array([0xFFCC]);\n  var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n\n  if (b[0] === 0xFF) {\n    return 'big';\n  }\n\n  if (b[0] === 0xCC) {\n    return 'little';\n  }\n\n  return 'unknown';\n}();\nexport var IS_BIG_ENDIAN = ENDIANNESS === 'big';\nexport var IS_LITTLE_ENDIAN = ENDIANNESS === 'little';\nexport var bytesToNumber = function bytesToNumber(bytes, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n\n  bytes = toUint8(bytes);\n  var fn = le ? 'reduce' : 'reduceRight';\n  var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n  var number = obj.call(bytes, function (total, byte, i) {\n    var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n    return total + BigInt(byte) * BYTE_TABLE[exponent];\n  }, BigInt(0));\n\n  if (signed) {\n    var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n    number = BigInt(number);\n\n    if (number > max) {\n      number -= max;\n      number -= max;\n      number -= BigInt(2);\n    }\n  }\n\n  return Number(number);\n};\nexport var numberToBytes = function numberToBytes(number, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n  // eslint-disable-next-line\n  if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n    number = 0;\n  }\n\n  number = BigInt(number);\n  var byteCount = countBytes(number);\n  var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n\n  for (var i = 0; i < byteCount; i++) {\n    var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n    bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n\n    if (number < 0) {\n      bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n      bytes[byteIndex] -= i === 0 ? 1 : 2;\n    }\n  }\n\n  return bytes;\n};\nexport var bytesToString = function bytesToString(bytes) {\n  if (!bytes) {\n    return '';\n  } // TODO: should toUint8 handle cases where we only have 8 bytes\n  // but report more since this is a Uint16+ Array?\n\n\n  bytes = Array.prototype.slice.call(bytes);\n  var string = String.fromCharCode.apply(null, toUint8(bytes));\n\n  try {\n    return decodeURIComponent(escape(string));\n  } catch (e) {// if decodeURIComponent/escape fails, we are dealing with partial\n    // or full non string data. Just return the potentially garbled string.\n  }\n\n  return string;\n};\nexport var stringToBytes = function stringToBytes(string, stringIsBytes) {\n  if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n    string = string.toString();\n  }\n\n  if (typeof string !== 'string') {\n    return new Uint8Array();\n  } // If the string already is bytes, we don't have to do this\n  // otherwise we do this so that we split multi length characters\n  // into individual bytes\n\n\n  if (!stringIsBytes) {\n    string = unescape(encodeURIComponent(string));\n  }\n\n  var view = new Uint8Array(string.length);\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view;\n};\nexport var concatTypedArrays = function concatTypedArrays() {\n  for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n    buffers[_key] = arguments[_key];\n  }\n\n  buffers = buffers.filter(function (b) {\n    return b && (b.byteLength || b.length) && typeof b !== 'string';\n  });\n\n  if (buffers.length <= 1) {\n    // for 0 length we will return empty uint8\n    // for 1 length we return the first uint8\n    return toUint8(buffers[0]);\n  }\n\n  var totalLen = buffers.reduce(function (total, buf, i) {\n    return total + (buf.byteLength || buf.length);\n  }, 0);\n  var tempBuffer = new Uint8Array(totalLen);\n  var offset = 0;\n  buffers.forEach(function (buf) {\n    buf = toUint8(buf);\n    tempBuffer.set(buf, offset);\n    offset += buf.byteLength;\n  });\n  return tempBuffer;\n};\n/**\n * Check if the bytes \"b\" are contained within bytes \"a\".\n *\n * @param {Uint8Array|Array} a\n *        Bytes to check in\n *\n * @param {Uint8Array|Array} b\n *        Bytes to check for\n *\n * @param {Object} options\n *        options\n *\n * @param {Array|Uint8Array} [offset=0]\n *        offset to use when looking at bytes in a\n *\n * @param {Array|Uint8Array} [mask=[]]\n *        mask to use on bytes before comparison.\n *\n * @return {boolean}\n *         If all bytes in b are inside of a, taking into account\n *         bit masks.\n */\n\nexport var bytesMatch = function bytesMatch(a, b, _temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n\n  a = toUint8(a);\n  b = toUint8(b); // ie 11 does not support uint8 every\n\n  var fn = b.every ? b.every : Array.prototype.every;\n  return b.length && a.length - offset >= b.length && // ie 11 doesn't support every on uin8\n  fn.call(b, function (bByte, i) {\n    var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n    return bByte === aByte;\n  });\n};\nexport var sliceBytes = function sliceBytes(src, start, end) {\n  if (Uint8Array.prototype.slice) {\n    return Uint8Array.prototype.slice.call(src, start, end);\n  }\n\n  return new Uint8Array(Array.prototype.slice.call(src, start, end));\n};\nexport var reverseBytes = function reverseBytes(src) {\n  if (src.reverse) {\n    return src.reverse();\n  }\n\n  return Array.prototype.reverse.call(src);\n};","import window from 'global/window';\n\nvar atob = function atob(s) {\n  return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n};\n\nexport default function decodeB64ToUint8Array(b64Text) {\n  var decodedString = atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}","import { stringToBytes, toUint8, bytesMatch, bytesToString, toHexString, padStart, bytesToNumber } from './byte-helpers.js';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js';\nimport { parseOpusHead } from './opus-helpers.js';\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return stringToBytes(path);\n  }\n\n  if (typeof path === 'number') {\n    return path;\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar DESCRIPTORS;\nexport var parseDescriptors = function parseDescriptors(bytes) {\n  bytes = toUint8(bytes);\n  var results = [];\n  var i = 0;\n\n  while (bytes.length > i) {\n    var tag = bytes[i];\n    var size = 0;\n    var headerSize = 0; // tag\n\n    headerSize++;\n    var byte = bytes[headerSize]; // first byte\n\n    headerSize++;\n\n    while (byte & 0x80) {\n      size = (byte & 0x7F) << 7;\n      byte = bytes[headerSize];\n      headerSize++;\n    }\n\n    size += byte & 0x7F;\n\n    for (var z = 0; z < DESCRIPTORS.length; z++) {\n      var _DESCRIPTORS$z = DESCRIPTORS[z],\n          id = _DESCRIPTORS$z.id,\n          parser = _DESCRIPTORS$z.parser;\n\n      if (tag === id) {\n        results.push(parser(bytes.subarray(headerSize, headerSize + size)));\n        break;\n      }\n    }\n\n    i += size + headerSize;\n  }\n\n  return results;\n};\nDESCRIPTORS = [{\n  id: 0x03,\n  parser: function parser(bytes) {\n    var desc = {\n      tag: 0x03,\n      id: bytes[0] << 8 | bytes[1],\n      flags: bytes[2],\n      size: 3,\n      dependsOnEsId: 0,\n      ocrEsId: 0,\n      descriptors: [],\n      url: ''\n    }; // depends on es id\n\n    if (desc.flags & 0x80) {\n      desc.dependsOnEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    } // url\n\n\n    if (desc.flags & 0x40) {\n      var len = bytes[desc.size];\n      desc.url = bytesToString(bytes.subarray(desc.size + 1, desc.size + 1 + len));\n      desc.size += len;\n    } // ocr es id\n\n\n    if (desc.flags & 0x20) {\n      desc.ocrEsId = bytes[desc.size] << 8 | bytes[desc.size + 1];\n      desc.size += 2;\n    }\n\n    desc.descriptors = parseDescriptors(bytes.subarray(desc.size)) || [];\n    return desc;\n  }\n}, {\n  id: 0x04,\n  parser: function parser(bytes) {\n    // DecoderConfigDescriptor\n    var desc = {\n      tag: 0x04,\n      oti: bytes[0],\n      streamType: bytes[1],\n      bufferSize: bytes[2] << 16 | bytes[3] << 8 | bytes[4],\n      maxBitrate: bytes[5] << 24 | bytes[6] << 16 | bytes[7] << 8 | bytes[8],\n      avgBitrate: bytes[9] << 24 | bytes[10] << 16 | bytes[11] << 8 | bytes[12],\n      descriptors: parseDescriptors(bytes.subarray(13))\n    };\n    return desc;\n  }\n}, {\n  id: 0x05,\n  parser: function parser(bytes) {\n    // DecoderSpecificInfo\n    return {\n      tag: 0x05,\n      bytes: bytes\n    };\n  }\n}, {\n  id: 0x06,\n  parser: function parser(bytes) {\n    // SLConfigDescriptor\n    return {\n      tag: 0x06,\n      bytes: bytes\n    };\n  }\n}];\n/**\n * find any number of boxes by name given a path to it in an iso bmff\n * such as mp4.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {Uint8Array[]|string[]|string|Uint8Array} name\n *        An array of paths or a single path representing the name\n *        of boxes to search through in bytes. Paths may be\n *        uint8 (character codes) or strings.\n *\n * @param {boolean} [complete=false]\n *        Should we search only for complete boxes on the final path.\n *        This is very useful when you do not want to get back partial boxes\n *        in the case of streaming files.\n *\n * @return {Uint8Array[]}\n *         An array of the end paths that we found.\n */\n\nexport var findBox = function findBox(bytes, paths, complete) {\n  if (complete === void 0) {\n    complete = false;\n  }\n\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    // short-circuit the search for empty paths\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n    var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n    if (size === 0) {\n      break;\n    }\n\n    var end = i + size;\n\n    if (end > bytes.length) {\n      // this box is bigger than the number of bytes we have\n      // and complete is set, we cannot find any more boxes.\n      if (complete) {\n        break;\n      }\n\n      end = bytes.length;\n    }\n\n    var data = bytes.subarray(i + 8, end);\n\n    if (bytesMatch(type, paths[0])) {\n      if (paths.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next box along the path\n        results.push.apply(results, findBox(data, paths.slice(1), complete));\n      }\n    }\n\n    i = end;\n  } // we've finished searching all of bytes\n\n\n  return results;\n};\n/**\n * Search for a single matching box by name in an iso bmff format like\n * mp4. This function is useful for finding codec boxes which\n * can be placed arbitrarily in sample descriptions depending\n * on the version of the file or file type.\n *\n * @param {TypedArray} bytes\n *        bytes for the iso bmff to search for boxes in\n *\n * @param {string|Uint8Array} name\n *        The name of the box to find.\n *\n * @return {Uint8Array[]}\n *         a subarray of bytes representing the name boxed we found.\n */\n\nexport var findNamedBox = function findNamedBox(bytes, name) {\n  name = normalizePath(name);\n\n  if (!name.length) {\n    // short-circuit the search for empty paths\n    return bytes.subarray(bytes.length);\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    if (bytesMatch(bytes.subarray(i, i + name.length), name)) {\n      var size = (bytes[i - 4] << 24 | bytes[i - 3] << 16 | bytes[i - 2] << 8 | bytes[i - 1]) >>> 0;\n      var end = size > 1 ? i + size : bytes.byteLength;\n      return bytes.subarray(i + 4, end);\n    }\n\n    i++;\n  } // we've finished searching all of bytes\n\n\n  return bytes.subarray(bytes.length);\n};\n\nvar parseSamples = function parseSamples(data, entrySize, parseEntry) {\n  if (entrySize === void 0) {\n    entrySize = 4;\n  }\n\n  if (parseEntry === void 0) {\n    parseEntry = function parseEntry(d) {\n      return bytesToNumber(d);\n    };\n  }\n\n  var entries = [];\n\n  if (!data || !data.length) {\n    return entries;\n  }\n\n  var entryCount = bytesToNumber(data.subarray(4, 8));\n\n  for (var i = 8; entryCount; i += entrySize, entryCount--) {\n    entries.push(parseEntry(data.subarray(i, i + entrySize)));\n  }\n\n  return entries;\n};\n\nexport var buildFrameTable = function buildFrameTable(stbl, timescale) {\n  var keySamples = parseSamples(findBox(stbl, ['stss'])[0]);\n  var chunkOffsets = parseSamples(findBox(stbl, ['stco'])[0]);\n  var timeToSamples = parseSamples(findBox(stbl, ['stts'])[0], 8, function (entry) {\n    return {\n      sampleCount: bytesToNumber(entry.subarray(0, 4)),\n      sampleDelta: bytesToNumber(entry.subarray(4, 8))\n    };\n  });\n  var samplesToChunks = parseSamples(findBox(stbl, ['stsc'])[0], 12, function (entry) {\n    return {\n      firstChunk: bytesToNumber(entry.subarray(0, 4)),\n      samplesPerChunk: bytesToNumber(entry.subarray(4, 8)),\n      sampleDescriptionIndex: bytesToNumber(entry.subarray(8, 12))\n    };\n  });\n  var stsz = findBox(stbl, ['stsz'])[0]; // stsz starts with a 4 byte sampleSize which we don't need\n\n  var sampleSizes = parseSamples(stsz && stsz.length && stsz.subarray(4) || null);\n  var frames = [];\n\n  for (var chunkIndex = 0; chunkIndex < chunkOffsets.length; chunkIndex++) {\n    var samplesInChunk = void 0;\n\n    for (var i = 0; i < samplesToChunks.length; i++) {\n      var sampleToChunk = samplesToChunks[i];\n      var isThisOne = chunkIndex + 1 >= sampleToChunk.firstChunk && (i + 1 >= samplesToChunks.length || chunkIndex + 1 < samplesToChunks[i + 1].firstChunk);\n\n      if (isThisOne) {\n        samplesInChunk = sampleToChunk.samplesPerChunk;\n        break;\n      }\n    }\n\n    var chunkOffset = chunkOffsets[chunkIndex];\n\n    for (var _i = 0; _i < samplesInChunk; _i++) {\n      var frameEnd = sampleSizes[frames.length]; // if we don't have key samples every frame is a keyframe\n\n      var keyframe = !keySamples.length;\n\n      if (keySamples.length && keySamples.indexOf(frames.length + 1) !== -1) {\n        keyframe = true;\n      }\n\n      var frame = {\n        keyframe: keyframe,\n        start: chunkOffset,\n        end: chunkOffset + frameEnd\n      };\n\n      for (var k = 0; k < timeToSamples.length; k++) {\n        var _timeToSamples$k = timeToSamples[k],\n            sampleCount = _timeToSamples$k.sampleCount,\n            sampleDelta = _timeToSamples$k.sampleDelta;\n\n        if (frames.length <= sampleCount) {\n          // ms to ns\n          var lastTimestamp = frames.length ? frames[frames.length - 1].timestamp : 0;\n          frame.timestamp = lastTimestamp + sampleDelta / timescale * 1000;\n          frame.duration = sampleDelta;\n          break;\n        }\n      }\n\n      frames.push(frame);\n      chunkOffset += frameEnd;\n    }\n  }\n\n  return frames;\n};\nexport var addSampleDescription = function addSampleDescription(track, bytes) {\n  var codec = bytesToString(bytes.subarray(0, 4));\n\n  if (track.type === 'video') {\n    track.info = track.info || {};\n    track.info.width = bytes[28] << 8 | bytes[29];\n    track.info.height = bytes[30] << 8 | bytes[31];\n  } else if (track.type === 'audio') {\n    track.info = track.info || {};\n    track.info.channels = bytes[20] << 8 | bytes[21];\n    track.info.bitDepth = bytes[22] << 8 | bytes[23];\n    track.info.sampleRate = bytes[28] << 8 | bytes[29];\n  }\n\n  if (codec === 'avc1') {\n    var avcC = findNamedBox(bytes, 'avcC'); // AVCDecoderConfigurationRecord\n\n    codec += \".\" + getAvcCodec(avcC);\n    track.info.avcC = avcC; // TODO: do we need to parse all this?\n\n    /* {\n      configurationVersion: avcC[0],\n      profile: avcC[1],\n      profileCompatibility: avcC[2],\n      level: avcC[3],\n      lengthSizeMinusOne: avcC[4] & 0x3\n    };\n     let spsNalUnitCount = avcC[5] & 0x1F;\n    const spsNalUnits = track.info.avc.spsNalUnits = [];\n     // past spsNalUnitCount\n    let offset = 6;\n     while (spsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       spsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }\n    let ppsNalUnitCount = avcC[offset];\n    const ppsNalUnits = track.info.avc.ppsNalUnits = [];\n     // past ppsNalUnitCount\n    offset += 1;\n     while (ppsNalUnitCount--) {\n      const nalLen = avcC[offset] << 8 | avcC[offset + 1];\n       ppsNalUnits.push(avcC.subarray(offset + 2, offset + 2 + nalLen));\n       offset += nalLen + 2;\n    }*/\n    // HEVCDecoderConfigurationRecord\n  } else if (codec === 'hvc1' || codec === 'hev1') {\n    codec += \".\" + getHvcCodec(findNamedBox(bytes, 'hvcC'));\n  } else if (codec === 'mp4a' || codec === 'mp4v') {\n    var esds = findNamedBox(bytes, 'esds');\n    var esDescriptor = parseDescriptors(esds.subarray(4))[0];\n    var decoderConfig = esDescriptor && esDescriptor.descriptors.filter(function (_ref) {\n      var tag = _ref.tag;\n      return tag === 0x04;\n    })[0];\n\n    if (decoderConfig) {\n      // most codecs do not have a further '.'\n      // such as 0xa5 for ac-3 and 0xa6 for e-ac-3\n      codec += '.' + toHexString(decoderConfig.oti);\n\n      if (decoderConfig.oti === 0x40) {\n        codec += '.' + (decoderConfig.descriptors[0].bytes[0] >> 3).toString();\n      } else if (decoderConfig.oti === 0x20) {\n        codec += '.' + decoderConfig.descriptors[0].bytes[4].toString();\n      } else if (decoderConfig.oti === 0xdd) {\n        codec = 'vorbis';\n      }\n    } else if (track.type === 'audio') {\n      codec += '.40.2';\n    } else {\n      codec += '.20.9';\n    }\n  } else if (codec === 'av01') {\n    // AV1DecoderConfigurationRecord\n    codec += \".\" + getAv1Codec(findNamedBox(bytes, 'av1C'));\n  } else if (codec === 'vp09') {\n    // VPCodecConfigurationRecord\n    var vpcC = findNamedBox(bytes, 'vpcC'); // https://www.webmproject.org/vp9/mp4/\n\n    var profile = vpcC[0];\n    var level = vpcC[1];\n    var bitDepth = vpcC[2] >> 4;\n    var chromaSubsampling = (vpcC[2] & 0x0F) >> 1;\n    var videoFullRangeFlag = (vpcC[2] & 0x0F) >> 3;\n    var colourPrimaries = vpcC[3];\n    var transferCharacteristics = vpcC[4];\n    var matrixCoefficients = vpcC[5];\n    codec += \".\" + padStart(profile, 2, '0');\n    codec += \".\" + padStart(level, 2, '0');\n    codec += \".\" + padStart(bitDepth, 2, '0');\n    codec += \".\" + padStart(chromaSubsampling, 2, '0');\n    codec += \".\" + padStart(colourPrimaries, 2, '0');\n    codec += \".\" + padStart(transferCharacteristics, 2, '0');\n    codec += \".\" + padStart(matrixCoefficients, 2, '0');\n    codec += \".\" + padStart(videoFullRangeFlag, 2, '0');\n  } else if (codec === 'theo') {\n    codec = 'theora';\n  } else if (codec === 'spex') {\n    codec = 'speex';\n  } else if (codec === '.mp3') {\n    codec = 'mp4a.40.34';\n  } else if (codec === 'msVo') {\n    codec = 'vorbis';\n  } else if (codec === 'Opus') {\n    codec = 'opus';\n    var dOps = findNamedBox(bytes, 'dOps');\n    track.info.opus = parseOpusHead(dOps); // TODO: should this go into the webm code??\n    // Firefox requires a codecDelay for opus playback\n    // see https://bugzilla.mozilla.org/show_bug.cgi?id=1276238\n\n    track.info.codecDelay = 6500000;\n  } else {\n    codec = codec.toLowerCase();\n  }\n  /* eslint-enable */\n  // flac, ac-3, ec-3, opus\n\n\n  track.codec = codec;\n};\nexport var parseTracks = function parseTracks(bytes, frameTable) {\n  if (frameTable === void 0) {\n    frameTable = true;\n  }\n\n  bytes = toUint8(bytes);\n  var traks = findBox(bytes, ['moov', 'trak'], true);\n  var tracks = [];\n  traks.forEach(function (trak) {\n    var track = {\n      bytes: trak\n    };\n    var mdia = findBox(trak, ['mdia'])[0];\n    var hdlr = findBox(mdia, ['hdlr'])[0];\n    var trakType = bytesToString(hdlr.subarray(8, 12));\n\n    if (trakType === 'soun') {\n      track.type = 'audio';\n    } else if (trakType === 'vide') {\n      track.type = 'video';\n    } else {\n      track.type = trakType;\n    }\n\n    var tkhd = findBox(trak, ['tkhd'])[0];\n\n    if (tkhd) {\n      var view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n      var tkhdVersion = view.getUint8(0);\n      track.number = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n    }\n\n    var mdhd = findBox(mdia, ['mdhd'])[0];\n\n    if (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      track.timescale = (mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]) >>> 0;\n    }\n\n    var stbl = findBox(mdia, ['minf', 'stbl'])[0];\n    var stsd = findBox(stbl, ['stsd'])[0];\n    var descriptionCount = bytesToNumber(stsd.subarray(4, 8));\n    var offset = 8; // add codec and codec info\n\n    while (descriptionCount--) {\n      var len = bytesToNumber(stsd.subarray(offset, offset + 4));\n      var sampleDescriptor = stsd.subarray(offset + 4, offset + 4 + len);\n      addSampleDescription(track, sampleDescriptor);\n      offset += 4 + len;\n    }\n\n    if (frameTable) {\n      track.frameTable = buildFrameTable(stbl, track.timescale);\n    } // codec has no sub parameters\n\n\n    tracks.push(track);\n  });\n  return tracks;\n};\nexport var parseMediaInfo = function parseMediaInfo(bytes) {\n  var mvhd = findBox(bytes, ['moov', 'mvhd'], true)[0];\n\n  if (!mvhd || !mvhd.length) {\n    return;\n  }\n\n  var info = {}; // ms to ns\n  // mvhd v1 has 8 byte duration and other fields too\n\n  if (mvhd[0] === 1) {\n    info.timestampScale = bytesToNumber(mvhd.subarray(20, 24));\n    info.duration = bytesToNumber(mvhd.subarray(24, 32));\n  } else {\n    info.timestampScale = bytesToNumber(mvhd.subarray(12, 16));\n    info.duration = bytesToNumber(mvhd.subarray(16, 20));\n  }\n\n  info.bytes = mvhd;\n  return info;\n};","/*! @name mpd-parser @version 1.3.0 @license Apache-2.0 */\nimport resolveUrl from '@videojs/vhs-utils/es/resolve-url';\nimport window from 'global/window';\nimport { forEachMediaGroup } from '@videojs/vhs-utils/es/media-groups';\nimport decodeB64ToUint8Array from '@videojs/vhs-utils/es/decode-b64-to-uint8-array';\nimport { DOMParser } from '@xmldom/xmldom';\n\nvar version = \"1.3.0\";\n\nconst isObject = obj => {\n  return !!obj && typeof obj === 'object';\n};\n\nconst merge = (...objects) => {\n  return objects.reduce((result, source) => {\n    if (typeof source !== 'object') {\n      return result;\n    }\n\n    Object.keys(source).forEach(key => {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nconst values = o => Object.keys(o).map(k => o[k]);\n\nconst range = (start, end) => {\n  const result = [];\n\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nconst flatten = lists => lists.reduce((x, y) => x.concat(y), []);\nconst from = list => {\n  if (!list.length) {\n    return [];\n  }\n\n  const result = [];\n\n  for (let i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nconst findIndexes = (l, key) => l.reduce((a, e, i) => {\n  if (e[key]) {\n    a.push(i);\n  }\n\n  return a;\n}, []);\n/**\n * Returns a union of the included lists provided each element can be identified by a key.\n *\n * @param {Array} list - list of lists to get the union of\n * @param {Function} keyFunction - the function to use as a key for each element\n *\n * @return {Array} the union of the arrays\n */\n\nconst union = (lists, keyFunction) => {\n  return values(lists.reduce((acc, list) => {\n    list.forEach(el => {\n      acc[keyFunction(el)] = el;\n    });\n    return acc;\n  }, {}));\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  INVALID_NUMBER_OF_CONTENT_STEERING: 'INVALID_NUMBER_OF_CONTENT_STEERING',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nconst urlTypeToSegment = ({\n  baseUrl = '',\n  source = '',\n  range = '',\n  indexRange = ''\n}) => {\n  const segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    const rangeStr = range ? range : indexRange;\n    const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n    let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n    let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n    if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n      startRange = Number(startRange);\n    }\n\n    if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n      endRange = Number(endRange);\n    }\n\n    let length;\n\n    if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n      length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n    } else {\n      length = endRange - startRange + 1;\n    }\n\n    if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n      length = Number(length);\n    } // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n\n    segment.byterange = {\n      length,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nconst byteRangeToString = byterange => {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let endRange;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n  } else {\n    endRange = byterange.offset + byterange.length - 1;\n  }\n\n  return `${byterange.offset}-${endRange}`;\n};\n\n/**\n * parse the end number attribue that can be a string\n * number, or undefined.\n *\n * @param {string|number|undefined} endNumber\n *        The end number attribute.\n *\n * @return {number|null}\n *          The result of parsing the end number.\n */\n\nconst parseEndNumber = endNumber => {\n  if (endNumber && typeof endNumber !== 'number') {\n    endNumber = parseInt(endNumber, 10);\n  }\n\n  if (isNaN(endNumber)) {\n    return null;\n  }\n\n  return endNumber;\n};\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\n\nconst segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static(attributes) {\n    const {\n      duration,\n      timescale = 1,\n      sourceDuration,\n      periodDuration\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber);\n    const segmentDuration = duration / timescale;\n\n    if (typeof endNumber === 'number') {\n      return {\n        start: 0,\n        end: endNumber\n      };\n    }\n\n    if (typeof periodDuration === 'number') {\n      return {\n        start: 0,\n        end: periodDuration / segmentDuration\n      };\n    }\n\n    return {\n      start: 0,\n      end: sourceDuration / segmentDuration\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic(attributes) {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      duration,\n      periodStart = 0,\n      minimumUpdatePeriod = 0,\n      timeShiftBufferDepth = Infinity\n    } = attributes;\n    const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n    // after retrieving UTC server time.\n\n    const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n    // Convert the period start time to EPOCH.\n\n    const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    const segmentCount = Math.ceil(periodDuration * timescale / duration);\n    const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n    };\n  }\n\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nconst toSegments = attributes => number => {\n  const {\n    duration,\n    timescale = 1,\n    periodStart,\n    startNumber = 1\n  } = attributes;\n  return {\n    number: startNumber + number,\n    duration: duration / timescale,\n    timeline: periodStart,\n    time: number * duration\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseByDuration = attributes => {\n  const {\n    type,\n    duration,\n    timescale = 1,\n    periodDuration,\n    sourceDuration\n  } = attributes;\n  const {\n    start,\n    end\n  } = segmentRange[type](attributes);\n  const segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    const index = segments.length - 1; // section is either a period or the full source\n\n    const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n    segments[index].duration = sectionDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nconst segmentsFromBase = attributes => {\n  const {\n    baseUrl,\n    initialization = {},\n    sourceDuration,\n    indexRange = '',\n    periodStart,\n    presentationTime,\n    number = 0,\n    duration\n  } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: baseUrl,\n    indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    const segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration;\n    segment.timeline = periodStart;\n  } // If presentation time is provided, these segments are being generated by SIDX\n  // references, and should use the time provided. For the general case of SegmentBase,\n  // there should only be one segment in the period, so its presentation time is the same\n  // as its period start.\n\n\n  segment.presentationTime = presentationTime || periodStart;\n  segment.number = number;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nconst addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n  // Retain init segment information\n  const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n  const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  const timeline = playlist.timeline || 0;\n  const sidxByteRange = playlist.sidx.byterange;\n  const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n  const segments = [];\n  const type = playlist.endList ? 'static' : 'dynamic';\n  const periodStart = playlist.sidx.timeline;\n  let presentationTime = periodStart;\n  let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n  let startIndex; // eslint-disable-next-line\n\n  if (typeof sidx.firstOffset === 'bigint') {\n    startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n  } else {\n    startIndex = sidxEnd + sidx.firstOffset;\n  }\n\n  for (let i = 0; i < mediaReferences.length; i++) {\n    const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    const duration = reference.subsegmentDuration; // should be an inclusive range\n\n    let endIndex; // eslint-disable-next-line\n\n    if (typeof startIndex === 'bigint') {\n      endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n    } else {\n      endIndex = startIndex + size - 1;\n    }\n\n    const indexRange = `${startIndex}-${endIndex}`;\n    const attributes = {\n      baseUrl,\n      timescale,\n      timeline,\n      periodStart,\n      presentationTime,\n      number,\n      duration,\n      sourceDuration,\n      indexRange,\n      type\n    };\n    const segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n\n    if (typeof startIndex === 'bigint') {\n      startIndex += window.BigInt(size);\n    } else {\n      startIndex += size;\n    }\n\n    presentationTime += duration / timescale;\n    number++;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nconst SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\nconst TIME_FUDGE = 1 / 60;\n/**\n * Given a list of timelineStarts, combines, dedupes, and sorts them.\n *\n * @param {TimelineStart[]} timelineStarts - list of timeline starts\n *\n * @return {TimelineStart[]} the combined and deduped timeline starts\n */\n\nconst getUniqueTimelineStarts = timelineStarts => {\n  return union(timelineStarts, ({\n    timeline\n  }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n};\n/**\n * Finds the playlist with the matching NAME attribute.\n *\n * @param {Array} playlists - playlists to search through\n * @param {string} name - the NAME attribute to search for\n *\n * @return {Object|null} the matching playlist object, or null\n */\n\nconst findPlaylistWithName = (playlists, name) => {\n  for (let i = 0; i < playlists.length; i++) {\n    if (playlists[i].attributes.NAME === name) {\n      return playlists[i];\n    }\n  }\n\n  return null;\n};\n/**\n * Gets a flattened array of media group playlists.\n *\n * @param {Object} manifest - the main manifest object\n *\n * @return {Array} the media group playlists\n */\n\nconst getMediaGroupPlaylists = manifest => {\n  let mediaGroupPlaylists = [];\n  forEachMediaGroup(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n    mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n  });\n  return mediaGroupPlaylists;\n};\n/**\n * Updates the playlist's media sequence numbers.\n *\n * @param {Object} config - options object\n * @param {Object} config.playlist - the playlist to update\n * @param {number} config.mediaSequence - the mediaSequence number to start with\n */\n\nconst updateMediaSequenceForPlaylist = ({\n  playlist,\n  mediaSequence\n}) => {\n  playlist.mediaSequence = mediaSequence;\n  playlist.segments.forEach((segment, index) => {\n    segment.number = playlist.mediaSequence + index;\n  });\n};\n/**\n * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n * and a complete list of timeline starts.\n *\n * If no matching playlist is found, only the discontinuity sequence number of the playlist\n * will be updated.\n *\n * Since early available timelines are not supported, at least one segment must be present.\n *\n * @param {Object} config - options object\n * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n * @param {Object[]} newPlaylists - the new playlists to update\n * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n */\n\nconst updateSequenceNumbers = ({\n  oldPlaylists,\n  newPlaylists,\n  timelineStarts\n}) => {\n  newPlaylists.forEach(playlist => {\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n    // (see ISO_23009-1-2012 5.3.5.2).\n    //\n    // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n    const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n\n    if (!oldPlaylist) {\n      // Since this is a new playlist, the media sequence values can start from 0 without\n      // consequence.\n      return;\n    } // TODO better support for live SIDX\n    //\n    // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n    // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n    // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n    // not supported when the SIDX properties change on refreshes.\n    //\n    // In the future, if support needs to be added, the merging logic here can be called\n    // after SIDX references are resolved. For now, exit early to prevent exceptions being\n    // thrown due to undefined references.\n\n\n    if (playlist.sidx) {\n      return;\n    } // Since we don't yet support early available timelines, we don't need to support\n    // playlists with no segments.\n\n\n    const firstNewSegment = playlist.segments[0];\n    const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n      return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n    }); // No matching segment from the old playlist means the entire playlist was refreshed.\n    // In this case the media sequence should account for this update, and the new segments\n    // should be marked as discontinuous from the prior content, since the last prior\n    // timeline was removed.\n\n    if (oldMatchingSegmentIndex === -1) {\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n      });\n      playlist.segments[0].discontinuity = true;\n      playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n      //\n      // If the new playlist's timeline is the same as the last seen segment's timeline,\n      // then a discontinuity can be added to identify that there's potentially missing\n      // content. If there's no missing content, the discontinuity should still be rather\n      // harmless. It's possible that if segment durations are accurate enough, that the\n      // existence of a gap can be determined using the presentation times and durations,\n      // but if the segment timing info is off, it may introduce more problems than simply\n      // adding the discontinuity.\n      //\n      // If the new playlist's timeline is different from the last seen segment's timeline,\n      // then a discontinuity can be added to identify that this is the first seen segment\n      // of a new timeline. However, the logic at the start of this function that\n      // determined the disconinuity sequence by timeline index is now off by one (the\n      // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n      // we added it), so the disconinuity sequence must be decremented.\n      //\n      // A period may also have a duration of zero, so the case of no segments is handled\n      // here even though we don't yet support early available periods.\n\n      if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n        playlist.discontinuitySequence--;\n      }\n\n      return;\n    } // If the first segment matched with a prior segment on a discontinuity (it's matching\n    // on the first segment of a period), then the discontinuitySequence shouldn't be the\n    // timeline's matching one, but instead should be the one prior, and the first segment\n    // of the new manifest should be marked with a discontinuity.\n    //\n    // The reason for this special case is that discontinuity sequence shows how many\n    // discontinuities have fallen off of the playlist, and discontinuities are marked on\n    // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n    // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n    // sequence, and that first segment is an indicator, but can be removed before that\n    // timeline is gone.\n\n\n    const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n\n    if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n      firstNewSegment.discontinuity = true;\n      playlist.discontinuityStarts.unshift(0);\n      playlist.discontinuitySequence--;\n    }\n\n    updateMediaSequenceForPlaylist({\n      playlist,\n      mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n    });\n  });\n};\n/**\n * Given an old parsed manifest object and a new parsed manifest object, updates the\n * sequence and timing values within the new manifest to ensure that it lines up with the\n * old.\n *\n * @param {Array} oldManifest - the old main manifest object\n * @param {Array} newManifest - the new main manifest object\n *\n * @return {Object} the updated new manifest object\n */\n\nconst positionManifestOnTimeline = ({\n  oldManifest,\n  newManifest\n}) => {\n  // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n  //\n  // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n  //\n  // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n  //\n  // Because of this change, and the difficulty of supporting periods with changing start\n  // times, periods with changing start times are not supported. This makes the logic much\n  // simpler, since periods with the same start time can be considerred the same period\n  // across refreshes.\n  //\n  // To give an example as to the difficulty of handling periods where the start time may\n  // change, if a single period manifest is refreshed with another manifest with a single\n  // period, and both the start and end times are increased, then the only way to determine\n  // if it's a new period or an old one that has changed is to look through the segments of\n  // each playlist and determine the presentation time bounds to find a match. In addition,\n  // if the period start changed to exceed the old period end, then there would be no\n  // match, and it would not be possible to determine whether the refreshed period is a new\n  // one or the old one.\n  const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n  const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n  // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n  // of properties are saved for each seen Period. Even long running live streams won't\n  // generate too many Periods, unless the stream is watched for decades. In the future,\n  // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n  // but it may not become an issue, and the additional info can be useful for debugging.\n\n  newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n  updateSequenceNumbers({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts: newManifest.timelineStarts\n  });\n  return newManifest;\n};\n\nconst generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n\nconst mergeDiscontiguousPlaylists = playlists => {\n  // Break out playlists into groups based on their baseUrl\n  const playlistsByBaseUrl = playlists.reduce(function (acc, cur) {\n    if (!acc[cur.attributes.baseUrl]) {\n      acc[cur.attributes.baseUrl] = [];\n    }\n\n    acc[cur.attributes.baseUrl].push(cur);\n    return acc;\n  }, {});\n  let allPlaylists = [];\n  Object.values(playlistsByBaseUrl).forEach(playlistGroup => {\n    const mergedPlaylists = values(playlistGroup.reduce((acc, playlist) => {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      const name = playlist.attributes.id + (playlist.attributes.lang || '');\n\n      if (!acc[name]) {\n        // First Period\n        acc[name] = playlist;\n        acc[name].attributes.timelineStarts = [];\n      } else {\n        // Subsequent Periods\n        if (playlist.segments) {\n          // first segment of subsequent periods signal a discontinuity\n          if (playlist.segments[0]) {\n            playlist.segments[0].discontinuity = true;\n          }\n\n          acc[name].segments.push(...playlist.segments);\n        } // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      }\n\n      acc[name].attributes.timelineStarts.push({\n        // Although they represent the same number, it's important to have both to make it\n        // compatible with HLS potentially having a similar attribute.\n        start: playlist.attributes.periodStart,\n        timeline: playlist.attributes.periodStart\n      });\n      return acc;\n    }, {}));\n    allPlaylists = allPlaylists.concat(mergedPlaylists);\n  });\n  return allPlaylists.map(playlist => {\n    playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n    return playlist;\n  });\n};\n\nconst addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n  const sidxKey = generateSidxKey(playlist.sidx);\n  const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n  if (sidxMatch) {\n    addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n  }\n\n  return playlist;\n};\nconst addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (const i in playlists) {\n    playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n  }\n\n  return playlists;\n};\nconst formatAudioPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  mediaSequence,\n  discontinuitySequence,\n  discontinuityStarts\n}, isAudioOnly) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuitySequence,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  if (isAudioOnly) {\n    playlist.attributes.AUDIO = 'audio';\n    playlist.attributes.SUBTITLES = 'subs';\n  }\n\n  return playlist;\n};\nconst formatVttPlaylist = ({\n  attributes,\n  segments,\n  mediaSequence,\n  discontinuityStarts,\n  discontinuitySequence\n}) => {\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  const m3u8Attributes = {\n    NAME: attributes.id,\n    BANDWIDTH: attributes.bandwidth,\n    ['PROGRAM-ID']: 1\n  };\n\n  if (attributes.codecs) {\n    m3u8Attributes.CODECS = attributes.codecs;\n  }\n\n  const vttPlaylist = {\n    attributes: m3u8Attributes,\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    timelineStarts: attributes.timelineStarts,\n    discontinuityStarts,\n    discontinuitySequence,\n    mediaSequence,\n    segments\n  };\n\n  if (attributes.serviceLocation) {\n    vttPlaylist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  return vttPlaylist;\n};\nconst organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n  let mainPlaylist;\n  const formattedPlaylists = playlists.reduce((a, playlist) => {\n    const role = playlist.attributes.role && playlist.attributes.role.value || '';\n    const language = playlist.attributes.lang || '';\n    let label = playlist.attributes.label || 'main';\n\n    if (language && !playlist.attributes.label) {\n      const roleLabel = role ? ` (${role})` : '';\n      label = `${playlist.attributes.lang}${roleLabel}`;\n    }\n\n    if (!a[label]) {\n      a[label] = {\n        language,\n        autoselect: true,\n        default: role === 'main',\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n    a[label].playlists.push(formatted);\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    const firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nconst organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n  return playlists.reduce((a, playlist) => {\n    const label = playlist.attributes.label || playlist.attributes.lang || 'text';\n\n    if (!a[label]) {\n      a[label] = {\n        language: label,\n        default: false,\n        autoselect: false,\n        playlists: [],\n        uri: ''\n      };\n    }\n\n    a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n    return a;\n  }, {});\n};\n\nconst organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n  if (!svc) {\n    return svcObj;\n  }\n\n  svc.forEach(service => {\n    const {\n      channel,\n      language\n    } = service;\n    svcObj[language] = {\n      autoselect: false,\n      default: false,\n      instreamId: channel,\n      language\n    };\n\n    if (service.hasOwnProperty('aspectRatio')) {\n      svcObj[language].aspectRatio = service.aspectRatio;\n    }\n\n    if (service.hasOwnProperty('easyReader')) {\n      svcObj[language].easyReader = service.easyReader;\n    }\n\n    if (service.hasOwnProperty('3D')) {\n      svcObj[language]['3D'] = service['3D'];\n    }\n  });\n  return svcObj;\n}, {});\n\nconst formatVideoPlaylist = ({\n  attributes,\n  segments,\n  sidx,\n  discontinuityStarts\n}) => {\n  const playlist = {\n    attributes: {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    },\n    uri: '',\n    endList: attributes.type === 'static',\n    timeline: attributes.periodStart,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    discontinuityStarts,\n    timelineStarts: attributes.timelineStarts,\n    segments\n  };\n\n  if (attributes.frameRate) {\n    playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n  }\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (attributes.serviceLocation) {\n    playlist.attributes.serviceLocation = attributes.serviceLocation;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\n\nconst videoOnly = ({\n  attributes\n}) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n\nconst audioOnly = ({\n  attributes\n}) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n\nconst vttOnly = ({\n  attributes\n}) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n/**\n * Contains start and timeline properties denoting a timeline start. For DASH, these will\n * be the same number.\n *\n * @typedef {Object} TimelineStart\n * @property {number} start - the start time of the timeline\n * @property {number} timeline - the timeline number\n */\n\n/**\n * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n *\n * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n * DASH specific attribute used in constructing segment URI's from templates. However, from\n * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n * value, which should start at the original media sequence value (or 0) and increment by 1\n * for each segment thereafter. Since DASH's `startNumber` values are independent per\n * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n * from a 0 mediaSequence value and increment from there.\n *\n * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n * debugging and making sense of the manifest.\n *\n * For live playlists, to account for values increasing in manifests when periods are\n * removed on refreshes, merging logic should be used to update the numbers to their\n * appropriate values (to ensure they're sequential and increasing).\n *\n * @param {Object[]} playlists - the playlists to update\n * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n */\n\n\nconst addMediaSequenceValues = (playlists, timelineStarts) => {\n  // increment all segments sequentially\n  playlists.forEach(playlist => {\n    playlist.mediaSequence = 0;\n    playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n      timeline\n    }) {\n      return timeline === playlist.timeline;\n    });\n\n    if (!playlist.segments) {\n      return;\n    }\n\n    playlist.segments.forEach((segment, index) => {\n      segment.number = index;\n    });\n  });\n};\n/**\n * Given a media group object, flattens all playlists within the media group into a single\n * array.\n *\n * @param {Object} mediaGroupObject - the media group object\n *\n * @return {Object[]}\n *         The media group playlists\n */\n\nconst flattenMediaGroupPlaylists = mediaGroupObject => {\n  if (!mediaGroupObject) {\n    return [];\n  }\n\n  return Object.keys(mediaGroupObject).reduce((acc, label) => {\n    const labelContents = mediaGroupObject[label];\n    return acc.concat(labelContents.playlists);\n  }, []);\n};\nconst toM3u8 = ({\n  dashPlaylists,\n  locations,\n  contentSteering,\n  sidxMapping = {},\n  previousManifest,\n  eventStream\n}) => {\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all main manifest attributes\n\n\n  const {\n    sourceDuration: duration,\n    type,\n    suggestedPresentationDelay,\n    minimumUpdatePeriod\n  } = dashPlaylists[0].attributes;\n  const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n  const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n  const manifest = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: {\n      AUDIO: {},\n      VIDEO: {},\n      ['CLOSED-CAPTIONS']: {},\n      SUBTITLES: {}\n    },\n    uri: '',\n    duration,\n    playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n  };\n\n  if (minimumUpdatePeriod >= 0) {\n    manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n  }\n\n  if (locations) {\n    manifest.locations = locations;\n  }\n\n  if (contentSteering) {\n    manifest.contentSteering = contentSteering;\n  }\n\n  if (type === 'dynamic') {\n    manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n  }\n\n  if (eventStream && eventStream.length > 0) {\n    manifest.eventStream = eventStream;\n  }\n\n  const isAudioOnly = manifest.playlists.length === 0;\n  const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n  const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n  const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n  const playlistTimelineStarts = formattedPlaylists.map(({\n    timelineStarts\n  }) => timelineStarts);\n  manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n  addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n\n  if (organizedAudioGroup) {\n    manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n  }\n\n  if (organizedVttGroup) {\n    manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n  }\n\n  if (captions.length) {\n    manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n  }\n\n  if (previousManifest) {\n    return positionManifestOnTimeline({\n      oldManifest: previousManifest,\n      newManifest: manifest\n    });\n  }\n\n  return manifest;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nconst getLiveRValue = (attributes, time, duration) => {\n  const {\n    NOW,\n    clientOffset,\n    availabilityStartTime,\n    timescale = 1,\n    periodStart = 0,\n    minimumUpdatePeriod = 0\n  } = attributes;\n  const now = (NOW + clientOffset) / 1000;\n  const periodStartWC = availabilityStartTime + periodStart;\n  const periodEndWC = now + minimumUpdatePeriod;\n  const periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nconst parseByTimeline = (attributes, segmentTimeline) => {\n  const {\n    type,\n    minimumUpdatePeriod = 0,\n    media = '',\n    sourceDuration,\n    timescale = 1,\n    startNumber = 1,\n    periodStart: timeline\n  } = attributes;\n  const segments = [];\n  let time = -1;\n\n  for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    const S = segmentTimeline[sIndex];\n    const duration = S.d;\n    const repeat = S.r || 0;\n    const segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    let count;\n\n    if (repeat < 0) {\n      const nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    const end = startNumber + segments.length + count;\n    let number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number,\n        duration: duration / timescale,\n        time,\n        timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nconst identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nconst identifierReplacement = values => (match, identifier, format, width) => {\n  if (match === '$$') {\n    // escape sequence\n    return '$';\n  }\n\n  if (typeof values[identifier] === 'undefined') {\n    return match;\n  }\n\n  const value = '' + values[identifier];\n\n  if (identifier === 'RepresentationID') {\n    // Format tag shall not be present with RepresentationID\n    return value;\n  }\n\n  if (!format) {\n    width = 1;\n  } else {\n    width = parseInt(width, 10);\n  }\n\n  if (value.length >= width) {\n    return value;\n  }\n\n  return `${new Array(width - value.length + 1).join('0')}${value}`;\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nconst constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nconst parseTemplateInfo = (attributes, segmentTimeline) => {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodStart\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nconst segmentsFromTemplate = (attributes, segmentTimeline) => {\n  const templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  const {\n    initialization = {\n      sourceURL: '',\n      range: ''\n    }\n  } = attributes;\n  const mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  const segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(segment => {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n    // - if timescale isn't present on any level, default to 1.\n\n    const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n    const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n    const presentationTime = // Even if the @t attribute is not specified for the segment, segment.time is\n    // calculated in mpd-parser prior to this, so it's assumed to be available.\n    attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n    const map = {\n      uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number,\n      presentationTime\n    };\n    return map;\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nconst SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n  const {\n    baseUrl,\n    initialization = {}\n  } = attributes;\n  const initSegment = urlTypeToSegment({\n    baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  const segment = urlTypeToSegment({\n    baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nconst segmentsFromList = (attributes, segmentTimeline) => {\n  const {\n    duration,\n    segmentUrls = [],\n    periodStart\n  } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n  let segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  const segments = segmentTimeInfo.map((segmentTime, index) => {\n    if (segmentUrlMap[index]) {\n      const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(segment => segment);\n  return segments;\n};\n\nconst generateSegments = ({\n  attributes,\n  segmentInfo\n}) => {\n  let segmentAttributes;\n  let segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  const segmentsInfo = {\n    attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    const {\n      duration,\n      timescale = 1\n    } = segmentAttributes;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce((max, segment) => {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nconst toPlaylists = representations => representations.map(generateSegments);\n\nconst findChildren = (element, name) => from(element.childNodes).filter(({\n  tagName\n}) => tagName === name);\nconst getContent = element => element.textContent.trim();\n\n/**\n * Converts the provided string that may contain a division operation to a number.\n *\n * @param {string} value - the provided string value\n *\n * @return {number} the parsed string value\n */\nconst parseDivisionValue = value => {\n  return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n};\n\nconst parseDuration = str => {\n  const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  const SECONDS_IN_DAY = 24 * 60 * 60;\n  const SECONDS_IN_HOUR = 60 * 60;\n  const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  const match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  const [year, month, day, hour, minute, second] = match.slice(1);\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nconst parseDate = str => {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nconst parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the suggested presentation delay. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  suggestedPresentationDelay(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   *\n   * @return {string}\n   *         The type as a string\n   */\n  type(value) {\n    return value;\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the frame rate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed frame rate\n   */\n  frameRate(value) {\n    return parseDivisionValue(value);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed timescale\n   */\n  timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTimeOffset.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTimeOffset\n   */\n  presentationTimeOffset(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration(value) {\n    const parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the presentationTime.\n   *\n   * @param {string} value\n   *        value of the attribute as a string\n   *\n   * @return {number}\n   *         The parsed presentationTime\n   */\n  presentationTime(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT(value) {\n    return value;\n  }\n\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nconst parseAttributes = el => {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce((a, e) => {\n    const parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nconst keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime',\n  // ISO_IEC 23009-1_2022 5.8.5.2.2 The mp4 Protection Scheme\n  'urn:mpeg:dash:mp4protection:2011': 'mp4protection'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {Object[]} references\n *        List of objects containing the reference URL as well as its attributes\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {Object[]}\n *         List of objects with resolved urls and attributes\n */\n\nconst buildBaseUrls = (references, baseUrlElements) => {\n  if (!baseUrlElements.length) {\n    return references;\n  }\n\n  return flatten(references.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      const initialBaseUrl = getContent(baseUrlElement);\n      const resolvedBaseUrl = resolveUrl(reference.baseUrl, initialBaseUrl);\n      const finalBaseUrl = merge(parseAttributes(baseUrlElement), {\n        baseUrl: resolvedBaseUrl\n      }); // If the URL is resolved, we want to get the serviceLocation from the reference\n      // assuming there is no serviceLocation on the initialBaseUrl\n\n      if (resolvedBaseUrl !== initialBaseUrl && !finalBaseUrl.serviceLocation && reference.serviceLocation) {\n        finalBaseUrl.serviceLocation = reference.serviceLocation;\n      }\n\n      return finalBaseUrl;\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} segmentTimeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nconst getSegmentInformation = adaptationSet => {\n  const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge({\n    tag: 'SegmentURL'\n  }, parseAttributes(s)));\n  const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  const segmentTimelineParentNode = segmentList || segmentTemplate;\n  const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  const template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  const segmentInfo = {\n    template,\n    segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(key => {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {Object[]} adaptationSetBaseUrls\n *        List of objects containing resolved base URLs and attributes\n *        inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nconst inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n  const repBaseUrlElements = findChildren(representation, 'BaseURL');\n  const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n  const attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n  const representationSegmentInfo = getSegmentInformation(representation);\n  return repBaseUrls.map(baseUrl => {\n    return {\n      segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n      attributes: merge(attributes, baseUrl)\n    };\n  });\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nconst generateKeySystemInformation = contentProtectionNodes => {\n  return contentProtectionNodes.reduce((acc, node) => {\n    const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n    // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n    // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n    // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n    if (attributes.schemeIdUri) {\n      attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n    }\n\n    const keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes\n      };\n      const psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        const pssh = getContent(psshNode);\n        acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n      }\n    }\n\n    return acc;\n  }, {});\n}; // defined in ANSI_SCTE 214-1 2016\n\n\nconst parseCaptionServiceMetadata = service => {\n  // 608 captions\n  if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      let channel;\n      let language; // default language to value\n\n      language = value;\n\n      if (/^CC\\d=/.test(value)) {\n        [channel, language] = value.split('=');\n      } else if (/^CC\\d$/.test(value)) {\n        channel = value;\n      }\n\n      return {\n        channel,\n        language\n      };\n    });\n  } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n    const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n    return values.map(value => {\n      const flags = {\n        // service or channel number 1-63\n        'channel': undefined,\n        // language is a 3ALPHA per ISO 639.2/B\n        // field is required\n        'language': undefined,\n        // BIT 1/0 or ?\n        // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n        'aspectRatio': 1,\n        // BIT 1/0\n        // easy reader flag indicated the text is tailed to the needs of beginning readers\n        // default 0, or off\n        'easyReader': 0,\n        // BIT 1/0\n        // If 3d metadata is present (CEA-708.1) then 1\n        // default 0\n        '3D': 0\n      };\n\n      if (/=/.test(value)) {\n        const [channel, opts = ''] = value.split('=');\n        flags.channel = channel;\n        flags.language = value;\n        opts.split(',').forEach(opt => {\n          const [name, val] = opt.split(':');\n\n          if (name === 'lang') {\n            flags.language = val; // er for easyReadery\n          } else if (name === 'er') {\n            flags.easyReader = Number(val); // war for wide aspect ratio\n          } else if (name === 'war') {\n            flags.aspectRatio = Number(val);\n          } else if (name === '3D') {\n            flags['3D'] = Number(val);\n          }\n        });\n      } else {\n        flags.language = value;\n      }\n\n      if (flags.channel) {\n        flags.channel = 'SERVICE' + flags.channel;\n      }\n\n      return flags;\n    });\n  }\n};\n/**\n * A map callback that will parse all event stream data for a collection of periods\n * DASH ISO_IEC_23009 5.10.2.2\n * https://dashif-documents.azurewebsites.net/Events/master/event.html#mpd-event-timing\n *\n * @param {PeriodInformation} period object containing necessary period information\n * @return a collection of parsed eventstream event objects\n */\n\nconst toEventStream = period => {\n  // get and flatten all EventStreams tags and parse attributes and children\n  return flatten(findChildren(period.node, 'EventStream').map(eventStream => {\n    const eventStreamAttributes = parseAttributes(eventStream);\n    const schemeIdUri = eventStreamAttributes.schemeIdUri; // find all Events per EventStream tag and map to return objects\n\n    return findChildren(eventStream, 'Event').map(event => {\n      const eventAttributes = parseAttributes(event);\n      const presentationTime = eventAttributes.presentationTime || 0;\n      const timescale = eventStreamAttributes.timescale || 1;\n      const duration = eventAttributes.duration || 0;\n      const start = presentationTime / timescale + period.attributes.start;\n      return {\n        schemeIdUri,\n        value: eventStreamAttributes.value,\n        id: eventAttributes.id,\n        start,\n        end: start + duration / timescale,\n        messageData: getContent(event) || eventAttributes.messageData,\n        contentEncoding: eventStreamAttributes.contentEncoding,\n        presentationTimeOffset: eventStreamAttributes.presentationTimeOffset || 0\n      };\n    });\n  }));\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {Object[]} periodBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\nconst toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n  const adaptationSetAttributes = parseAttributes(adaptationSet);\n  const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n  const role = findChildren(adaptationSet, 'Role')[0];\n  const roleAttributes = {\n    role: parseAttributes(role)\n  };\n  let attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n  const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n  const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n\n  if (captionServices) {\n    attrs = merge(attrs, {\n      captionServices\n    });\n  }\n\n  const label = findChildren(adaptationSet, 'Label')[0];\n\n  if (label && label.childNodes.length) {\n    const labelVal = label.childNodes[0].nodeValue.trim();\n    attrs = merge(attrs, {\n      label: labelVal\n    });\n  }\n\n  const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n  if (Object.keys(contentProtection).length) {\n    attrs = merge(attrs, {\n      contentProtection\n    });\n  }\n\n  const segmentInfo = getSegmentInformation(adaptationSet);\n  const representations = findChildren(adaptationSet, 'Representation');\n  const adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n  return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n};\n/**\n * Contains all period information for mapping nodes onto adaptation sets.\n *\n * @typedef {Object} PeriodInformation\n * @property {Node} period.node\n *           Period node from the mpd\n * @property {Object} period.attributes\n *           Parsed period attributes from node plus any added\n */\n\n/**\n * Maps a PeriodInformation object to a list of Representation information objects for all\n * AdaptationSet nodes contained within the Period.\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {PeriodInformation} period\n *        Period object containing necessary period information\n * @param {number} periodStart\n *        Start time of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n  * @param {Object[]} mpdBaseUrls\n *        Contains list of objects with resolved base urls and attributes\n *        inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nconst toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n  const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n  const periodAttributes = merge(mpdAttributes, {\n    periodStart: period.attributes.start\n  });\n\n  if (typeof period.attributes.duration === 'number') {\n    periodAttributes.periodDuration = period.attributes.duration;\n  }\n\n  const adaptationSets = findChildren(period.node, 'AdaptationSet');\n  const periodSegmentInfo = getSegmentInformation(period.node);\n  return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n};\n/**\n * Tranforms an array of content steering nodes into an object\n * containing CDN content steering information from the MPD manifest.\n *\n * For more information on the DASH spec for Content Steering parsing, see:\n * https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {Node[]} contentSteeringNodes\n *        Content steering nodes\n * @param {Function} eventHandler\n *        The event handler passed into the parser options to handle warnings\n * @return {Object}\n *        Object containing content steering data\n */\n\nconst generateContentSteeringInformation = (contentSteeringNodes, eventHandler) => {\n  // If there are more than one ContentSteering tags, throw an error\n  if (contentSteeringNodes.length > 1) {\n    eventHandler({\n      type: 'warn',\n      message: 'The MPD manifest should contain no more than one ContentSteering tag'\n    });\n  } // Return a null value if there are no ContentSteering tags\n\n\n  if (!contentSteeringNodes.length) {\n    return null;\n  }\n\n  const infoFromContentSteeringTag = merge({\n    serverURL: getContent(contentSteeringNodes[0])\n  }, parseAttributes(contentSteeringNodes[0])); // Converts `queryBeforeStart` to a boolean, as well as setting the default value\n  // to `false` if it doesn't exist\n\n  infoFromContentSteeringTag.queryBeforeStart = infoFromContentSteeringTag.queryBeforeStart === 'true';\n  return infoFromContentSteeringTag;\n};\n/**\n * Gets Period@start property for a given period.\n *\n * @param {Object} options\n *        Options object\n * @param {Object} options.attributes\n *        Period attributes\n * @param {Object} [options.priorPeriodAttributes]\n *        Prior period attributes (if prior period is available)\n * @param {string} options.mpdType\n *        The MPD@type these periods came from\n * @return {number|null}\n *         The period start, or null if it's an early available period or error\n */\n\nconst getPeriodStart = ({\n  attributes,\n  priorPeriodAttributes,\n  mpdType\n}) => {\n  // Summary of period start time calculation from DASH spec section 5.3.2.1\n  //\n  // A period's start is the first period's start + time elapsed after playing all\n  // prior periods to this one. Periods continue one after the other in time (without\n  // gaps) until the end of the presentation.\n  //\n  // The value of Period@start should be:\n  // 1. if Period@start is present: value of Period@start\n  // 2. if previous period exists and it has @duration: previous Period@start +\n  //    previous Period@duration\n  // 3. if this is first period and MPD@type is 'static': 0\n  // 4. in all other cases, consider the period an \"early available period\" (note: not\n  //    currently supported)\n  // (1)\n  if (typeof attributes.start === 'number') {\n    return attributes.start;\n  } // (2)\n\n\n  if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n    return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n  } // (3)\n\n\n  if (!priorPeriodAttributes && mpdType === 'static') {\n    return 0;\n  } // (4)\n  // There is currently no logic for calculating the Period@start value if there is\n  // no Period@start or prior Period@start and Period@duration available. This is not made\n  // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n  // nothing about any other resolution strategies, it's implied. Thus, this case should\n  // be considered an early available period, or error, and null should suffice for both\n  // of those cases.\n\n\n  return null;\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nconst inheritAttributes = (mpd, options = {}) => {\n  const {\n    manifestUri = '',\n    NOW = Date.now(),\n    clientOffset = 0,\n    // TODO: For now, we are expecting an eventHandler callback function\n    // to be passed into the mpd parser as an option.\n    // In the future, we should enable stream parsing by using the Stream class from vhs-utils.\n    // This will support new features including a standardized event handler.\n    // See the m3u8 parser for examples of how stream parsing is currently used for HLS parsing.\n    // https://github.com/videojs/vhs-utils/blob/88d6e10c631e57a5af02c5a62bc7376cd456b4f5/src/stream.js#L9\n    eventHandler = function () {}\n  } = options;\n  const periodNodes = findChildren(mpd, 'Period');\n\n  if (!periodNodes.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  const locations = findChildren(mpd, 'Location');\n  const mpdAttributes = parseAttributes(mpd);\n  const mpdBaseUrls = buildBaseUrls([{\n    baseUrl: manifestUri\n  }], findChildren(mpd, 'BaseURL'));\n  const contentSteeringNodes = findChildren(mpd, 'ContentSteering'); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n  mpdAttributes.type = mpdAttributes.type || 'static';\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n\n  if (locations.length) {\n    mpdAttributes.locations = locations.map(getContent);\n  }\n\n  const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n  // adding properties that require looking at prior periods is to parse attributes and add\n  // missing ones before toAdaptationSets is called. If more such properties are added, it\n  // may be better to refactor toAdaptationSets.\n\n  periodNodes.forEach((node, index) => {\n    const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n    // for this period.\n\n    const priorPeriod = periods[index - 1];\n    attributes.start = getPeriodStart({\n      attributes,\n      priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n      mpdType: mpdAttributes.type\n    });\n    periods.push({\n      node,\n      attributes\n    });\n  });\n  return {\n    locations: mpdAttributes.locations,\n    contentSteeringInfo: generateContentSteeringInformation(contentSteeringNodes, eventHandler),\n    // TODO: There are occurences where this `representationInfo` array contains undesired\n    // duplicates. This generally occurs when there are multiple BaseURL nodes that are\n    // direct children of the MPD node. When we attempt to resolve URLs from a combination of the\n    // parent BaseURL and a child BaseURL, and the value does not resolve,\n    // we end up returning the child BaseURL multiple times.\n    // We need to determine a way to remove these duplicates in a safe way.\n    // See: https://github.com/videojs/mpd-parser/pull/17#discussion_r162750527\n    representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls))),\n    eventStream: flatten(periods.map(toEventStream))\n  };\n};\n\nconst stringToMpdXml = manifestString => {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  const parser = new DOMParser();\n  let xml;\n  let mpd;\n\n  try {\n    xml = parser.parseFromString(manifestString, 'application/xml');\n    mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n  } catch (e) {// ie 11 throws on invalid xml\n  }\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nconst parseUTCTimingScheme = mpd => {\n  const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  const attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nconst VERSION = version;\n/*\n * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n *\n * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n * parsed DASH manifest will have its media sequence and discontinuity sequence values\n * updated to reflect its position relative to the prior manifest.\n *\n * @param {string} manifestString - the DASH manifest as a string\n * @param {options} [options] - any options\n *\n * @return {Object} the manifest object\n */\n\nconst parse = (manifestString, options = {}) => {\n  const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n  const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n  return toM3u8({\n    dashPlaylists: playlists,\n    locations: parsedManifestInfo.locations,\n    contentSteering: parsedManifestInfo.contentSteeringInfo,\n    sidxMapping: options.sidxMapping,\n    previousManifest: options.previousManifest,\n    eventStream: parsedManifestInfo.eventStream\n  });\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\n\nconst parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\nexport { VERSION, addSidxSegmentsToPlaylist$1 as addSidxSegmentsToPlaylist, generateSidxKey, inheritAttributes, parse, parseUTCTiming, stringToMpdXml, toM3u8, toPlaylists };\n","/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {string[]} groups\n *        The media groups to call the callback for\n * @param {Function} callback\n *        Callback to call for each media group\n */\nexport var forEachMediaGroup = function forEachMediaGroup(master, groups, callback) {\n  groups.forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nvar ID3 = toUint8([0x49, 0x44, 0x33]);\nexport var getId3Size = function getId3Size(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n  var flags = bytes[offset + 5];\n  var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n  var footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n\n  return returnSize + 10;\n};\nexport var getId3Offset = function getId3Offset(bytes, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  bytes = toUint8(bytes);\n\n  if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n    offset: offset\n  })) {\n    return offset;\n  }\n\n  offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n  // have multiple ID3 tag sections even though\n  // they should not.\n\n  return getId3Offset(bytes, offset);\n};","export var OPUS_HEAD = new Uint8Array([// O, p, u, s\n0x4f, 0x70, 0x75, 0x73, // H, e, a, d\n0x48, 0x65, 0x61, 0x64]); // https://wiki.xiph.org/OggOpus\n// https://vfrmaniac.fushizen.eu/contents/opus_in_isobmff.html\n// https://opus-codec.org/docs/opusfile_api-0.7/structOpusHead.html\n\nexport var parseOpusHead = function parseOpusHead(bytes) {\n  var view = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  var version = view.getUint8(0); // version 0, from mp4, does not use littleEndian.\n\n  var littleEndian = version !== 0;\n  var config = {\n    version: version,\n    channels: view.getUint8(1),\n    preSkip: view.getUint16(2, littleEndian),\n    sampleRate: view.getUint32(4, littleEndian),\n    outputGain: view.getUint16(8, littleEndian),\n    channelMappingFamily: view.getUint8(10)\n  };\n\n  if (config.channelMappingFamily > 0 && bytes.length > 10) {\n    config.streamCount = view.getUint8(11);\n    config.twoChannelStreamCount = view.getUint8(12);\n    config.channelMapping = [];\n\n    for (var c = 0; c < config.channels; c++) {\n      config.channelMapping.push(view.getUint8(13 + c));\n    }\n  }\n\n  return config;\n};\nexport var setOpusHead = function setOpusHead(config) {\n  var size = config.channelMappingFamily <= 0 ? 11 : 12 + config.channels;\n  var view = new DataView(new ArrayBuffer(size));\n  var littleEndian = config.version !== 0;\n  view.setUint8(0, config.version);\n  view.setUint8(1, config.channels);\n  view.setUint16(2, config.preSkip, littleEndian);\n  view.setUint32(4, config.sampleRate, littleEndian);\n  view.setUint16(8, config.outputGain, littleEndian);\n  view.setUint8(10, config.channelMappingFamily);\n\n  if (config.channelMappingFamily > 0) {\n    view.setUint8(11, config.streamCount);\n    config.channelMapping.foreach(function (cm, i) {\n      view.setUint8(12 + i, cm);\n    });\n  }\n\n  return new Uint8Array(view.buffer);\n};","import { toUint8, bytesToNumber, bytesMatch, bytesToString, numberToBytes, padStart } from './byte-helpers';\nimport { getAvcCodec, getHvcCodec, getAv1Codec } from './codec-helpers.js'; // relevant specs for this parser:\n// https://matroska-org.github.io/libebml/specs.html\n// https://www.matroska.org/technical/elements.html\n// https://www.webmproject.org/docs/container/\n\nexport var EBML_TAGS = {\n  EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n  DocType: toUint8([0x42, 0x82]),\n  Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n  SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n  Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n  Track: toUint8([0xAE]),\n  TrackNumber: toUint8([0xd7]),\n  DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n  TrackEntry: toUint8([0xAE]),\n  TrackType: toUint8([0x83]),\n  FlagDefault: toUint8([0x88]),\n  CodecID: toUint8([0x86]),\n  CodecPrivate: toUint8([0x63, 0xA2]),\n  VideoTrack: toUint8([0xe0]),\n  AudioTrack: toUint8([0xe1]),\n  // Not used yet, but will be used for live webm/mkv\n  // see https://www.matroska.org/technical/basics.html#block-structure\n  // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n  Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n  Timestamp: toUint8([0xE7]),\n  TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n  BlockGroup: toUint8([0xA0]),\n  BlockDuration: toUint8([0x9B]),\n  Block: toUint8([0xA1]),\n  SimpleBlock: toUint8([0xA3])\n};\n/**\n * This is a simple table to determine the length\n * of things in ebml. The length is one based (starts at 1,\n * rather than zero) and for every zero bit before a one bit\n * we add one to length. We also need this table because in some\n * case we have to xor all the length bits from another value.\n */\n\nvar LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n\nvar getLength = function getLength(byte) {\n  var len = 1;\n\n  for (var i = 0; i < LENGTH_TABLE.length; i++) {\n    if (byte & LENGTH_TABLE[i]) {\n      break;\n    }\n\n    len++;\n  }\n\n  return len;\n}; // length in ebml is stored in the first 4 to 8 bits\n// of the first byte. 4 for the id length and 8 for the\n// data size length. Length is measured by converting the number to binary\n// then 1 + the number of zeros before a 1 is encountered starting\n// from the left.\n\n\nvar getvint = function getvint(bytes, offset, removeLength, signed) {\n  if (removeLength === void 0) {\n    removeLength = true;\n  }\n\n  if (signed === void 0) {\n    signed = false;\n  }\n\n  var length = getLength(bytes[offset]);\n  var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n  // as they will be modified below to remove the dataSizeLen bits and we do not\n  // want to modify the original data. normally we could just call slice on\n  // uint8array but ie 11 does not support that...\n\n  if (removeLength) {\n    valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n    valueBytes[0] ^= LENGTH_TABLE[length - 1];\n  }\n\n  return {\n    length: length,\n    value: bytesToNumber(valueBytes, {\n      signed: signed\n    }),\n    bytes: valueBytes\n  };\n};\n\nvar normalizePath = function normalizePath(path) {\n  if (typeof path === 'string') {\n    return path.match(/.{1,2}/g).map(function (p) {\n      return normalizePath(p);\n    });\n  }\n\n  if (typeof path === 'number') {\n    return numberToBytes(path);\n  }\n\n  return path;\n};\n\nvar normalizePaths = function normalizePaths(paths) {\n  if (!Array.isArray(paths)) {\n    return [normalizePath(paths)];\n  }\n\n  return paths.map(function (p) {\n    return normalizePath(p);\n  });\n};\n\nvar getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n  if (offset >= bytes.length) {\n    return bytes.length;\n  }\n\n  var innerid = getvint(bytes, offset, false);\n\n  if (bytesMatch(id.bytes, innerid.bytes)) {\n    return offset;\n  }\n\n  var dataHeader = getvint(bytes, offset + innerid.length);\n  return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n};\n/**\n * Notes on the EBLM format.\n *\n * EBLM uses \"vints\" tags. Every vint tag contains\n * two parts\n *\n * 1. The length from the first byte. You get this by\n *    converting the byte to binary and counting the zeros\n *    before a 1. Then you add 1 to that. Examples\n *    00011111 = length 4 because there are 3 zeros before a 1.\n *    00100000 = length 3 because there are 2 zeros before a 1.\n *    00000011 = length 7 because there are 6 zeros before a 1.\n *\n * 2. The bits used for length are removed from the first byte\n *    Then all the bytes are merged into a value. NOTE: this\n *    is not the case for id ebml tags as there id includes\n *    length bits.\n *\n */\n\n\nexport var findEbml = function findEbml(bytes, paths) {\n  paths = normalizePaths(paths);\n  bytes = toUint8(bytes);\n  var results = [];\n\n  if (!paths.length) {\n    return results;\n  }\n\n  var i = 0;\n\n  while (i < bytes.length) {\n    var id = getvint(bytes, i, false);\n    var dataHeader = getvint(bytes, i + id.length);\n    var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n    if (dataHeader.value === 0x7f) {\n      dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n\n      if (dataHeader.value !== bytes.length) {\n        dataHeader.value -= dataStart;\n      }\n    }\n\n    var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n    var data = bytes.subarray(dataStart, dataEnd);\n\n    if (bytesMatch(paths[0], id.bytes)) {\n      if (paths.length === 1) {\n        // this is the end of the paths and we've found the tag we were\n        // looking for\n        results.push(data);\n      } else {\n        // recursively search for the next tag inside of the data\n        // of this one\n        results = results.concat(findEbml(data, paths.slice(1)));\n      }\n    }\n\n    var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n    i += totalLength;\n  }\n\n  return results;\n}; // see https://www.matroska.org/technical/basics.html#block-structure\n\nexport var decodeBlock = function decodeBlock(block, type, timestampScale, clusterTimestamp) {\n  var duration;\n\n  if (type === 'group') {\n    duration = findEbml(block, [EBML_TAGS.BlockDuration])[0];\n\n    if (duration) {\n      duration = bytesToNumber(duration);\n      duration = 1 / timestampScale * duration * timestampScale / 1000;\n    }\n\n    block = findEbml(block, [EBML_TAGS.Block])[0];\n    type = 'block'; // treat data as a block after this point\n  }\n\n  var dv = new DataView(block.buffer, block.byteOffset, block.byteLength);\n  var trackNumber = getvint(block, 0);\n  var timestamp = dv.getInt16(trackNumber.length, false);\n  var flags = block[trackNumber.length + 2];\n  var data = block.subarray(trackNumber.length + 3); // pts/dts in seconds\n\n  var ptsdts = 1 / timestampScale * (clusterTimestamp + timestamp) * timestampScale / 1000; // return the frame\n\n  var parsed = {\n    duration: duration,\n    trackNumber: trackNumber.value,\n    keyframe: type === 'simple' && flags >> 7 === 1,\n    invisible: (flags & 0x08) >> 3 === 1,\n    lacing: (flags & 0x06) >> 1,\n    discardable: type === 'simple' && (flags & 0x01) === 1,\n    frames: [],\n    pts: ptsdts,\n    dts: ptsdts,\n    timestamp: timestamp\n  };\n\n  if (!parsed.lacing) {\n    parsed.frames.push(data);\n    return parsed;\n  }\n\n  var numberOfFrames = data[0] + 1;\n  var frameSizes = [];\n  var offset = 1; // Fixed\n\n  if (parsed.lacing === 2) {\n    var sizeOfFrame = (data.length - offset) / numberOfFrames;\n\n    for (var i = 0; i < numberOfFrames; i++) {\n      frameSizes.push(sizeOfFrame);\n    }\n  } // xiph\n\n\n  if (parsed.lacing === 1) {\n    for (var _i = 0; _i < numberOfFrames - 1; _i++) {\n      var size = 0;\n\n      do {\n        size += data[offset];\n        offset++;\n      } while (data[offset - 1] === 0xFF);\n\n      frameSizes.push(size);\n    }\n  } // ebml\n\n\n  if (parsed.lacing === 3) {\n    // first vint is unsinged\n    // after that vints are singed and\n    // based on a compounding size\n    var _size = 0;\n\n    for (var _i2 = 0; _i2 < numberOfFrames - 1; _i2++) {\n      var vint = _i2 === 0 ? getvint(data, offset) : getvint(data, offset, true, true);\n      _size += vint.value;\n      frameSizes.push(_size);\n      offset += vint.length;\n    }\n  }\n\n  frameSizes.forEach(function (size) {\n    parsed.frames.push(data.subarray(offset, offset + size));\n    offset += size;\n  });\n  return parsed;\n}; // VP9 Codec Feature Metadata (CodecPrivate)\n// https://www.webmproject.org/docs/container/\n\nvar parseVp9Private = function parseVp9Private(bytes) {\n  var i = 0;\n  var params = {};\n\n  while (i < bytes.length) {\n    var id = bytes[i] & 0x7f;\n    var len = bytes[i + 1];\n    var val = void 0;\n\n    if (len === 1) {\n      val = bytes[i + 2];\n    } else {\n      val = bytes.subarray(i + 2, i + 2 + len);\n    }\n\n    if (id === 1) {\n      params.profile = val;\n    } else if (id === 2) {\n      params.level = val;\n    } else if (id === 3) {\n      params.bitDepth = val;\n    } else if (id === 4) {\n      params.chromaSubsampling = val;\n    } else {\n      params[id] = val;\n    }\n\n    i += 2 + len;\n  }\n\n  return params;\n};\n\nexport var parseTracks = function parseTracks(bytes) {\n  bytes = toUint8(bytes);\n  var decodedTracks = [];\n  var tracks = findEbml(bytes, [EBML_TAGS.Segment, EBML_TAGS.Tracks, EBML_TAGS.Track]);\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Tracks, EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    tracks = findEbml(bytes, [EBML_TAGS.Track]);\n  }\n\n  if (!tracks.length) {\n    return decodedTracks;\n  }\n\n  tracks.forEach(function (track) {\n    var trackType = findEbml(track, EBML_TAGS.TrackType)[0];\n\n    if (!trackType || !trackType.length) {\n      return;\n    } // 1 is video, 2 is audio, 17 is subtitle\n    // other values are unimportant in this context\n\n\n    if (trackType[0] === 1) {\n      trackType = 'video';\n    } else if (trackType[0] === 2) {\n      trackType = 'audio';\n    } else if (trackType[0] === 17) {\n      trackType = 'subtitle';\n    } else {\n      return;\n    } // todo parse language\n\n\n    var decodedTrack = {\n      rawCodec: bytesToString(findEbml(track, [EBML_TAGS.CodecID])[0]),\n      type: trackType,\n      codecPrivate: findEbml(track, [EBML_TAGS.CodecPrivate])[0],\n      number: bytesToNumber(findEbml(track, [EBML_TAGS.TrackNumber])[0]),\n      defaultDuration: bytesToNumber(findEbml(track, [EBML_TAGS.DefaultDuration])[0]),\n      default: findEbml(track, [EBML_TAGS.FlagDefault])[0],\n      rawData: track\n    };\n    var codec = '';\n\n    if (/V_MPEG4\\/ISO\\/AVC/.test(decodedTrack.rawCodec)) {\n      codec = \"avc1.\" + getAvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEGH\\/ISO\\/HEVC/.test(decodedTrack.rawCodec)) {\n      codec = \"hev1.\" + getHvcCodec(decodedTrack.codecPrivate);\n    } else if (/V_MPEG4\\/ISO\\/ASP/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4v.20.' + decodedTrack.codecPrivate[4].toString();\n      } else {\n        codec = 'mp4v.20.9';\n      }\n    } else if (/^V_THEORA/.test(decodedTrack.rawCodec)) {\n      codec = 'theora';\n    } else if (/^V_VP8/.test(decodedTrack.rawCodec)) {\n      codec = 'vp8';\n    } else if (/^V_VP9/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        var _parseVp9Private = parseVp9Private(decodedTrack.codecPrivate),\n            profile = _parseVp9Private.profile,\n            level = _parseVp9Private.level,\n            bitDepth = _parseVp9Private.bitDepth,\n            chromaSubsampling = _parseVp9Private.chromaSubsampling;\n\n        codec = 'vp09.';\n        codec += padStart(profile, 2, '0') + \".\";\n        codec += padStart(level, 2, '0') + \".\";\n        codec += padStart(bitDepth, 2, '0') + \".\";\n        codec += \"\" + padStart(chromaSubsampling, 2, '0'); // Video -> Colour -> Ebml name\n\n        var matrixCoefficients = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB1]])[0] || [];\n        var videoFullRangeFlag = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xB9]])[0] || [];\n        var transferCharacteristics = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBA]])[0] || [];\n        var colourPrimaries = findEbml(track, [0xE0, [0x55, 0xB0], [0x55, 0xBB]])[0] || []; // if we find any optional codec parameter specify them all.\n\n        if (matrixCoefficients.length || videoFullRangeFlag.length || transferCharacteristics.length || colourPrimaries.length) {\n          codec += \".\" + padStart(colourPrimaries[0], 2, '0');\n          codec += \".\" + padStart(transferCharacteristics[0], 2, '0');\n          codec += \".\" + padStart(matrixCoefficients[0], 2, '0');\n          codec += \".\" + padStart(videoFullRangeFlag[0], 2, '0');\n        }\n      } else {\n        codec = 'vp9';\n      }\n    } else if (/^V_AV1/.test(decodedTrack.rawCodec)) {\n      codec = \"av01.\" + getAv1Codec(decodedTrack.codecPrivate);\n    } else if (/A_ALAC/.test(decodedTrack.rawCodec)) {\n      codec = 'alac';\n    } else if (/A_MPEG\\/L2/.test(decodedTrack.rawCodec)) {\n      codec = 'mp2';\n    } else if (/A_MPEG\\/L3/.test(decodedTrack.rawCodec)) {\n      codec = 'mp3';\n    } else if (/^A_AAC/.test(decodedTrack.rawCodec)) {\n      if (decodedTrack.codecPrivate) {\n        codec = 'mp4a.40.' + (decodedTrack.codecPrivate[0] >>> 3).toString();\n      } else {\n        codec = 'mp4a.40.2';\n      }\n    } else if (/^A_AC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ac-3';\n    } else if (/^A_PCM/.test(decodedTrack.rawCodec)) {\n      codec = 'pcm';\n    } else if (/^A_MS\\/ACM/.test(decodedTrack.rawCodec)) {\n      codec = 'speex';\n    } else if (/^A_EAC3/.test(decodedTrack.rawCodec)) {\n      codec = 'ec-3';\n    } else if (/^A_VORBIS/.test(decodedTrack.rawCodec)) {\n      codec = 'vorbis';\n    } else if (/^A_FLAC/.test(decodedTrack.rawCodec)) {\n      codec = 'flac';\n    } else if (/^A_OPUS/.test(decodedTrack.rawCodec)) {\n      codec = 'opus';\n    }\n\n    decodedTrack.codec = codec;\n    decodedTracks.push(decodedTrack);\n  });\n  return decodedTracks.sort(function (a, b) {\n    return a.number - b.number;\n  });\n};\nexport var parseData = function parseData(data, tracks) {\n  var allBlocks = [];\n  var segment = findEbml(data, [EBML_TAGS.Segment])[0];\n  var timestampScale = findEbml(segment, [EBML_TAGS.SegmentInfo, EBML_TAGS.TimestampScale])[0]; // in nanoseconds, defaults to 1ms\n\n  if (timestampScale && timestampScale.length) {\n    timestampScale = bytesToNumber(timestampScale);\n  } else {\n    timestampScale = 1000000;\n  }\n\n  var clusters = findEbml(segment, [EBML_TAGS.Cluster]);\n\n  if (!tracks) {\n    tracks = parseTracks(segment);\n  }\n\n  clusters.forEach(function (cluster, ci) {\n    var simpleBlocks = findEbml(cluster, [EBML_TAGS.SimpleBlock]).map(function (b) {\n      return {\n        type: 'simple',\n        data: b\n      };\n    });\n    var blockGroups = findEbml(cluster, [EBML_TAGS.BlockGroup]).map(function (b) {\n      return {\n        type: 'group',\n        data: b\n      };\n    });\n    var timestamp = findEbml(cluster, [EBML_TAGS.Timestamp])[0] || 0;\n\n    if (timestamp && timestamp.length) {\n      timestamp = bytesToNumber(timestamp);\n    } // get all blocks then sort them into the correct order\n\n\n    var blocks = simpleBlocks.concat(blockGroups).sort(function (a, b) {\n      return a.data.byteOffset - b.data.byteOffset;\n    });\n    blocks.forEach(function (block, bi) {\n      var decoded = decodeBlock(block.data, block.type, timestampScale, timestamp);\n      allBlocks.push(decoded);\n    });\n  });\n  return {\n    tracks: tracks,\n    blocks: allBlocks\n  };\n};","import { bytesMatch, toUint8 } from './byte-helpers.js';\nexport var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\nexport var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\nexport var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n/**\n * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n * Sequence Payload\"\n *\n * @param data {Uint8Array} the bytes of a RBSP from a NAL\n * unit\n * @return {Uint8Array} the RBSP without any Emulation\n * Prevention Bytes\n */\n\nexport var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n  var positions = [];\n  var i = 1; // Find all `Emulation Prevention Bytes`\n\n  while (i < bytes.length - 2) {\n    if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n      positions.push(i + 2);\n      i++;\n    }\n\n    i++;\n  } // If no Emulation Prevention Bytes were found just return the original\n  // array\n\n\n  if (positions.length === 0) {\n    return bytes;\n  } // Create a new array to hold the NAL unit data\n\n\n  var newLength = bytes.length - positions.length;\n  var newData = new Uint8Array(newLength);\n  var sourceIndex = 0;\n\n  for (i = 0; i < newLength; sourceIndex++, i++) {\n    if (sourceIndex === positions[0]) {\n      // Skip this byte\n      sourceIndex++; // Remove this position index\n\n      positions.shift();\n    }\n\n    newData[i] = bytes[sourceIndex];\n  }\n\n  return newData;\n};\nexport var findNal = function findNal(bytes, dataType, types, nalLimit) {\n  if (nalLimit === void 0) {\n    nalLimit = Infinity;\n  }\n\n  bytes = toUint8(bytes);\n  types = [].concat(types);\n  var i = 0;\n  var nalStart;\n  var nalsFound = 0; // keep searching until:\n  // we reach the end of bytes\n  // we reach the maximum number of nals they want to seach\n  // NOTE: that we disregard nalLimit when we have found the start\n  // of the nal we want so that we can find the end of the nal we want.\n\n  while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n    var nalOffset = void 0;\n\n    if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n      nalOffset = 4;\n    } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n      nalOffset = 3;\n    } // we are unsynced,\n    // find the next nal unit\n\n\n    if (!nalOffset) {\n      i++;\n      continue;\n    }\n\n    nalsFound++;\n\n    if (nalStart) {\n      return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n    }\n\n    var nalType = void 0;\n\n    if (dataType === 'h264') {\n      nalType = bytes[i + nalOffset] & 0x1f;\n    } else if (dataType === 'h265') {\n      nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n    }\n\n    if (types.indexOf(nalType) !== -1) {\n      nalStart = i + nalOffset;\n    } // nal header is 1 length for h264, and 2 for h265\n\n\n    i += nalOffset + (dataType === 'h264' ? 1 : 2);\n  }\n\n  return bytes.subarray(0, 0);\n};\nexport var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h264', type, nalLimit);\n};\nexport var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n  return findNal(bytes, 'h265', type, nalLimit);\n};","import { toUint8, bytesMatch } from './byte-helpers.js';\nimport { findBox } from './mp4-helpers.js';\nimport { findEbml, EBML_TAGS } from './ebml-helpers.js';\nimport { getId3Offset } from './id3-helpers.js';\nimport { findH264Nal, findH265Nal } from './nal-helpers.js';\nvar CONSTANTS = {\n  // \"webm\" string literal in hex\n  'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n  // \"matroska\" string literal in hex\n  'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n  // \"fLaC\" string literal in hex\n  'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n  // \"OggS\" string literal in hex\n  'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n  // ac-3 sync byte, also works for ec-3 as that is simply a codec\n  // of ac-3\n  'ac3': toUint8([0x0b, 0x77]),\n  // \"RIFF\" string literal in hex used for wav and avi\n  'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n  // \"AVI\" string literal in hex\n  'avi': toUint8([0x41, 0x56, 0x49]),\n  // \"WAVE\" string literal in hex\n  'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n  // \"ftyp3g\" string literal in hex\n  '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n  // \"ftyp\" string literal in hex\n  'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n  // \"styp\" string literal in hex\n  'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n  // \"ftypqt\" string literal in hex\n  'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n  // moov string literal in hex\n  'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n  // moof string literal in hex\n  'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n};\nvar _isLikely = {\n  aac: function aac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x10], {\n      offset: offset,\n      mask: [0xFF, 0x16]\n    });\n  },\n  mp3: function mp3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, [0xFF, 0x02], {\n      offset: offset,\n      mask: [0xFF, 0x06]\n    });\n  },\n  webm: function webm(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n    return bytesMatch(docType, CONSTANTS.webm);\n  },\n  mkv: function mkv(bytes) {\n    var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n    return bytesMatch(docType, CONSTANTS.matroska);\n  },\n  mp4: function mp4(bytes) {\n    // if this file is another base media file format, it is not mp4\n    if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n      return false;\n    } // if this file starts with a ftyp or styp box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.mp4, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n      offset: 4\n    })) {\n      return true;\n    } // if this file starts with a moof/moov box its mp4\n\n\n    if (bytesMatch(bytes, CONSTANTS.moof, {\n      offset: 4\n    }) || bytesMatch(bytes, CONSTANTS.moov, {\n      offset: 4\n    })) {\n      return true;\n    }\n  },\n  mov: function mov(bytes) {\n    return bytesMatch(bytes, CONSTANTS.mov, {\n      offset: 4\n    });\n  },\n  '3gp': function gp(bytes) {\n    return bytesMatch(bytes, CONSTANTS['3gp'], {\n      offset: 4\n    });\n  },\n  ac3: function ac3(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.ac3, {\n      offset: offset\n    });\n  },\n  ts: function ts(bytes) {\n    if (bytes.length < 189 && bytes.length >= 1) {\n      return bytes[0] === 0x47;\n    }\n\n    var i = 0; // check the first 376 bytes for two matching sync bytes\n\n    while (i + 188 < bytes.length && i < 188) {\n      if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n        return true;\n      }\n\n      i += 1;\n    }\n\n    return false;\n  },\n  flac: function flac(bytes) {\n    var offset = getId3Offset(bytes);\n    return bytesMatch(bytes, CONSTANTS.flac, {\n      offset: offset\n    });\n  },\n  ogg: function ogg(bytes) {\n    return bytesMatch(bytes, CONSTANTS.ogg);\n  },\n  avi: function avi(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n      offset: 8\n    });\n  },\n  wav: function wav(bytes) {\n    return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n      offset: 8\n    });\n  },\n  'h264': function h264(bytes) {\n    // find seq_parameter_set_rbsp\n    return findH264Nal(bytes, 7, 3).length;\n  },\n  'h265': function h265(bytes) {\n    // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n    return findH265Nal(bytes, [32, 33], 3).length;\n  }\n}; // get all the isLikely functions\n// but make sure 'ts' is above h264 and h265\n// but below everything else as it is the least specific\n\nvar isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n.filter(function (t) {\n  return t !== 'ts' && t !== 'h264' && t !== 'h265';\n}) // add it back to the bottom\n.concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\nisLikelyTypes.forEach(function (type) {\n  var isLikelyFn = _isLikely[type];\n\n  _isLikely[type] = function (bytes) {\n    return isLikelyFn(toUint8(bytes));\n  };\n}); // export after wrapping\n\nexport var isLikely = _isLikely; // A useful list of file signatures can be found here\n// https://en.wikipedia.org/wiki/List_of_file_signatures\n\nexport var detectContainerForBytes = function detectContainerForBytes(bytes) {\n  bytes = toUint8(bytes);\n\n  for (var i = 0; i < isLikelyTypes.length; i++) {\n    var type = isLikelyTypes[i];\n\n    if (isLikely[type](bytes)) {\n      return type;\n    }\n  }\n\n  return '';\n}; // fmp4 is not a container\n\nexport var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n  return findBox(bytes, ['moof']).length > 0;\n};","/**\n * @license\n * Video.js 8.10.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport keycode from 'keycode';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _extends from '@babel/runtime/helpers/extends';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport { Parser } from 'm3u8-parser';\nimport { DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, parseCodecs, muxerSupportsCodec, browserSupportsCodec, translateLegacyCodec, codecsFromDefault, isAudioCodec, getMimeForCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$6 = \"8.10.0\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nconst hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecycle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nconst hooks = function (type, fn) {\n  hooks_[type] = hooks_[type] || [];\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n  return hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hook = function (type, fn) {\n  hooks(type, fn);\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nconst removeHook = function (type, fn) {\n  const index = hooks(type).indexOf(fn);\n  if (index <= -1) {\n    return false;\n  }\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nconst hookOnce = function (type, fn) {\n  hooks(type, [].concat(fn).map(original => {\n    const wrapper = (...args) => {\n      removeHook(type, wrapper);\n      return original(...args);\n    };\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n */\n\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nconst FullscreenApi = {\n  prefixed: true\n};\n\n// browser API methods\nconst apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen']];\nconst specApi = apiMap[0];\nlet browserApi;\n\n// determine the supported set of functions\nfor (let i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (let i = 0; i < browserApi.length; i++) {\n    FullscreenApi[specApi[i]] = browserApi[i];\n  }\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\n// This is the private tracking variable for the logging history.\nlet history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} name\n *         The name of the console method to use.\n *\n * @param  {Object} log\n *         The arguments to be passed to the matching console method.\n *\n * @param {string} [styles]\n *        styles for name\n */\nconst LogByTypeFactory = (name, log, styles) => (type, level, args) => {\n  const lvl = log.levels[level];\n  const lvlRegExp = new RegExp(`^(${lvl})$`);\n  let resultName = name;\n  if (type !== 'log') {\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n  if (styles) {\n    resultName = `%c${name}`;\n    args.unshift(styles);\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift(resultName + ':');\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n\n    // only store 1000 history entries\n    const splice = history.length - 1000;\n    history.splice(0, splice > 0 ? splice : 0);\n  }\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window$1.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  let fn = window$1.console[type];\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window$1.console.info || window$1.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n  fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n};\nfunction createLogger$1(name, delimiter = ':', styles = '') {\n  // This is the private tracking variable for logging level.\n  let level = 'info';\n\n  // the curried logByType bound to the specific log and history\n  let logByType;\n\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * *[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {...*} args\n   *           One or more messages or objects that should be logged.\n   */\n  const log = function (...args) {\n    logByType('log', level, args);\n  };\n\n  // This is the logByType helper that the logging methods below use\n  logByType = LogByTypeFactory(name, log, styles);\n\n  /**\n   * Create a new subLogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} subName\n   *        The name to add call the new logger\n   * @param {string} [subDelimiter]\n   *        Optional delimiter\n   * @param {string} [subStyles]\n   *        Optional styles\n   * @return {Object}\n   */\n  log.createLogger = (subName, subDelimiter, subStyles) => {\n    const resultDelimiter = subDelimiter !== undefined ? subDelimiter : delimiter;\n    const resultStyles = subStyles !== undefined ? subStyles : styles;\n    const resultName = `${name} ${resultDelimiter} ${subName}`;\n    return createLogger$1(resultName, resultDelimiter, resultStyles);\n  };\n\n  /**\n   * Create a new logger.\n   *\n   * @param {string} newName\n   *        The name for the new logger\n   * @param {string} [newDelimiter]\n   *        Optional delimiter\n   * @param {string} [newStyles]\n   *        Optional styles\n   * @return {Object}\n   */\n  log.createNewLogger = (newName, newDelimiter, newStyles) => {\n    return createLogger$1(newName, newDelimiter, newStyles);\n  };\n\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {'all'|'debug'|'info'|'warn'|'error'|'off'} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n  log.level = lvl => {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(`\"${lvl}\" in not a valid log level`);\n      }\n      level = lvl;\n    }\n    return level;\n  };\n\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n  log.history = () => history ? [].concat(history) : [];\n\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n  log.history.filter = fname => {\n    return (history || []).filter(historyItem => {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n    });\n  };\n\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n  log.history.clear = () => {\n    if (history) {\n      history.length = 0;\n    }\n  };\n\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n  log.history.disable = () => {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n  log.history.enable = () => {\n    if (history === null) {\n      history = [];\n    }\n  };\n\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as an error\n   */\n  log.error = (...args) => logByType('error', level, args);\n\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n  log.warn = (...args) => logByType('warn', level, args);\n\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {...*} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n  log.debug = (...args) => logByType('debug', level, args);\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nconst log$1 = createLogger$1('VIDEOJS');\nconst createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {*} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {*} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {*}\n *         The new accumulated value.\n */\nconst toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nconst keys = function (object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(key => fn(object[key], key));\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {*} [initial = 0]\n *        Starting value\n *\n * @return {*}\n *         The final accumulated value.\n */\nfunction reduce(object, fn, initial = 0) {\n  return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction merge$1(...sources) {\n  const result = {};\n  sources.forEach(source => {\n    if (!source) {\n      return;\n    }\n    each(source, (value, key) => {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n      result[key] = merge$1(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Returns an array of values for a given object\n *\n * @param  {Object} source - target object\n * @return {Array<unknown>} - object values\n */\nfunction values(source = {}) {\n  const result = [];\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      const value = source[key];\n      result.push(value);\n    }\n  }\n  return result;\n}\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it is retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter whether a setter should be allowed or not\n */\nfunction defineLazyProperty(obj, key, getValue, setter = true) {\n  const set = value => Object.defineProperty(obj, key, {\n    value,\n    enumerable: true,\n    writable: true\n  });\n  const options = {\n    configurable: true,\n    enumerable: true,\n    get() {\n      const value = getValue();\n      set(value);\n      return value;\n    }\n  };\n  if (setter) {\n    options.set = set;\n  }\n  return Object.defineProperty(obj, key, options);\n}\n\nvar Obj = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  each: each,\n  reduce: reduce,\n  isObject: isObject,\n  isPlain: isPlain,\n  merge: merge$1,\n  values: values,\n  defineLazyProperty: defineLazyProperty\n});\n\n/**\n * @file browser.js\n * @module browser\n */\n\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPOD = false;\n\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @type {string|null}\n */\nlet IOS_VERSION = null;\n\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_ANDROID = false;\n\n/**\n * The detected Android version - or `null` if not Android or indeterminable.\n *\n * @static\n * @type {number|string|null}\n */\nlet ANDROID_VERSION;\n\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_FIREFOX = false;\n\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_EDGE = false;\n\n/**\n * Whether or not this is any Chromium Browser\n *\n * @static\n * @type {Boolean}\n */\nlet IS_CHROMIUM = false;\n\n/**\n * Whether or not this is any Chromium browser that is not Edge.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * Deprecated, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n * IS_CHROMIUM should be used instead.\n * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n *\n * @static\n * @deprecated\n * @type {Boolean}\n */\nlet IS_CHROME = false;\n\n/**\n * The detected Chromium version - or `null`.\n *\n * @static\n * @type {number|null}\n */\nlet CHROMIUM_VERSION = null;\n\n/**\n * The detected Google Chrome version - or `null`.\n * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n * Deprecated, use CHROMIUM_VERSION instead.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet CHROME_VERSION = null;\n\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @deprecated\n * @type {number|null}\n */\nlet IE_VERSION = null;\n\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_SAFARI = false;\n\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_WINDOWS = false;\n\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @type {Boolean}\n */\nlet IS_IPAD = false;\n\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nlet IS_IPHONE = false;\n\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\nconst UAD = window$1.navigator && window$1.navigator.userAgentData;\nif (UAD && UAD.platform && UAD.brands) {\n  // If userAgentData is present, use it instead of userAgent to avoid warnings\n  // Currently only implemented on Chromium\n  // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n  IS_ANDROID = UAD.platform === 'Android';\n  IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n  IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n  IS_WINDOWS = UAD.platform === 'Windows';\n}\n\n// If the browser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n//  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n// the checks need to be made agiainst the regular userAgent string.\nif (!IS_CHROMIUM) {\n  const USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\n  IS_IPOD = /iPod/i.test(USER_AGENT);\n  IOS_VERSION = function () {\n    const match = USER_AGENT.match(/OS (\\d+)_/i);\n    if (match && match[1]) {\n      return match[1];\n    }\n    return null;\n  }();\n  IS_ANDROID = /Android/i.test(USER_AGENT);\n  ANDROID_VERSION = function () {\n    // This matches Android Major.Minor.Patch versions\n    // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n    const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n    if (!match) {\n      return null;\n    }\n    const major = match[1] && parseFloat(match[1]);\n    const minor = match[2] && parseFloat(match[2]);\n    if (major && minor) {\n      return parseFloat(match[1] + '.' + match[2]);\n    } else if (major) {\n      return major;\n    }\n    return null;\n  }();\n  IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n  IS_EDGE = /Edg/i.test(USER_AGENT);\n  IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n  IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n  CHROMIUM_VERSION = CHROME_VERSION = function () {\n    const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n    if (match && match[2]) {\n      return parseFloat(match[2]);\n    }\n    return null;\n  }();\n  IE_VERSION = function () {\n    const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n    let version = result && parseFloat(result[1]);\n    if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n      // IE 11 has a different user agent string than other IE versions\n      version = 11.0;\n    }\n    return version;\n  }();\n  IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n  IS_WINDOWS = /Windows/i.test(USER_AGENT);\n  IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n  IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n}\n\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\nconst IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  get IS_IPOD () { return IS_IPOD; },\n  get IOS_VERSION () { return IOS_VERSION; },\n  get IS_ANDROID () { return IS_ANDROID; },\n  get ANDROID_VERSION () { return ANDROID_VERSION; },\n  get IS_FIREFOX () { return IS_FIREFOX; },\n  get IS_EDGE () { return IS_EDGE; },\n  get IS_CHROMIUM () { return IS_CHROMIUM; },\n  get IS_CHROME () { return IS_CHROME; },\n  get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n  get CHROME_VERSION () { return CHROME_VERSION; },\n  get IE_VERSION () { return IE_VERSION; },\n  get IS_SAFARI () { return IS_SAFARI; },\n  get IS_WINDOWS () { return IS_WINDOWS; },\n  get IS_IPAD () { return IS_IPAD; },\n  get IS_IPHONE () { return IS_IPHONE; },\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {*} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n    const ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {ContentDescriptor} [content]\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n  const el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    const val = properties[propName];\n\n    // Handle textContent since it's not supported everywhere and we have a\n    // method for it.\n    if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n  if (content) {\n    appendContent(el, content);\n  }\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {HTMLElement} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  return element.classList.contains(classToCheck);\n}\n\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {...string} classesToAdd\n *         One or more class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\nfunction addClass(element, ...classesToAdd) {\n  element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {...string} classesToRemove\n *         One or more class name to remove.\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\nfunction removeClass(element, ...classesToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n  element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n  return element;\n}\n\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n  if (typeof predicate !== 'boolean') {\n    predicate = undefined;\n  }\n  classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    const attrValue = attributes[attrName];\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\nfunction getAttributes(tag) {\n  const obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n  const knownBooleans = ['autoplay', 'controls', 'playsinline', 'loop', 'muted', 'default', 'defaultMuted'];\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    const attrs = tag.attributes;\n    for (let i = attrs.length - 1; i >= 0; i--) {\n      const attrName = attrs[i].name;\n      /** @type {boolean|string} */\n      let attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (knownBooleans.includes(attrName)) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n      obj[attrName] = attrVal;\n    }\n  }\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text.\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking.\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    const rect = el.getBoundingClientRect();\n    const result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n    return result;\n  }\n}\n\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n  const width = el.offsetWidth;\n  const height = el.offsetHeight;\n  let left = 0;\n  let top = 0;\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n  return {\n    left,\n    top,\n    width,\n    height\n  };\n}\n\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  const translated = {\n    x: 0,\n    y: 0\n  };\n  if (IS_IOS) {\n    let item = el;\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      const transform = computedStyle(item, 'transform');\n      if (/^matrix/.test(transform)) {\n        const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n        translated.x += values[12];\n        translated.y += values[13];\n      }\n      item = item.parentNode;\n    }\n  }\n  const position = {};\n  const boxTarget = findPosition(event.target);\n  const box = findPosition(el);\n  const boxW = box.width;\n  const boxH = box.height;\n  let offsetY = event.offsetY - (box.top - boxTarget.top);\n  let offsetX = event.offsetX - (box.left - boxTarget.left);\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {*} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `Text`     | A TextNode. The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|Text|Array|Function} ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(value => {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(value => value);\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(node => el.appendChild(node));\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if an event was a single left click.\n *\n * @param  {MouseEvent} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nconst $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\nconst $$ = createQuerier('querySelectorAll');\n\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n  if (typeof window$1.getComputedStyle === 'function') {\n    let computedStyleValue;\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n  return '';\n}\n\n/**\n * Copy document style sheets to another window.\n *\n * @param    {Window} win\n *           The window element you want to copy the document style sheets to.\n *\n */\nfunction copyStyleSheetsToWindow(win) {\n  [...document.styleSheets].forEach(styleSheet => {\n    try {\n      const cssRules = [...styleSheet.cssRules].map(rule => rule.cssText).join('');\n      const style = document.createElement('style');\n      style.textContent = cssRules;\n      win.document.head.appendChild(style);\n    } catch (e) {\n      const link = document.createElement('link');\n      link.rel = 'stylesheet';\n      link.type = styleSheet.type;\n      // For older Safari this has to be the string; on other browsers setting the MediaList works\n      link.media = styleSheet.media.mediaText;\n      link.href = styleSheet.href;\n      win.document.head.appendChild(link);\n    }\n  });\n}\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$,\n  computedStyle: computedStyle,\n  copyStyleSheetsToWindow: copyStyleSheetsToWindow\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nlet _windowLoaded = false;\nlet videojs$1;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nconst autoSetup = function () {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n  const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  const mediaEls = vids.concat(audios, divs);\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n    for (let i = 0, e = mediaEls.length; i < e; i++) {\n      const mediaEl = mediaEls[i];\n\n      // Check if element exists, has getAttribute func.\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          const options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n  window$1.setTimeout(autoSetup, wait);\n}\n\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n\n/**\n * Create a DOM style element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nconst createStyleElement = function (className) {\n  const style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nconst setTextContent = function (el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar DomData = new WeakMap();\n\n/**\n * @file guid.js\n * @module guid\n */\n\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nconst _initialGuid = 3;\n\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\nlet _guid = _initialGuid;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData.delete(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string[]} types\n *        Type of event to bind to.\n *\n * @param {Function} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    const old = event || window$1.event;\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (const key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      const doc = document.documentElement;\n      const body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true;\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nlet _supportsPassive;\nconst supportsPassive = function () {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {\n      // disregard\n    }\n  }\n  return _supportsPassive;\n};\n\n/**\n * Touch events Chrome expects to be passive\n */\nconst passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {Function} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n  const data = DomData.get(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n  data.handlers[type].push(fn);\n  if (!data.dispatcher) {\n    data.disabled = false;\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n      event = fixEvent(event);\n      const handlers = data.handlers[event.type];\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        const handlersCopy = handlers.slice(0);\n        for (let m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      let options = false;\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {Function} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n  const data = DomData.get(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  const removeType = function (el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (const t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n  const handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (let n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  const parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n    const targetData = DomData.get(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\nfunction any(elem, type, fn) {\n  const func = function () {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n\n  // multiple ons, but one off for everything\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nconst UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * A private, internal-only function for changing the context of a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @private\n * @function\n * @param    {*} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\nconst bind_ = function (context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  const bound = fn.bind(context);\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\nconst throttle = function (fn, wait) {\n  let last = window$1.performance.now();\n  const throttled = function (...args) {\n    const now = window$1.performance.now();\n    if (now - last >= wait) {\n      fn(...args);\n      last = now;\n    }\n  };\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\nconst debounce = function (func, wait, immediate, context = window$1) {\n  let timeout;\n  const cancel = () => {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n\n  /* eslint-disable consistent-this */\n  const debounced = function () {\n    const self = this;\n    const args = arguments;\n    let later = function () {\n      timeout = null;\n      later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\nvar Fn = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n  bind_: bind_,\n  throttle: throttle,\n  debounce: debounce\n});\n\n/**\n * @file src/js/event-target.js\n */\nlet EVENT_MAP;\n\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nclass EventTarget$2 {\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {\n    // Remove the addEventListener alias before calling Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    on(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to remove.\n   */\n  off(type, fn) {\n    off(this, type, fn);\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    one(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {\n    // Remove the addEventListener aliasing Events.on\n    // so we don't get into an infinite type loop\n    const ael = this.addEventListener;\n    this.addEventListener = () => {};\n    any(this, type, fn);\n    this.addEventListener = ael;\n  }\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|EventTarget~Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   */\n  trigger(event) {\n    const type = event.type || event;\n\n    // deprecation\n    // In a future version we should default target to `this`\n    // similar to how we default the target to `elem` in\n    // `Events.trigger`. Right now the default `target` will be\n    // `document` due to the `Event.fixEvent` call.\n    if (typeof event === 'string') {\n      event = {\n        type\n      };\n    }\n    event = fixEvent(event);\n    if (this.allowedEvents_[type] && this['on' + type]) {\n      this['on' + type](event);\n    }\n    trigger(this, event);\n  }\n  queueTrigger(event) {\n    // only set up EVENT_MAP if it'll be used\n    if (!EVENT_MAP) {\n      EVENT_MAP = new Map();\n    }\n    const type = event.type || event;\n    let map = EVENT_MAP.get(this);\n    if (!map) {\n      map = new Map();\n      EVENT_MAP.set(this, map);\n    }\n    const oldTimeout = map.get(type);\n    map.delete(type);\n    window$1.clearTimeout(oldTimeout);\n    const timeout = window$1.setTimeout(() => {\n      map.delete(type);\n      // if we cleared out all timeouts for the current target, delete its map\n      if (map.size === 0) {\n        map = null;\n        EVENT_MAP.delete(this);\n      }\n      this.trigger(event);\n    }, 0);\n    map.set(type, timeout);\n  }\n}\n\n/**\n * A Custom DOM event.\n *\n * @typedef {CustomEvent} Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventListener\n * @this {EventTarget}\n *\n * @param {Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @protected\n */\nEventTarget$2.prototype.allowedEvents_ = {};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\nconst objName = obj => {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n  if (obj.name_) {\n    return obj.name_;\n  }\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n  return typeof obj;\n};\n\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nconst isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} target\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\nconst addEventedCallback = (target, callback) => {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n    target.eventedCallbacks.push(callback);\n  }\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nconst isValidEventType = type =>\n// The regex here verifies that the `type` contains at least one non-\n// whitespace character.\ntypeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateTarget = (target, obj, fnName) => {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateEventType = (type, obj, fnName) => {\n  if (!isValidEventType(type)) {\n    throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\nconst validateListener = (listener, obj, fnName) => {\n  if (typeof listener !== 'function') {\n    throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nconst normalizeListenArgs = (self, args, fnName) => {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  let target;\n  let type;\n  let listener;\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n    [type, listener] = args;\n  } else {\n    [target, type, listener] = args;\n  }\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind_(self, listener);\n  return {\n    isTargetingSelf,\n    target,\n    type,\n    listener\n  };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nconst listen = (target, method, type, listener) => {\n  validateTarget(target, target, method);\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nconst EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'on');\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      const removeListenerOnDispose = () => this.off(target, type, listener);\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'one');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listeners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any(...args) {\n    const {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    } = normalizeListenArgs(this, args, 'any');\n\n    // Targeting this evented object.\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      const wrapper = (...largs) => {\n        this.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      const target = targetOrType;\n      const type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off');\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind_(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    const type = event && typeof event !== 'string' ? event.type : event;\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n    }\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target, options = {}) {\n  const {\n    eventBusKey\n  } = options;\n\n  // Set or create the eventBusEl_.\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n  Object.assign(target, EventedMixin);\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(callback => {\n      callback();\n    });\n  }\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', () => {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData.delete(val);\n      }\n    });\n    window$1.setTimeout(() => {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nconst StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState(stateUpdates) {\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n    let changes;\n    each(stateUpdates, (value, key) => {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: this.state[key],\n          to: value\n        };\n      }\n      this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes,\n        type: 'statechanged'\n      });\n    }\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  Object.assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = Object.assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n  return target;\n}\n\n/**\n * @file str.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nconst toLowerCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toLowerCase());\n};\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nconst toTitleCase$1 = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nconst titleCaseEquals = function (str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\nvar Str = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  toLowerCase: toLowerCase,\n  toTitleCase: toTitleCase$1,\n  titleCaseEquals: titleCaseEquals\n});\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\nclass Component$1 {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * parameters and any callback value will be ignored.\n   *\n   * @callback ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to initialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  constructor(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n    this.isDisposed_ = false;\n\n    // Hold the reference to the parent component via `addChild` method\n    this.parentComponent_ = null;\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = merge$1({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = merge$1(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      const id = player && player.id && player.id() || 'no_player';\n      this.id_ = `${id}_component_${newGUID()}`;\n    }\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(c => this.addClass(c));\n    }\n\n    // Remove the placeholder event methods. If the component is evented, the\n    // real methods are added next\n    ['on', 'off', 'one', 'any', 'trigger'].forEach(fn => {\n      this[fn] = undefined;\n    });\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set();\n    this.setIntervalIds_ = new Set();\n    this.rafIds_ = new Set();\n    this.namedRafs_ = new Map();\n    this.clearingTimersOnDispose_ = false;\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n    this.ready(ready);\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  // `on`, `off`, `one`, `any` and `trigger` are here so tsc includes them in definitions.\n  // They are replaced or removed in the constructor\n\n  /**\n   * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n   * function that will get called when an event with a certain name gets triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to call with `EventTarget`s\n   */\n  on(type, fn) {}\n\n  /**\n   * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n   * This makes it so that the `event listener` will no longer get called when the\n   * named event happens.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} [fn]\n   *        The function to remove. If not specified, all listeners managed by Video.js will be removed.\n   */\n  off(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once. After the\n   * first trigger it will get removed. This is like adding an `event listener`\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  one(type, fn) {}\n\n  /**\n   * This function will add an `event listener` that gets triggered only once and is\n   * removed from all events. This is like adding an array of `event listener`s\n   * with {@link EventTarget#on} that calls {@link EventTarget#off} on all events the\n   * first time it is triggered.\n   *\n   * @param {string|string[]} type\n   *        An event name or an array of event names.\n   *\n   * @param {Function} fn\n   *        The function to be called once for each event name.\n   */\n  any(type, fn) {}\n\n  /**\n   * This function causes an event to happen. This will then cause any `event listeners`\n   * that are waiting for that event, to get called. If there are no `event listeners`\n   * for an event then nothing will happen.\n   *\n   * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n   * Trigger will also call the `on` + `uppercaseEventName` function.\n   *\n   * Example:\n   * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n   * `onClick` if it exists.\n   *\n   * @param {string|Event|Object} event\n   *        The name of the event, an `Event`, or an object with a key of type set to\n   *        an event name.\n   *\n   * @param {Object} [hash]\n   *        Optionally extra argument to pass through to an event listener\n   */\n  trigger(event, hash) {}\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n  dispose(options = {}) {\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true;\n\n    // Dispose all children.\n    if (this.children_) {\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  }\n\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return { import('./player').default }\n   *         The player that this `Component` has attached to.\n   */\n  player() {\n    return this.player_;\n  }\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:obj.merge}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n    this.options_ = merge$1(this.options_, obj);\n    return this.options_;\n  }\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  el() {\n    return this.el_;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  localize(string, tokens, defaultValue = string) {\n    const code = this.player_.language && this.player_.language();\n    const languages = this.player_.languages && this.player_.languages();\n    const language = languages && languages[code];\n    const primaryCode = code && code.split('-')[0];\n    const primaryLang = languages && languages[primaryCode];\n    let localizedString = defaultValue;\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        const value = tokens[index - 1];\n        let ret = value;\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n        return ret;\n      });\n    }\n    return localizedString;\n  }\n\n  /**\n   * Handles language change for the player in components. Should be overridden by sub-components.\n   *\n   * @abstract\n   */\n  handleLanguagechange() {}\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  id() {\n    return this.id_;\n  }\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  name() {\n    return this.name_;\n  }\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  children() {\n    return this.children_;\n  }\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  getChildById(id) {\n    return this.childIndex_[id];\n  }\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  getChild(name) {\n    if (!name) {\n      return;\n    }\n    return this.childNameIndex_[name];\n  }\n\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  getDescendant(...names) {\n    // flatten array argument into the main array\n    names = names.reduce((acc, n) => acc.concat(n), []);\n    let currentChild = this;\n    for (let i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n    return currentChild;\n  }\n\n  /**\n   * Adds an SVG icon element to another element or component.\n   *\n   * @param {string} iconName\n   *        The name of icon. A list of all the icon names can be found at 'sandbox/svg-icons.html'\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on. Defaults to the current Component's element.\n   *\n   * @return {Element}\n   *        The newly created icon element.\n   */\n  setIcon(iconName, el = this.el()) {\n    // TODO: In v9 of video.js, we will want to remove font icons entirely.\n    // This means this check, as well as the others throughout the code, and\n    // the unecessary CSS for font icons, will need to be removed.\n    // See https://github.com/videojs/video.js/pull/8260 as to which components\n    // need updating.\n    if (!this.player_.options_.experimentalSvgIcons) {\n      return;\n    }\n    const xmlnsURL = 'http://www.w3.org/2000/svg';\n\n    // The below creates an element in the format of:\n    // <span><svg><use>....</use></svg></span>\n    const iconContainer = createEl('span', {\n      className: 'vjs-icon-placeholder vjs-svg-icon'\n    }, {\n      'aria-hidden': 'true'\n    });\n    const svgEl = document.createElementNS(xmlnsURL, 'svg');\n    svgEl.setAttributeNS(null, 'viewBox', '0 0 512 512');\n    const useEl = document.createElementNS(xmlnsURL, 'use');\n    svgEl.appendChild(useEl);\n    useEl.setAttributeNS(null, 'href', `#vjs-icon-${iconName}`);\n    iconContainer.appendChild(svgEl);\n\n    // Replace a pre-existing icon if one exists.\n    if (this.iconIsSet_) {\n      el.replaceChild(iconContainer, el.querySelector('.vjs-icon-placeholder'));\n    } else {\n      el.appendChild(iconContainer);\n    }\n    this.iconIsSet_ = true;\n    return iconContainer;\n  }\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  addChild(child, options = {}, index = this.children_.length) {\n    let component;\n    let componentName;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      const componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      const ComponentClass = Component$1.getComponent(componentClassName);\n      if (!ComponentClass) {\n        throw new Error(`Component ${componentClassName} does not exist`);\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      let refNode = null;\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  }\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    if (!component || !this.children_) {\n      return;\n    }\n    let childFound = false;\n    for (let i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n    if (!childFound) {\n      return;\n    }\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    const compEl = component.el();\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  initChildren() {\n    const children = this.options_.children;\n    if (children) {\n      // `this` is `parent`\n      const parentOptions = this.options_;\n      const handleAdd = child => {\n        const name = child.name;\n        let opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        const newChild = this.addChild(name, opts);\n        if (newChild) {\n          this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      let workingChildren;\n      const Tech = Component$1.getComponent('Tech');\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(child => {\n        let name;\n        let opts;\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n        return {\n          name,\n          opts\n        };\n      }).filter(child => {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registered as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n\n  /**\n   * Builds the default DOM class name. Should be overridden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @param {ReadyCallback} fn\n   *        Function that gets called when the `Component` is ready.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ready(fn, sync = false) {\n    if (!fn) {\n      return;\n    }\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      const readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  }\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  $$(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  hasClass(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {...string} classesToAdd\n   *        One or more CSS class name to add.\n   */\n  addClass(...classesToAdd) {\n    addClass(this.el_, ...classesToAdd);\n  }\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {...string} classesToRemove\n   *        One or more CSS class name to remove.\n   */\n  removeClass(...classesToRemove) {\n    removeClass(this.el_, ...classesToRemove);\n  }\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  toggleClass(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  show() {\n    this.removeClass('vjs-hidden');\n  }\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  hide() {\n    this.addClass('vjs-hidden');\n  }\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attribute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  getAttribute(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  setAttribute(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  removeAttribute(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The width when getting, zero if there is no width\n   */\n  width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The height when getting, zero if there is no height\n   */\n  height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number|undefined}\n   *         The dimension when getting or 0 if unset\n   */\n  dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {Event}\n         */\n        this.trigger('componentresize');\n      }\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    const val = this.el_.style[widthOrHeight];\n    const pxIndex = val.indexOf('px');\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  currentDimension(widthOrHeight) {\n    let computedWidthOrHeight = 0;\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n      computedWidthOrHeight = this.el_[rule];\n    }\n    return computedWidthOrHeight;\n  }\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  currentWidth() {\n    return this.currentDimension('width');\n  }\n\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  currentHeight() {\n    return this.currentDimension('height');\n  }\n\n  /**\n   * Set the focus to this component\n   */\n  focus() {\n    this.el_.focus();\n  }\n\n  /**\n   * Remove the focus from this component\n   */\n  blur() {\n    this.el_.blur();\n  }\n\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping.\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.stopPropagation();\n      }\n      this.player_.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {KeyboardEvent} event\n   *        The event that caused this function to be called.\n   */\n  handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @protected\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    let touchStart = 0;\n    let firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    const tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    const touchTimeThreshold = 200;\n    let couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = window$1.performance.now();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        const xdiff = event.touches[0].pageX - firstTouch.pageX;\n        const ydiff = event.touches[0].pageY - firstTouch.pageY;\n        const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n    const noTap = function () {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        const touchTime = window$1.performance.now() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {MouseEvent}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    const report = bind_(this.player(), this.player().reportUserActivity);\n    let touchHolding;\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n    const touchEnd = function (event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  setTimeout(fn, timeout) {\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(() => {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n      }\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_.delete(timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n    return timeoutId;\n  }\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  setInterval(fn, interval) {\n    fn = bind_(this, fn);\n    this.clearTimersOnDispose_();\n    const intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an interval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_.delete(intervalId);\n      window$1.clearInterval(intervalId);\n    }\n    return intervalId;\n  }\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  requestAnimationFrame(fn) {\n    this.clearTimersOnDispose_();\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id;\n    fn = bind_(this, fn);\n    id = window$1.requestAnimationFrame(() => {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n      }\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  requestNamedAnimationFrame(name, fn) {\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n    this.clearTimersOnDispose_();\n    fn = bind_(this, fn);\n    const id = this.requestAnimationFrame(() => {\n      fn();\n      if (this.namedRafs_.has(name)) {\n        this.namedRafs_.delete(name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_.delete(name);\n  }\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  cancelAnimationFrame(id) {\n    if (this.rafIds_.has(id)) {\n      this.rafIds_.delete(id);\n      window$1.cancelAnimationFrame(id);\n    }\n    return id;\n  }\n\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  clearTimersOnDispose_() {\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', () => {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        this[idName].forEach((val, key) => this[cancelName](key));\n      });\n      this.clearingTimersOnDispose_ = false;\n    });\n  }\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  static registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n    }\n    const Tech = Component$1.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    const isTech = Tech && Tech.isTech(ComponentToRegister);\n    const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n    if (isTech || !isComp) {\n      let reason;\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n      throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n    }\n    name = toTitleCase$1(name);\n    if (!Component$1.components_) {\n      Component$1.components_ = {};\n    }\n    const Player = Component$1.getComponent('Player');\n    if (name === 'Player' && Player && Player.players) {\n      const players = Player.players;\n      const playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n    Component$1.components_[name] = ComponentToRegister;\n    Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {typeof Component}\n   *         The `Component` that got registered under the given name.\n   */\n  static getComponent(name) {\n    if (!name || !Component$1.components_) {\n      return;\n    }\n    return Component$1.components_[name];\n  }\n}\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time.js\n * @module time\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time, which mimics {@link TimeRanges}.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n *\n * @return  {TimeRange}\n */\nfunction createTimeRangesObj(ranges) {\n  let timeRangesObj;\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = () => (ranges || []).values();\n  }\n  return timeRangesObj;\n}\n\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n *\n * @return {TimeRange}\n */\nfunction createTimeRanges$1(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nconst defaultImplementation = function (seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  let s = Math.floor(seconds % 60);\n  let m = Math.floor(seconds / 60 % 60);\n  let h = Math.floor(seconds / 3600);\n  const gm = Math.floor(guide / 60 % 60);\n  const gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n};\n\n// Internal pointer to the current implementation.\nlet implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\nfunction formatTime(seconds, guide = seconds) {\n  return implementation(seconds, guide);\n}\n\nvar Time = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTimeRanges: createTimeRanges$1,\n  createTimeRange: createTimeRanges$1,\n  setFormatTime: setFormatTime,\n  resetFormatTime: resetFormatTime,\n  formatTime: formatTime\n});\n\n/**\n * @file buffer.js\n * @module buffer\n */\n\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param { import('./time').TimeRange } buffered\n *        The current `TimeRanges` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  let bufferedDuration = 0;\n  let start;\n  let end;\n  if (!duration) {\n    return 0;\n  }\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges$1(0, 0);\n  }\n  for (let i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n    bufferedDuration += end - start;\n  }\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n    Object.assign(this, value);\n  }\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, e => {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nconst trackToJson_ = function (track) {\n  const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param { import('../tech/tech').default } tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nconst textTracksToJson = function (tech) {\n  const trackEls = tech.$$('track');\n  const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n  const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    const json = trackToJson_(trackEl.track);\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nconst jsonToTextTracks = function (json, tech) {\n  json.forEach(function (track) {\n    const addedTrack = tech.addRemoteTextTrack(track).track;\n    if (!track.src && track.cues) {\n      track.cues.forEach(cue => addedTrack.addCue(cue));\n    }\n  });\n  return tech.textTracks();\n};\nvar textTrackConverter = {\n  textTracksToJson,\n  jsonToTextTracks,\n  trackToJson_\n};\n\n/**\n * @file modal-dialog.js\n */\nconst MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\nclass ModalDialog extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param { import('./utils/dom').ContentDescriptor} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.close_ = e => this.close(e);\n    this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n    this.closeable(!this.options_.uncloseable);\n    this.content(this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    this.contentEl_ = createEl('div', {\n      className: `${MODAL_CLASS_NAME}-content`\n    }, {\n      role: 'document'\n    });\n    this.descEl_ = createEl('p', {\n      className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n      id: this.el().getAttribute('aria-describedby')\n    });\n    textContent(this.descEl_, this.description());\n    this.el_.appendChild(this.descEl_);\n    this.el_.appendChild(this.contentEl_);\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': `${this.id()}_description`,\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  description() {\n    let desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n    return desc;\n  }\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  open() {\n    if (!this.opened_) {\n      const player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n      this.on('keydown', this.handleKeyDown_);\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  }\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  close() {\n    if (!this.opened_) {\n      return;\n    }\n    const player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n    this.off('keydown', this.handleKeyDown_);\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  closeable(value) {\n    if (typeof value === 'boolean') {\n      const closeable = this.closeable_ = !!value;\n      let close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        const temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  }\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  fill() {\n    this.fillWith(this.content());\n  }\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param { import('./utils/dom').ContentDescriptor} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  fillWith(content) {\n    const contentEl = this.contentEl();\n    const parentEl = contentEl.parentNode;\n    const nextSiblingEl = contentEl.nextSibling;\n\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {Event}\n      */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    const closeButton = this.getChild('closeButton');\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {Event}\n    */\n    this.trigger('modalempty');\n  }\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  { import('./utils/dom').ContentDescriptor} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return { import('./utils/dom').ContentDescriptor}\n   *         The current content of the modal dialog\n   */\n  content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  }\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  conditionalFocus_() {\n    const activeEl = document.activeElement;\n    const playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    }\n\n    // exit early if it isn't a tab key\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n    const focusableEls = this.focusableEls_();\n    const activeEl = this.el_.querySelector(':focus');\n    let focusIndex;\n    for (let i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  focusableEls_() {\n    const allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, child => {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  }\n}\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\nclass TrackList extends EventTarget$2 {\n  /**\n   * Create an instance of this class\n   *\n   * @param { import('./track').default[] } tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  constructor(tracks = []) {\n    super();\n    this.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.tracks_.length;\n      }\n    });\n    for (let i = 0; i < tracks.length; i++) {\n      this.addTrack(tracks[i]);\n    }\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param { import('./track').default } track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    const index = this.tracks_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n    track.labelchange_ = () => {\n      this.trigger({\n        track,\n        type: 'labelchange',\n        target: this\n      });\n    };\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param { import('./track').default } rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  removeTrack(rtrack) {\n    let track;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return { import('./track').default }\n   * @private\n   */\n  getTrackById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const track = this[i];\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @protected\n */\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (const event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param { import('./audio-track').default } track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers$1 = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\nclass AudioTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./audio-track').default[] } [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param { import('./audio-track').default } track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.enabledChange_ = () => {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers$1(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', track.enabledChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  }\n}\n\n/**\n * @file video-track-list.js\n */\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param { import('./video-track').default } track\n *        The track to skip\n *\n * @private\n */\nconst disableOthers = function (list, track) {\n  for (let i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\nclass VideoTrackList extends TrackList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  constructor(tracks = []) {\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n    super(tracks);\n    this.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(this, 'selectedIndex', {\n      get() {\n        for (let i = 0; i < this.length; i++) {\n          if (this[i].selected) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      set() {}\n    });\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param { import('./video-track').default } track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n    super.addTrack(track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n    track.selectedChange_ = () => {\n      if (this.changing_) {\n        return;\n      }\n      this.changing_ = true;\n      disableOthers(this, track);\n      this.changing_ = false;\n      this.trigger('change');\n    };\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', track.selectedChange_);\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  }\n}\n\n/**\n * @file text-track-list.js\n */\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\nclass TextTrackList extends TrackList {\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param { import('./text-track').default } track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  addTrack(track) {\n    super.addTrack(track);\n    if (!this.queueChange_) {\n      this.queueChange_ = () => this.queueTrigger('change');\n    }\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n    }\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', this.queueChange_);\n    const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  }\n  removeTrack(rtrack) {\n    super.removeTrack(rtrack);\n\n    // manually remove the event handlers we added\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  }\n}\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nclass HtmlTrackElementList {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  constructor(trackElements = []) {\n    this.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.trackElements_.length;\n      }\n    });\n    for (let i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n  addTrackElement_(trackElement) {\n    const index = this.trackElements_.length;\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  getTrackElementByTrack_(track) {\n    let trackElement_;\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n    return trackElement_;\n  }\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  removeTrackElement_(trackElement) {\n    for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nclass TextTrackCueList {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  constructor(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(this, 'length', {\n      get() {\n        return this.length_;\n      }\n    });\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n  setCues_(cues) {\n    const oldLength = this.length || 0;\n    let i = 0;\n    const l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n    const defineProp = function (index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n    if (oldLength < l) {\n      i = oldLength;\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  getCueById(id) {\n    let result = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      const cue = this[i];\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n    return result;\n  }\n}\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nconst VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nconst AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nconst TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nconst TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\nclass Track extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  constructor(options = {}) {\n    super();\n    const trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    let label = options.label || '';\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    for (const key in trackProps) {\n      Object.defineProperty(this, key, {\n        get() {\n          return trackProps[key];\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n    Object.defineProperty(this, 'label', {\n      get() {\n        return label;\n      },\n      set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {Event}\n           */\n          this.trigger('labelchange');\n        }\n      }\n    });\n  }\n}\n\n/**\n * @file url.js\n * @module url\n */\n\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\nconst parseUrl = function (url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n\n  const props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  const a = document.createElement('a');\n  a.href = url;\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n  const details = {};\n  for (let i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  /* istanbul ignore if */\n  if (!details.host) {\n    details.host = window$1.location.host;\n  }\n  return details;\n};\n\n/**\n * Get absolute version of relative URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nconst getAbsoluteURL = function (url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Add the url to an anchor and let the browser parse it to convert to an absolute url\n    const a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\nconst getFileExtension = function (path) {\n  if (typeof path === 'string') {\n    const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    const pathParts = splitPathRe.exec(path);\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\nconst isCrossOrigin = function (url, winLoc = window$1.location) {\n  const urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nconst parseCues = function (srcContent, track) {\n  const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  const errors = [];\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n    }\n    errors.forEach(error => log$1.error(error));\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nconst loadTrack = function (src, track) {\n  const opts = {\n    uri: src\n  };\n  const crossOrigin = isCrossOrigin(src);\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n  const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n  XHR(opts, bind_(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n          if (event.type === 'vttjserror') {\n            log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n            return;\n          }\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\nclass TextTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param { import('../tech/tech').default } options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n    const settings = merge$1(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    let mode = TextTrackMode[settings.mode] || 'disabled';\n    const default_ = settings.default;\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    super(settings);\n    this.tech_ = settings.tech;\n    this.cues_ = [];\n    this.activeCues_ = [];\n    this.preload_ = this.tech_.preloadTextTracks !== false;\n    const cues = new TextTrackCueList(this.cues_);\n    const activeCues = new TextTrackCueList(this.activeCues_);\n    let changed = false;\n    this.timeupdateHandler = bind_(this, function (event = {}) {\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n        return;\n      }\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n    const disposeHandler = () => {\n      this.stopTracking();\n    };\n    this.tech_.one('dispose', disposeHandler);\n    if (mode !== 'disabled') {\n      this.startTracking();\n    }\n    Object.defineProperties(this, {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      default: {\n        get() {\n          return default_;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get() {\n          return mode;\n        },\n        set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n          if (mode === newMode) {\n            return;\n          }\n          mode = newMode;\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n          this.stopTracking();\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {Event}\n           */\n          this.trigger('modechange');\n        }\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n          return cues;\n        },\n        set() {}\n      },\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          // nothing to do\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n          const ct = this.tech_.currentTime();\n          const active = [];\n          for (let i = 0, l = this.cues.length; i < l; i++) {\n            const cue = this.cues[i];\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            }\n          }\n          changed = false;\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (let i = 0; i < active.length; i++) {\n              if (this.activeCues_.indexOf(active[i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set() {}\n      }\n    });\n    if (settings.src) {\n      this.src = settings.src;\n      if (!this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        this.loaded_ = true;\n      }\n      if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(this.src, this);\n      }\n    } else {\n      this.loaded_ = true;\n    }\n  }\n  startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n    // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  }\n  stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  addCue(originalCue) {\n    let cue = originalCue;\n\n    // Testing if the cue is a VTTCue in a way that survives minification\n    if (!('getCueAsHTML' in cue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n      for (const prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n    const tracks = this.tech_.textTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  removeCue(removeCue) {\n    let i = this.cues_.length;\n    while (i--) {\n      const cue = this.cues_[i];\n      if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n * @protected\n */\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\nclass AudioTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let enabled = false;\n\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'enabled', {\n      get() {\n        return enabled;\n      },\n      set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      this.enabled = settings.enabled;\n    }\n    this.loaded_ = true;\n  }\n}\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\nclass VideoTrack extends Track {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  constructor(options = {}) {\n    const settings = merge$1(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    super(settings);\n    let selected = false;\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(this, 'selected', {\n      get() {\n        return selected;\n      },\n      set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      this.selected = settings.selected;\n    }\n  }\n}\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\nclass HTMLTrackElement extends EventTarget$2 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param { import('../tech/tech').default } options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  constructor(options = {}) {\n    super();\n    let readyState;\n    const track = new TextTrack(options);\n    this.kind = track.kind;\n    this.src = track.src;\n    this.srclang = track.language;\n    this.label = track.label;\n    this.default = track.default;\n    Object.defineProperties(this, {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get() {\n          return readyState;\n        }\n      },\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get() {\n          return track;\n        }\n      }\n    });\n    readyState = HTMLTrackElement.NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', () => {\n      readyState = HTMLTrackElement.LOADED;\n      this.trigger({\n        type: 'load',\n        target: this\n      });\n    });\n  }\n}\n\n/**\n * @protected\n */\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\n/**\n * The text track not loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.NONE = 0;\n\n/**\n * The text track loading state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADING = 1;\n\n/**\n * The text track loaded state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.LOADED = 2;\n\n/**\n * The text track failed to load state.\n *\n * @type {number}\n * @static\n */\nHTMLTrackElement.ERROR = 3;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nconst NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = `${type}Tracks`;\n  NORMAL[type].privateName = `${type}Tracks_`;\n});\nconst REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nconst ALL = Object.assign({}, NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language, options = {}) {\n  const tracks = self.textTracks();\n  options.kind = kind;\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n  const track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\nclass Tech extends Component$1 {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options = {}, ready = function () {}) {\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    super(null, options, ready);\n    this.onDurationChange_ = e => this.onDurationChange(e);\n    this.trackProgress_ = e => this.trackProgress(e);\n    this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n    this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n    this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n    this.queuedHanders_ = new Set();\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    this.hasStarted_ = false;\n    this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      if (options && options[props.getterName]) {\n        this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/tech doesn't report it.\n    if (!this.featuresProgressEvents) {\n      this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/tech doesn't report it.\n    if (!this.featuresTimeupdateEvents) {\n      this.manualTimeUpdatesOn();\n    }\n    ['Text', 'Audio', 'Video'].forEach(track => {\n      if (options[`native${track}Tracks`] === false) {\n        this[`featuresNative${track}Tracks`] = false;\n      }\n    });\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      this.featuresNativeTextTracks = true;\n    }\n    if (!this.featuresNativeTextTracks) {\n      this.emulateTextTracks();\n    }\n    this.preloadTextTracks = options.preloadTextTracks !== false;\n    this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n    this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      this.emitTapEvents();\n    }\n    if (this.constructor) {\n      this.name_ = this.constructor.name || 'Unknown Tech';\n    }\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n  triggerSourceset(src) {\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {Event}\n     */\n    this.trigger({\n      src,\n      type: 'sourceset'\n    });\n  }\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind_(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      const numBufferedPercent = this.bufferedPercent();\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {Event}\n         */\n        this.trigger('progress');\n      }\n      this.bufferedPercent_ = numBufferedPercent;\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return { import('../utils/time').TimeRange }\n   *         The time range object that was created.\n   */\n  buffered() {\n    return createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n    super.dispose();\n  }\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  clearTracks(types) {\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(type => {\n      const list = this[`${type}Tracks`]() || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        if (type === 'text') {\n          this.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  }\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  cleanupAutoTextTracks() {\n    const list = this.autoRemoteTextTracks_ || [];\n    let i = list.length;\n    while (i--) {\n      const track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  reset() {}\n\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  crossOrigin() {}\n\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  setCrossOrigin() {}\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  }\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return { import('../utils/time').TimeRange }\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  played() {\n    if (this.hasStarted_) {\n      return createTimeRanges$1(0, 0);\n    }\n    return createTimeRanges$1();\n  }\n\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  play() {}\n\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   * @param {boolean} _isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   *\n   * @see {Html5#setScrubbing}\n   */\n  setScrubbing(_isScrubbing) {}\n\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  scrubbing() {}\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @param {number} _seconds\n   *        Set the current time of the media to this.\n   * @fires Tech#timeupdate\n   */\n  setCurrentTime(_seconds) {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  initTrackListeners() {\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {Event}\n      */\n    NORMAL.names.forEach(name => {\n      const props = NORMAL[name];\n      const trackListChanges = () => {\n        this.trigger(`${name}trackchange`);\n      };\n      const tracks = this[props.getterName]();\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n      this.on('dispose', () => {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  addWebVttScript_() {\n    if (window$1.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      const script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n      script.onload = () => {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjsloaded');\n      };\n      script.onerror = () => {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {Event}\n         */\n        this.trigger('vttjserror');\n      };\n      this.on('dispose', () => {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n\n  /**\n   * Emulate texttracks\n   *\n   */\n  emulateTextTracks() {\n    const tracks = this.textTracks();\n    const remoteTracks = this.remoteTextTracks();\n    const handleAddTrack = e => tracks.addTrack(e.track);\n    const handleRemoveTrack = e => tracks.removeTrack(e.track);\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n    const updateDisplay = () => this.trigger('texttrackchange');\n    const textTracksChanges = () => {\n      updateDisplay();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n    return createTrackHelper(this, kind, label, language);\n  }\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    const track = merge$1(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=false]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   */\n  addRemoteTextTrack(options = {}, manualCleanup) {\n    const htmlTrackElement = this.createRemoteTextTrack(options);\n    if (typeof manualCleanup !== 'boolean') {\n      manualCleanup = false;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n    if (manualCleanup === false) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  removeRemoteTextTrack(track) {\n    const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  getVideoPlaybackQuality() {\n    return {};\n  }\n\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  requestPictureInPicture() {\n    return Promise.reject();\n  }\n\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  disablePictureInPicture() {\n    return true;\n  }\n\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  setDisablePictureInPicture() {}\n\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  requestVideoFrameCallback(cb) {\n    const id = newGUID();\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', () => {\n        if (this.queuedHanders_.has(id)) {\n          this.queuedHanders_.delete(id);\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n    return id;\n  }\n\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_.delete(id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  setPoster() {}\n\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  playsinline() {}\n\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  setPlaysinline() {}\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeAudioTracks(override) {}\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  overrideNativeVideoTracks(override) {}\n\n  /**\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} _type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} _type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  static canPlayType(_type) {\n    return '';\n  }\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  static canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  static isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  static registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n    if (!Tech.isTech(tech)) {\n      throw new Error(`Tech ${name} must be a Tech`);\n    }\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  }\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  static getTech(name) {\n    if (!name) {\n      return;\n    }\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n    name = toTitleCase$1(name);\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n      return window$1.videojs[name];\n    }\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event.\n * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVideoFrameCallback = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    let handlers = _Tech.sourceHandlers;\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n      if (can) {\n        return can;\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    const handlers = _Tech.sourceHandlers || [];\n    let can;\n    for (let i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n      if (can) {\n        return handlers[i];\n      }\n    }\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    const sh = _Tech.selectSourceHandler(srcObj, options);\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  const deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    const originalFn = this[fnName];\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    let sh = _Tech.selectSourceHandler(source, this.options_);\n    if (!sh) {\n      // Fall back to a native source handler when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nconst middlewares = {};\nconst middlewareInstances = {};\nconst TERMINATOR = {};\n\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param { import('../player').default } player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  { import('../player').default } player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\nfunction setSource(player, src, next) {\n  player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n}\n\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param { import('../tech/tech').default } tech\n *        A Video.js tech.\n */\nfunction setTech(middleware, tech) {\n  middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {*}\n *         The final value from the tech after middleware has intercepted it.\n */\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`.\n */\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  { import('../tech/tech').default } tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {*} arg\n *         The value to set on the tech.\n *\n * @return {*}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\nfunction mediate(middleware, tech, method, arg = null) {\n  const callMethod = 'call' + toTitleCase$1(method);\n  const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  const terminated = middlewareValue === TERMINATOR;\n  // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n  const returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\nconst allowedMediators = {\n  play: 1,\n  pause: 1\n};\nfunction middlewareIterator(method) {\n  return (value, mw) => {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n    if (mw[method]) {\n      return mw[method](value);\n    }\n    return value;\n  };\n}\nfunction executeRight(mws, method, value, terminated) {\n  for (let i = mws.length - 1; i >= 0; i--) {\n    const mw = mws[i];\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\n/**\n * Clear the middleware cache for a player.\n *\n * @param  { import('../player').default } player\n *         A {@link Player} instance.\n */\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  const mws = middlewareInstances[player.id()];\n  let mw = null;\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n  for (let i = 0; i < mws.length; i++) {\n    const [mwf, mwi] = mws[i];\n    if (mwf !== mwFactory) {\n      continue;\n    }\n    mw = mwi;\n  }\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n  return mw;\n}\nfunction setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n  const [mwFactory, ...mwrest] = middleware;\n\n  // if mwFactory is a string, then we're at a fork in the road\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    const mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n    mw.setSource(Object.assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\nconst MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nconst getMimetype = function (src = '') {\n  const ext = getFileExtension(src);\n  const mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param { import('../player').default } player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nconst findMimetype = (player, src) => {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  const matchingSources = player.cache_.sources.filter(s => s.src === src);\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  const sources = player.$$('source');\n  for (let i = 0; i < sources.length; i++) {\n    const s = sources[i];\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nconst filterSource = function (src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    let newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  if (!src.type) {\n    const mimetype = getMimetype(src.src);\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n  return src;\n}\n\nvar icons = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n  <defs>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play\\\">\\n      <path d=\\\"M16 10v28l22-14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-pause\\\">\\n      <path d=\\\"M12 38h8V10h-8v28zm16-28v28h8V10h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-audio\\\">\\n      <path d=\\\"M24 2C14.06 2 6 10.06 6 20v14c0 3.31 2.69 6 6 6h6V24h-8v-4c0-7.73 6.27-14 14-14s14 6.27 14 14v4h-8v16h6c3.31 0 6-2.69 6-6V20c0-9.94-8.06-18-18-18z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-captions\\\">\\n      <path d=\\\"M38 8H10c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h28c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM22 22h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2zm14 0h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-subtitles\\\">\\n      <path d=\\\"M40 8H8c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM8 24h8v4H8v-4zm20 12H8v-4h20v4zm12 0h-8v-4h8v4zm0-8H20v-4h20v4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-enter\\\">\\n      <path d=\\\"M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-fullscreen-exit\\\">\\n      <path d=\\\"M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-play-circle\\\">\\n      <path d=\\\"M20 33l12-9-12-9v18zm4-29C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-mute\\\">\\n      <path d=\\\"M33 24c0-3.53-2.04-6.58-5-8.05v4.42l4.91 4.91c.06-.42.09-.85.09-1.28zm5 0c0 1.88-.41 3.65-1.08 5.28l3.03 3.03C41.25 29.82 42 27 42 24c0-8.56-5.99-15.72-14-17.54v4.13c5.78 1.72 10 7.07 10 13.41zM8.55 6L6 8.55 15.45 18H6v12h8l10 10V26.55l8.51 8.51c-1.34 1.03-2.85 1.86-4.51 2.36v4.13a17.94 17.94 0 0 0 7.37-3.62L39.45 42 42 39.45l-18-18L8.55 6zM24 8l-4.18 4.18L24 16.36V8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-low\\\">\\n      <path d=\\\"M14 18v12h8l10 10V8L22 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-medium\\\">\\n      <path d=\\\"M37 24c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zm-27-6v12h8l10 10V8L18 18h-8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-volume-high\\\">\\n      <path d=\\\"M6 18v12h8l10 10V8L14 18H6zm27 6c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zM28 6.46v4.13c5.78 1.72 10 7.07 10 13.41s-4.22 11.69-10 13.41v4.13c8.01-1.82 14-8.97 14-17.54S36.01 8.28 28 6.46z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-spinner\\\">\\n      <path d=\\\"M18.8 21l9.53-16.51C26.94 4.18 25.49 4 24 4c-4.8 0-9.19 1.69-12.64 4.51l7.33 12.69.11-.2zm24.28-3c-1.84-5.85-6.3-10.52-11.99-12.68L23.77 18h19.31zm.52 2H28.62l.58 1 9.53 16.5C41.99 33.94 44 29.21 44 24c0-1.37-.14-2.71-.4-4zm-26.53 4l-7.8-13.5C6.01 14.06 4 18.79 4 24c0 1.37.14 2.71.4 4h14.98l-2.31-4zM4.92 30c1.84 5.85 6.3 10.52 11.99 12.68L24.23 30H4.92zm22.54 0l-7.8 13.51c1.4.31 2.85.49 4.34.49 4.8 0 9.19-1.69 12.64-4.51L29.31 26.8 27.46 30z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 24 24\\\" id=\\\"vjs-icon-hd\\\">\\n      <path d=\\\"M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-chapters\\\">\\n      <path d=\\\"M6 26h4v-4H6v4zm0 8h4v-4H6v4zm0-16h4v-4H6v4zm8 8h28v-4H14v4zm0 8h28v-4H14v4zm0-20v4h28v-4H14z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 40 40\\\" id=\\\"vjs-icon-downloading\\\">\\n      <path d=\\\"M18.208 36.875q-3.208-.292-5.979-1.729-2.771-1.438-4.812-3.729-2.042-2.292-3.188-5.229-1.146-2.938-1.146-6.23 0-6.583 4.334-11.416 4.333-4.834 10.833-5.5v3.166q-5.167.75-8.583 4.646Q6.25 14.75 6.25 19.958q0 5.209 3.396 9.104 3.396 3.896 8.562 4.646zM20 28.417L11.542 20l2.083-2.083 4.917 4.916v-11.25h2.916v11.25l4.875-4.916L28.417 20zm1.792 8.458v-3.167q1.833-.25 3.541-.958 1.709-.708 3.167-1.875l2.333 2.292q-1.958 1.583-4.25 2.541-2.291.959-4.791 1.167zm6.791-27.792q-1.541-1.125-3.25-1.854-1.708-.729-3.541-1.021V3.042q2.5.25 4.77 1.208 2.271.958 4.271 2.5zm4.584 21.584l-2.25-2.25q1.166-1.5 1.854-3.209.687-1.708.937-3.541h3.209q-.292 2.5-1.229 4.791-.938 2.292-2.521 4.209zm.541-12.417q-.291-1.833-.958-3.562-.667-1.73-1.833-3.188l2.375-2.208q1.541 1.916 2.458 4.208.917 2.292 1.167 4.75z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download\\\">\\n      <path d=\\\"M10.8 40.55q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h26.35v-7.7h3.4v7.7q0 1.4-1 2.4t-2.4 1zM24 32.1L13.9 22.05l2.45-2.45 5.95 5.95V7.15h3.4v18.4l5.95-5.95 2.45 2.45z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-done\\\">\\n      <path d=\\\"M9.8 40.5v-3.45h28.4v3.45zm9.2-9.05L7.4 19.85l2.45-2.35L19 26.65l19.2-19.2 2.4 2.4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-file-download-off\\\">\\n      <path d=\\\"M4.9 4.75L43.25 43.1 41 45.3l-4.75-4.75q-.05.05-.075.025-.025-.025-.075-.025H10.8q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h22.05l-7-7-1.85 1.8L13.9 21.9l1.85-1.85L2.7 7zm26.75 14.7l2.45 2.45-3.75 3.8-2.45-2.5zM25.7 7.15V21.1l-3.4-3.45V7.15z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-share\\\">\\n      <path d=\\\"M36 32.17c-1.52 0-2.89.59-3.93 1.54L17.82 25.4c.11-.45.18-.92.18-1.4s-.07-.95-.18-1.4l14.1-8.23c1.07 1 2.5 1.62 4.08 1.62 3.31 0 6-2.69 6-6s-2.69-6-6-6-6 2.69-6 6c0 .48.07.95.18 1.4l-14.1 8.23c-1.07-1-2.5-1.62-4.08-1.62-3.31 0-6 2.69-6 6s2.69 6 6 6c1.58 0 3.01-.62 4.08-1.62l14.25 8.31c-.1.42-.16.86-.16 1.31A5.83 5.83 0 1 0 36 32.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cog\\\">\\n      <path d=\\\"M38.86 25.95c.08-.64.14-1.29.14-1.95s-.06-1.31-.14-1.95l4.23-3.31c.38-.3.49-.84.24-1.28l-4-6.93c-.25-.43-.77-.61-1.22-.43l-4.98 2.01c-1.03-.79-2.16-1.46-3.38-1.97L29 4.84c-.09-.47-.5-.84-1-.84h-8c-.5 0-.91.37-.99.84l-.75 5.3a14.8 14.8 0 0 0-3.38 1.97L9.9 10.1a1 1 0 0 0-1.22.43l-4 6.93c-.25.43-.14.97.24 1.28l4.22 3.31C9.06 22.69 9 23.34 9 24s.06 1.31.14 1.95l-4.22 3.31c-.38.3-.49.84-.24 1.28l4 6.93c.25.43.77.61 1.22.43l4.98-2.01c1.03.79 2.16 1.46 3.38 1.97l.75 5.3c.08.47.49.84.99.84h8c.5 0 .91-.37.99-.84l.75-5.3a14.8 14.8 0 0 0 3.38-1.97l4.98 2.01a1 1 0 0 0 1.22-.43l4-6.93c.25-.43.14-.97-.24-1.28l-4.22-3.31zM24 31c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-square\\\">\\n      <path d=\\\"M36 8H12c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm0 28H12V12h24v24z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle\\\">\\n      <circle cx=\\\"24\\\" cy=\\\"24\\\" r=\\\"20\\\"></circle>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-outline\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-circle-inner-circle\\\">\\n      <path d=\\\"M24 4C12.97 4 4 12.97 4 24s8.97 20 20 20 20-8.97 20-20S35.03 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm6-16c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6 6 2.69 6 6z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cancel\\\">\\n      <path d=\\\"M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm10 27.17L31.17 34 24 26.83 16.83 34 14 31.17 21.17 24 14 16.83 16.83 14 24 21.17 31.17 14 34 16.83 26.83 24 34 31.17z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-replay\\\">\\n      <path d=\\\"M24 10V2L14 12l10 10v-8c6.63 0 12 5.37 12 12s-5.37 12-12 12-12-5.37-12-12H8c0 8.84 7.16 16 16 16s16-7.16 16-16-7.16-16-16-16z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-repeat\\\">\\n      <path d=\\\"M14 14h20v6l8-8-8-8v6H10v12h4v-8zm20 20H14v-6l-8 8 8 8v-6h24V26h-4v8z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-5\\\">\\n      <path d=\\\"M17.689 98l-8.697 8.696 8.697 8.697 2.486-2.485-4.32-4.319h1.302c4.93 0 9.071 1.722 12.424 5.165 3.352 3.443 5.029 7.638 5.029 12.584h3.55c0-2.958-.553-5.73-1.658-8.313-1.104-2.583-2.622-4.841-4.555-6.774-1.932-1.932-4.19-3.45-6.773-4.555-2.584-1.104-5.355-1.657-8.313-1.657H15.5l4.615-4.615zm-8.08 21.659v13.861h11.357v5.008H9.609V143h12.7c.834 0 1.55-.298 2.146-.894.596-.597.895-1.31.895-2.145v-7.781c0-.835-.299-1.55-.895-2.147a2.929 2.929 0 0 0-2.147-.894h-8.227v-5.096H25.35v-4.384z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-10\\\">\\n      <path d=\\\"M42.315 125.63c0-4.997-1.694-9.235-5.08-12.713-3.388-3.479-7.571-5.218-12.552-5.218h-1.315l4.363 4.363-2.51 2.51-8.787-8.786L25.221 97l2.45 2.45-4.662 4.663h1.375c2.988 0 5.788.557 8.397 1.673 2.61 1.116 4.892 2.65 6.844 4.602 1.953 1.953 3.487 4.234 4.602 6.844 1.116 2.61 1.674 5.41 1.674 8.398zM8.183 142v-19.657H3.176V117.8h9.643V142zm13.63 0c-1.156 0-2.127-.393-2.912-1.178-.778-.778-1.168-1.746-1.168-2.902v-16.04c0-1.156.393-2.127 1.178-2.912.779-.779 1.746-1.168 2.902-1.168h7.696c1.156 0 2.126.392 2.911 1.177.779.78 1.168 1.747 1.168 2.903v16.04c0 1.156-.392 2.127-1.177 2.912-.779.779-1.746 1.168-2.902 1.168zm.556-4.636h6.583v-15.02H22.37z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-replay-30\\\">\\n      <path d=\\\"M26.047 97l-8.733 8.732 8.733 8.733 2.496-2.494-4.336-4.338h1.307c4.95 0 9.108 1.73 12.474 5.187 3.367 3.458 5.051 7.668 5.051 12.635h3.565c0-2.97-.556-5.751-1.665-8.346-1.109-2.594-2.633-4.862-4.574-6.802-1.94-1.941-4.208-3.466-6.803-4.575-2.594-1.109-5.375-1.664-8.345-1.664H23.85l4.634-4.634zM2.555 117.531v4.688h10.297v5.25H5.873v4.687h6.979v5.156H2.555V142H13.36c1.061 0 1.95-.395 2.668-1.186.718-.79 1.076-1.772 1.076-2.94v-16.218c0-1.168-.358-2.149-1.076-2.94-.717-.79-1.607-1.185-2.668-1.185zm22.482.14c-1.149 0-2.11.39-2.885 1.165-.78.78-1.172 1.744-1.172 2.893v15.943c0 1.149.388 2.11 1.163 2.885.78.78 1.745 1.172 2.894 1.172h7.649c1.148 0 2.11-.388 2.884-1.163.78-.78 1.17-1.745 1.17-2.894v-15.943c0-1.15-.386-2.111-1.16-2.885-.78-.78-1.746-1.172-2.894-1.172zm.553 4.518h6.545v14.93H25.59z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-5\\\">\\n      <path d=\\\"M29.508 97l-2.431 2.43 4.625 4.625h-1.364c-2.965 0-5.742.554-8.332 1.66-2.589 1.107-4.851 2.629-6.788 4.566-1.937 1.937-3.458 4.2-4.565 6.788-1.107 2.59-1.66 5.367-1.66 8.331h3.557c0-4.957 1.68-9.16 5.04-12.611 3.36-3.45 7.51-5.177 12.451-5.177h1.304l-4.326 4.33 2.49 2.49 8.715-8.716zm-9.783 21.61v13.89h11.382v5.018H19.725V142h12.727a2.93 2.93 0 0 0 2.15-.896 2.93 2.93 0 0 0 .896-2.15v-7.798c0-.837-.299-1.554-.896-2.152a2.93 2.93 0 0 0-2.15-.896h-8.245V123h11.29v-4.392z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-10\\\">\\n      <path d=\\\"M23.119 97l-2.386 2.383 4.538 4.538h-1.339c-2.908 0-5.633.543-8.173 1.63-2.54 1.085-4.76 2.577-6.66 4.478-1.9 1.9-3.392 4.12-4.478 6.66-1.085 2.54-1.629 5.264-1.629 8.172h3.49c0-4.863 1.648-8.986 4.944-12.372 3.297-3.385 7.368-5.078 12.216-5.078h1.279l-4.245 4.247 2.443 2.442 8.55-8.55zm-9.52 21.45v4.42h4.871V142h4.513v-23.55zm18.136 0c-1.125 0-2.066.377-2.824 1.135-.764.764-1.148 1.709-1.148 2.834v15.612c0 1.124.38 2.066 1.139 2.824.764.764 1.708 1.145 2.833 1.145h7.489c1.125 0 2.066-.378 2.824-1.136.764-.764 1.145-1.709 1.145-2.833v-15.612c0-1.125-.378-2.067-1.136-2.825-.764-.764-1.708-1.145-2.833-1.145zm.54 4.42h6.408v14.617h-6.407z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 96 48 48\\\" id=\\\"vjs-icon-forward-30\\\">\\n      <path d=\\\"M25.549 97l-2.437 2.434 4.634 4.635H26.38c-2.97 0-5.753.555-8.347 1.664-2.594 1.109-4.861 2.633-6.802 4.574-1.94 1.94-3.465 4.207-4.574 6.802-1.109 2.594-1.664 5.377-1.664 8.347h3.565c0-4.967 1.683-9.178 5.05-12.636 3.366-3.458 7.525-5.187 12.475-5.187h1.307l-4.335 4.338 2.495 2.494 8.732-8.732zm-11.553 20.53v4.689h10.297v5.249h-6.978v4.688h6.978v5.156H13.996V142h10.808c1.06 0 1.948-.395 2.666-1.186.718-.79 1.077-1.771 1.077-2.94v-16.217c0-1.169-.36-2.15-1.077-2.94-.718-.79-1.605-1.186-2.666-1.186zm21.174.168c-1.149 0-2.11.389-2.884 1.163-.78.78-1.172 1.745-1.172 2.894v15.942c0 1.15.388 2.11 1.162 2.885.78.78 1.745 1.17 2.894 1.17h7.649c1.149 0 2.11-.386 2.885-1.16.78-.78 1.17-1.746 1.17-2.895v-15.942c0-1.15-.387-2.11-1.161-2.885-.78-.78-1.745-1.172-2.894-1.172zm.552 4.516h6.542v14.931h-6.542z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 512 512\\\" id=\\\"vjs-icon-audio-description\\\">\\n      <g fill-rule=\\\"evenodd\\\"><path d=\\\"M227.29 381.351V162.993c50.38-1.017 89.108-3.028 117.631 17.126 27.374 19.342 48.734 56.965 44.89 105.325-4.067 51.155-41.335 94.139-89.776 98.475-24.085 2.155-71.972 0-71.972 0s-.84-1.352-.773-2.568m48.755-54.804c31.43 1.26 53.208-16.633 56.495-45.386 4.403-38.51-21.188-63.552-58.041-60.796v103.612c-.036 1.466.575 2.22 1.546 2.57\\\"></path><path d=\\\"M383.78 381.328c13.336 3.71 17.387-11.06 23.215-21.408 12.722-22.571 22.294-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.226 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M425.154 381.328c13.336 3.71 17.384-11.061 23.215-21.408 12.721-22.571 22.291-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.511c-.586 3.874 2.226 7.315 3.866 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894\\\"></path><path d=\\\"M466.26 381.328c13.337 3.71 17.385-11.061 23.216-21.408 12.722-22.571 22.292-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.225 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894M4.477 383.005H72.58l18.573-28.484 64.169-.135s.065 19.413.065 28.62h48.756V160.307h-58.816c-5.653 9.537-140.85 222.697-140.85 222.697zm152.667-145.282v71.158l-40.453-.27 40.453-70.888z\\\"></path></g>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-next-item\\\">\\n      <path d=\\\"M12 36l17-12-17-12v24zm20-24v24h4V12h-4z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-previous-item\\\">\\n      <path d=\\\"M12 12h4v24h-4zm7 12l17 12V12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-shuffle\\\">\\n      <path d=\\\"M21.17 18.34L10.83 8 8 10.83l10.34 10.34 2.83-2.83zM29 8l4.09 4.09L8 37.17 10.83 40l25.09-25.09L40 19V8H29zm.66 18.83l-2.83 2.83 6.26 6.26L29 40h11V29l-4.09 4.09-6.25-6.26z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-cast\\\">\\n      <path d=\\\"M42 6H6c-2.21 0-4 1.79-4 4v6h4v-6h36v28H28v4h14c2.21 0 4-1.79 4-4V10c0-2.21-1.79-4-4-4zM2 36v6h6c0-3.31-2.69-6-6-6zm0-8v4c5.52 0 10 4.48 10 10h4c0-7.73-6.27-14-14-14zm0-8v4c9.94 0 18 8.06 18 18h4c0-12.15-9.85-22-22-22z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 48 48\\\" id=\\\"vjs-icon-picture-in-picture-enter\\\">\\n      <path d=\\\"M38 22H22v11.99h16V22zm8 16V9.96C46 7.76 44.2 6 42 6H6C3.8 6 2 7.76 2 9.96V38c0 2.2 1.8 4 4 4h36c2.2 0 4-1.8 4-4zm-4 .04H6V9.94h36v28.1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 22 18\\\" id=\\\"vjs-icon-picture-in-picture-exit\\\">\\n      <path d=\\\"M18 4H4v10h14V4zm4 12V1.98C22 .88 21.1 0 20 0H2C.9 0 0 .88 0 1.98V16c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H2V1.97h18v14.05z\\\"></path>\\n      <path fill=\\\"none\\\" d=\\\"M-1-3h24v24H-1z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-facebook\\\">\\n      <path d=\\\"M1343 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759H734V905H479V609h255V391q0-186 104-288.5T1115 0q147 0 228 12z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-linkedin\\\">\\n      <path d=\\\"M477 625v991H147V625h330zm21-306q1 73-50.5 122T312 490h-2q-82 0-132-49t-50-122q0-74 51.5-122.5T314 148t133 48.5T498 319zm1166 729v568h-329v-530q0-105-40.5-164.5T1168 862q-63 0-105.5 34.5T999 982q-11 30-11 81v553H659q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5T1285 602q171 0 275 113.5t104 332.5z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-twitter\\\">\\n      <path d=\\\"M1684 408q-67 98-162 167 1 14 1 42 0 130-38 259.5T1369.5 1125 1185 1335.5t-258 146-323 54.5q-271 0-496-145 35 4 78 4 225 0 401-138-105-2-188-64.5T285 1033q33 5 61 5 43 0 85-11-112-23-185.5-111.5T172 710v-4q68 38 146 41-66-44-105-115t-39-154q0-88 44-163 121 149 294.5 238.5T884 653q-8-38-8-74 0-134 94.5-228.5T1199 256q140 0 236 102 109-21 205-78-37 115-142 178 93-10 186-50z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-tumblr\\\">\\n      <path d=\\\"M1328 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26T787 1564t-95-106-55.5-120-16.5-118V676H452V461q72-26 129-69.5t91-90 58-102 34-99T779 12q1-5 4.5-8.5T791 0h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z\\\"></path>\\n    </symbol>\\n    <symbol viewBox=\\\"0 0 1792 1792\\\" id=\\\"vjs-icon-pinterest\\\">\\n      <path d=\\\"M1664 896q0 209-103 385.5T1281.5 1561 896 1664q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214T1180 449t-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5T377 866q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5T904 517q151 0 235.5 82t84.5 213q0 170-68.5 289T980 1220q-61 0-98-43.5T859 1072q8-35 26.5-93.5t30-103T927 800q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281T128 896q0-209 103-385.5T510.5 231 896 128t385.5 103T1561 510.5 1664 896z\\\"></path>\\n    </symbol>\\n  </defs>\\n</svg>\";\n\n/**\n * @file loader.js\n */\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\nclass MediaLoader extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function that is run when this component is ready.\n   */\n  constructor(player, options, ready) {\n    // MediaLoader has no element\n    const options_ = merge$1({\n      createEl: false\n    }, options);\n    super(player, options_, ready);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        const techName = toTitleCase$1(j[i]);\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n  }\n}\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file clickable-component.js\n */\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\nclass ClickableComponent extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  { import('./player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (this.options_.controlText) {\n      this.controlText(this.options_.controlText);\n    }\n    this.handleMouseOver_ = e => this.handleMouseOver(e);\n    this.handleMouseOut_ = e => this.handleMouseOut(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.emitTapEvents();\n    this.enable();\n  }\n\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    props = Object.assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n    if (tag === 'button') {\n      log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = Object.assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    const el = createEl(tag, props, attributes);\n    if (!this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n    }\n    this.createControlTextEl(el);\n    return el;\n  }\n  dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.el()) {\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n    const localizedText = this.localize(text);\n\n    /** @protected */\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-control vjs-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Enable this `ClickableComponent`\n   */\n  enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n\n  /**\n   * Disable this `ClickableComponent`\n   */\n  disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\nclass PosterImage extends ClickableComponent {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update();\n    this.update_ = e => this.update(e);\n    player.on('posterchange', this.update_);\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n  dispose() {\n    this.player().off('posterchange', this.update_);\n    super.dispose();\n  }\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    // The el is an empty div to keep position in the DOM\n    // A picture and img el will be inserted when a source is set\n    return createEl('div', {\n      className: 'vjs-poster'\n    });\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossOrigin option.\n   *\n   * @param {string|null} [value]\n   *        The value to set the crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      if (this.$('img')) {\n        // If the poster's element exists, give its value\n        return this.$('img').crossOrigin;\n      } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n        // If not but the tech is ready, query the tech\n        return this.player_.crossOrigin();\n      }\n      // Otherwise check options as the  poster is usually set before the state of crossorigin\n      // can be retrieved by the getter\n      return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    if (this.$('img')) {\n      this.$('img').crossOrigin = value;\n    }\n    return;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  update(event) {\n    const url = this.player().poster();\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method. (Re)creates\n   * the inner picture and img elementss when needed.\n   *\n   * @param {string} [url]\n   *        The URL to the source for the `PosterImage`. If not specified or falsy,\n   *        any source and ant inner picture/img are removed.\n   */\n  setSrc(url) {\n    if (!url) {\n      this.el_.textContent = '';\n      return;\n    }\n    if (!this.$('img')) {\n      this.el_.appendChild(createEl('picture', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      }, {}, createEl('img', {\n        loading: 'lazy',\n        crossOrigin: this.crossOrigin()\n      }, {\n        alt: ''\n      })));\n    }\n    this.$('img').src = url;\n  }\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n}\n\n/**\n * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n * behavior.\n *\n * @param {string|null} [value]\n *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|null|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\nComponent$1.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nconst darkGray = '#222';\nconst lightGray = '#ccc';\nconst fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  let hex;\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * Converts the CSS top/right/bottom/left property numeric value to string in pixels.\n *\n * @param {number} position\n *        The CSS top/right/bottom/left property value.\n *\n * @return {string}\n *          The CSS property value that was created, like '10px'.\n *\n * @private\n */\nfunction getCSSPositionValue(position) {\n  return position ? `${position}px` : '';\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\nclass TextTrackDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    const updateDisplayTextHandler = e => this.updateDisplay(e);\n    const updateDisplayHandler = e => {\n      this.updateDisplayOverlay();\n      this.updateDisplay(e);\n    };\n    player.on('loadstart', e => this.toggleDisplay(e));\n    player.on('texttrackchange', updateDisplayTextHandler);\n    player.on('loadedmetadata', e => {\n      this.updateDisplayOverlay();\n      this.preselectTrack(e);\n    });\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind_(this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      const screenOrientation = window$1.screen.orientation || window$1;\n      const changeOrientationEvent = window$1.screen.orientation ? 'change' : 'orientationchange';\n      screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n      player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n      const tracks = this.options_.playerOptions.tracks || [];\n      for (let i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n      this.preselectTrack();\n    }));\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n  preselectTrack() {\n    const modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    const trackList = this.player_.textTracks();\n    const userPref = this.player_.cache_.selectedLanguage;\n    let firstDesc;\n    let firstCaptions;\n    let preferredTrack;\n    for (let i = 0; i < trackList.length; i++) {\n      const track = trackList[i];\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track.default) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  updateDisplay() {\n    const tracks = this.player_.textTracks();\n    const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n    if (allowMultipleShowingTracks) {\n      const showingTracks = [];\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        if (track.mode !== 'showing') {\n          continue;\n        }\n        showingTracks.push(track);\n      }\n      this.updateForTrack(showingTracks);\n      return;\n    }\n\n    //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    let descriptionsTrack = null;\n    let captionsSubtitlesTrack = null;\n    let i = tracks.length;\n    while (i--) {\n      const track = tracks[i];\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n\n  /**\n   * Updates the displayed TextTrack to be sure it overlays the video when a either\n   * a {@link Player#texttrackchange} or a {@link Player#fullscreenchange} is fired.\n   */\n  updateDisplayOverlay() {\n    // inset-inline and inset-block are not supprted on old chrome, but these are\n    // only likely to be used on TV devices\n    if (!this.player_.videoHeight() || !window$1.CSS.supports('inset-inline: 10px')) {\n      return;\n    }\n    const playerWidth = this.player_.currentWidth();\n    const playerHeight = this.player_.currentHeight();\n    const playerAspectRatio = playerWidth / playerHeight;\n    const videoAspectRatio = this.player_.videoWidth() / this.player_.videoHeight();\n    let insetInlineMatch = 0;\n    let insetBlockMatch = 0;\n    if (Math.abs(playerAspectRatio - videoAspectRatio) > 0.1) {\n      if (playerAspectRatio > videoAspectRatio) {\n        insetInlineMatch = Math.round((playerWidth - playerHeight * videoAspectRatio) / 2);\n      } else {\n        insetBlockMatch = Math.round((playerHeight - playerWidth / videoAspectRatio) / 2);\n      }\n    }\n    tryUpdateStyle(this.el_, 'insetInline', getCSSPositionValue(insetInlineMatch));\n    tryUpdateStyle(this.el_, 'insetBlock', getCSSPositionValue(insetBlockMatch));\n  }\n\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  updateDisplayState(track) {\n    const overrides = this.player_.textTrackSettings.getValues();\n    const cues = track.activeCues;\n    let i = cues.length;\n    while (i--) {\n      const cue = cues[i];\n      if (!cue) {\n        continue;\n      }\n      const cueDiv = cue.displayState;\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        const fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(track => {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n    const cues = [];\n\n    // push all active track cues\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    }\n\n    // removes all cues before it processes new ones\n    window$1.WebVTT.processCues(window$1, cues, this.el_);\n\n    // add unique class to each language text track & add settings styling if necessary\n    for (let i = 0; i < tracks.length; ++i) {\n      const track = tracks[i];\n      for (let j = 0; j < track.activeCues.length; ++j) {\n        const cueEl = track.activeCues[j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n        if (track.language) {\n          setAttribute(cueEl, 'lang', track.language);\n        }\n      }\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(track);\n      }\n    }\n  }\n}\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\nclass LoadingSpinner extends Component$1 {\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  createEl() {\n    const isAudio = this.player_.isAudio();\n    const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    const controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n    const el = super.createEl('div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n    el.appendChild(controlText);\n    return el;\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-control-text').textContent = this.localize('{1} is loading.', [this.player_.isAudio() ? 'Audio Player' : 'Video Player']);\n  }\n}\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\nclass Button extends ClickableComponent {\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(tag, props = {}, attributes = {}) {\n    tag = 'button';\n    props = Object.assign({\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = Object.assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    const el = createEl(tag, props, attributes);\n    if (!this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n    }\n    this.createControlTextEl(el);\n    return el;\n  }\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  addChild(child, options = {}) {\n    const className = this.constructor.name;\n    log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  enable() {\n    super.enable();\n    this.el_.removeAttribute('disabled');\n  }\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  disable() {\n    super.disable();\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {KeyboardEvent} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    super.handleKeyDown(event);\n  }\n}\nComponent$1.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\nclass BigPlayButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.mouseused_ = false;\n    this.setIcon('play');\n    this.on('mousedown', e => this.handleMouseDown(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n  buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {KeyboardEvent|MouseEvent|TouchEvent} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && 'clientX' in event && 'clientY' in event) {\n      silencePromise(playPromise);\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      return;\n    }\n    const cb = this.player_.getChild('controlBar');\n    const playToggle = cb && cb.getChild('playToggle');\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n    const playFocus = () => playToggle.focus();\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, () => {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  }\n\n  /**\n   * Event handler that is called when a `BigPlayButton` receives a\n   * `keydown` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    this.mouseused_ = false;\n    super.handleKeyDown(event);\n  }\n\n  /**\n   * Handle `mousedown` events on the `BigPlayButton`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    this.mouseused_ = true;\n  }\n}\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n */\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\nclass CloseButton extends Button {\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  { import('./player').default } player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('cancel');\n    this.controlText(options && options.controlText || this.localize('Close'));\n  }\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-close-button ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n}\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\nclass PlayToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // show or hide replay icon\n    options.replay = options.replay === undefined || options.replay;\n    this.setIcon('play');\n    this.on(player, 'play', e => this.handlePlay(e));\n    this.on(player, 'pause', e => this.handlePause(e));\n    if (options.replay) {\n      this.on(player, 'ended', e => this.handleEnded(e));\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-play-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  handleSeeked(event) {\n    this.removeClass('vjs-ended');\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  handlePlay(event) {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.setIcon('pause');\n    this.controlText('Pause');\n  }\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.setIcon('play');\n    this.controlText('Play');\n  }\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.setIcon('replay');\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n  }\n}\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file time-display.js\n */\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\nclass TimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, ['timeupdate', 'ended', 'seeking'], e => this.update(e));\n    this.updateTextNode_();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const className = this.buildCSSClass();\n    const el = super.createEl('div', {\n      className: `${className} vjs-time-control vjs-control`\n    });\n    const span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize(this.labelText_)}\\u00a0`\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: `${className}-display`\n    }, {\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      role: 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Updates the displayed time according to the `updateContent` function which is defined in the child class.\n   *\n   * @param {Event} [event]\n   *          The `timeupdate`, `ended` or `seeking` (if enableSmoothSeeking is true) event that caused this function to be called.\n   */\n  update(event) {\n    if (!this.player_.options_.enableSmoothSeeking && event.type === 'seeking') {\n      return;\n    }\n    this.updateContent(event);\n  }\n\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  updateTextNode_(time = 0) {\n    time = formatTime(time);\n    if (this.formattedTime_ === time) {\n      return;\n    }\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n      if (!this.contentEl_) {\n        return;\n      }\n      let oldNode = this.textNode_;\n      if (oldNode && this.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n      this.textNode_ = document.createTextNode(this.formattedTime_);\n      if (!this.textNode_) {\n        return;\n      }\n      if (oldNode) {\n        this.contentEl_.replaceChild(this.textNode_, oldNode);\n      } else {\n        this.contentEl_.appendChild(this.textNode_);\n      }\n    });\n  }\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {}\n}\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\nclass CurrentTimeDisplay extends TimeDisplay {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-current-time';\n  }\n\n  /**\n   * Update current time display\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    let time;\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\nclass DurationDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    const updateContent = e => this.updateContent(e);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    this.on(player, 'durationchange', updateContent);\n\n    // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n    this.on(player, 'loadstart', updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    this.on(player, 'loadedmetadata', updateContent);\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-duration';\n  }\n\n  /**\n   * Update duration time display.\n   *\n   * @param {Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  updateContent(event) {\n    const duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  }\n}\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\nclass TimeDivider extends Component$1 {\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n    const div = super.createEl('div');\n    const span = super.createEl('span', {\n      textContent: '/'\n    });\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  }\n}\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\nclass RemainingTimeDisplay extends TimeDisplay {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'durationchange', e => this.updateContent(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" character prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n    return el;\n  }\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n    let time;\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n    this.updateTextNode_(time);\n  }\n}\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @protected\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass LiveDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateShowing();\n    this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-live-control vjs-control'\n    });\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: `${this.localize('Stream Type')}\\u00a0`\n    }));\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n}\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file seek-to-live.js\n */\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\nclass SeekToLive extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.updateLiveEdgeStatus();\n    if (this.player_.liveTracker) {\n      this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n      this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n    this.setIcon('circle', el);\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n\n  /**\n   * Dispose of the element and stop tracking\n   */\n  dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n    this.textEl_ = null;\n    super.dispose();\n  }\n}\n/**\n * The text that should display over the `SeekToLive`s control. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * @file num.js\n * @module num\n */\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nfunction clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n}\n\nvar Num = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  clamp: clamp\n});\n\n/**\n * @file slider.js\n */\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\nclass Slider extends Component$1 {\n  /**\n  * Create an instance of this class\n  *\n  * @param { import('../player').default } player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseDown_ = e => this.handleMouseDown(e);\n    this.handleMouseUp_ = e => this.handleMouseUp(e);\n    this.handleKeyDown_ = e => this.handleKeyDown(e);\n    this.handleClick_ = e => this.handleClick(e);\n    this.handleMouseMove_ = e => this.handleMouseMove(e);\n    this.update_ = e => this.update(e);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    this.bar = this.getChild(this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    this.vertical(!!this.options_.vertical);\n    this.enable();\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  enable() {\n    if (this.enabled()) {\n      return;\n    }\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_);\n\n    // TODO: deprecated, controlsvisible does not seem to be fired\n    this.on(this.player_, 'controlsvisible', this.update);\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    const doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  }\n\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props = {}, attributes = {}) {\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = Object.assign({\n      tabIndex: 0\n    }, props);\n    attributes = Object.assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100\n    }, attributes);\n    return super.createEl(type, props, attributes);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  handleMouseDown(event) {\n    const doc = this.bar.el_.ownerDocument;\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintended scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {MouseEvent}\n     */\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {MouseEvent} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseMove(event) {}\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {MouseEvent} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  handleMouseUp(event) {\n    const doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {Event}\n     */\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    }\n\n    // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n    const progress = this.getProgress();\n    if (progress === this.progress_) {\n      return progress;\n    }\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', () => {\n      // Set the new bar width or height\n      const sizeKey = this.vertical() ? 'height' : 'width';\n\n      // Convert to a percentage for css value\n      this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  calculateDistance(event) {\n    const position = getPointerPosition(this.el_, event);\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  }\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, right, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {KeyboardEvent} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n    this.vertical_ = !!bool;\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  }\n}\nComponent$1.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n\n// get the percent width of a time compared to the total end\nconst percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\nclass LoadProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.partEls_ = [];\n    this.on(player, 'progress', e => this.update(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-load-progress'\n    });\n    const wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    const loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    const separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  }\n  dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Update progress bar\n   *\n   * @param {Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  update(event) {\n    this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n      const liveTracker = this.player_.liveTracker;\n      const buffered = this.player_.buffered();\n      const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n      const bufferedEnd = this.player_.bufferedEnd();\n      const children = this.partEls_;\n      const percent = percentify(bufferedEnd, duration);\n      if (this.percent_ !== percent) {\n        // update the width of the progress bar\n        this.el_.style.width = percent;\n        // update the control-text\n        textContent(this.percentageEl_, percent);\n        this.percent_ = percent;\n      }\n\n      // add child elements to represent the individual buffered time ranges\n      for (let i = 0; i < buffered.length; i++) {\n        const start = buffered.start(i);\n        const end = buffered.end(i);\n        let part = children[i];\n        if (!part) {\n          part = this.el_.appendChild(createEl());\n          children[i] = part;\n        }\n\n        //  only update if changed\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n        part.dataset.start = start;\n        part.dataset.end = end;\n\n        // set the percent based on the width of the progress bar (bufferedEnd)\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      }\n\n      // remove unused buffered range elements\n      for (let i = children.length; i > buffered.length; i--) {\n        this.el_.removeChild(children[i - 1]);\n      }\n      children.length = buffered.length;\n    });\n  }\n}\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\nclass TimeTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint, content) {\n    const tooltipRect = findPosition(this.el_);\n    const playerRect = getBoundingClientRect(this.player_.el());\n    const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    let pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = `-${pullTooltipBy}px`;\n    this.write(content);\n  }\n\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateTime(seekBarRect, seekBarPoint, time, cb) {\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n      let content;\n      const duration = this.player_.duration();\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        const liveWindow = this.player_.liveTracker.liveWindow();\n        const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n      this.update(seekBarRect, seekBarPoint, content);\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass PlayProgressBar extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('circle');\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const timeTooltip = this.getChild('timeTooltip');\n    if (!timeTooltip) {\n      return;\n    }\n    const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  }\n}\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\nclass MouseTimeDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  update(seekBarRect, seekBarPoint) {\n    const time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n      this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n    });\n  }\n}\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n\n// The number of seconds the `step*` functions move the timeline.\nconst STEP_SECONDS = 5;\n\n// The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\nconst PAGE_KEY_MULTIPLIER = 12;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\nclass SeekBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setEventHandlers_();\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n  setEventHandlers_() {\n    this.update_ = bind_(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n    this.enableIntervalHandler_ = e => this.enableInterval_(e);\n    this.disableIntervalHandler_ = e => this.disableInterval_(e);\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  }\n  toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      }\n\n      // we just switched back to the page and someone may be looking, so, update ASAP\n      this.update();\n    }\n  }\n  enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  }\n  disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n    if (!this.updateInterval) {\n      return;\n    }\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  update(event) {\n    // ignore updates while the tab is hidden\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n    const percent = super.update();\n    this.requestNamedAnimationFrame('SeekBar#update', () => {\n      const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n      const liveTracker = this.player_.liveTracker;\n      let duration = this.player_.duration();\n      if (liveTracker && liveTracker.isLive()) {\n        duration = this.player_.liveTracker.liveCurrentTime();\n      }\n      if (this.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n        this.percent_ = percent;\n      }\n      if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n        this.currentTime_ = currentTime;\n        this.duration_ = duration;\n      }\n\n      // update the progress bar time tooltip with the current time\n      if (this.bar) {\n        this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n      }\n    });\n    return percent;\n  }\n\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n    this.player_.currentTime(ct);\n  }\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  getPercent() {\n    const currentTime = this.getCurrentTime_();\n    let percent;\n    const liveTracker = this.player_.liveTracker;\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n      // prevent the percent from changing at the live edge\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n    return percent;\n  }\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event, mouseDown = false) {\n    if (!isSingleLeftClick(event) || isNaN(this.player_.duration())) {\n      return;\n    }\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n    let newTime;\n    const distance = this.calculateDistance(event);\n    const liveTracker = this.player_.liveTracker;\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration();\n\n      // Don't let video end while scrubbing.\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n      const seekableStart = liveTracker.seekableStart();\n      const seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow();\n\n      // Don't let video end while scrubbing.\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      }\n\n      // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      }\n\n      // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n      if (newTime === Infinity) {\n        return;\n      }\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.userSeek_(newTime);\n    if (this.player_.options_.enableSmoothSeeking) {\n      this.update();\n    }\n  }\n  enable() {\n    super.enable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.show();\n  }\n  disable() {\n    super.disable();\n    const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n    if (!mouseTimeDisplay) {\n      return;\n    }\n    mouseTimeDisplay.hide();\n  }\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {MouseEvent} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    super.handleMouseUp(event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {Event}\n     */\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const liveTracker = this.player_.liveTracker;\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n    // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n    super.dispose();\n  }\n}\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\nclass ProgressControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n    this.enable();\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  handleMouseMove(event) {\n    const seekBar = this.getChild('seekBar');\n    if (!seekBar) {\n      return;\n    }\n    const playProgressBar = seekBar.getChild('playProgressBar');\n    const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n    const seekBarEl = seekBar.el();\n    const seekBarRect = findPosition(seekBarEl);\n    let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n    // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  handleMouseSeek(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  enabled() {\n    return this.enabled_;\n  }\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  disable() {\n    this.children().forEach(child => child.disable && child.disable());\n    if (!this.enabled()) {\n      return;\n    }\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false;\n\n    // Restore normal playback state if controls are disabled while scrubbing\n    if (this.player_.scrubbing()) {\n      const seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  enable() {\n    this.children().forEach(child => child.enable && child.enable());\n    if (this.enabled()) {\n      return;\n    }\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  removeListenersAddedOnMousedownAndTouchstart() {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const seekBar = this.getChild('seekBar');\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  }\n}\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file picture-in-picture-toggle.js\n */\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\nclass PictureInPictureToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('picture-in-picture-enter');\n    this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n    this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n    this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => this.handlePictureInPictureAudioModeChange());\n\n    // TODO: Deactivate button on player emptied event.\n    this.disable();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-picture-in-picture-control vjs-hidden ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Displays or hides the button depending on the audio mode detection.\n   * Exits picture-in-picture if it is enabled when switching to audio mode.\n   */\n  handlePictureInPictureAudioModeChange() {\n    // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n    const isSourceAudio = this.player_.currentType().substring(0, 5) === 'audio';\n    const isAudioMode = isSourceAudio || this.player_.audioPosterMode() || this.player_.audioOnlyMode();\n    if (!isAudioMode) {\n      this.show();\n      return;\n    }\n    if (this.player_.isInPictureInPicture()) {\n      this.player_.exitPictureInPicture();\n    }\n    this.hide();\n  }\n\n  /**\n   * Enables or disables button based on availability of a Picture-In-Picture mode.\n   *\n   * Enabled if\n   * - `player.options().enableDocumentPictureInPicture` is true and\n   *   window.documentPictureInPicture is available; or\n   * - `player.disablePictureInPicture()` is false and\n   *   element.requestPictureInPicture is available\n   */\n  handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false || this.player_.options_.enableDocumentPictureInPicture && 'documentPictureInPicture' in window$1) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.setIcon('picture-in-picture-exit');\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.setIcon('picture-in-picture-enter');\n      this.controlText('Picture-in-Picture');\n    }\n    this.handlePictureInPictureEnabledChange();\n  }\n\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it only in browsers that support the Picture-in-Picture API.\n   */\n  show() {\n    // Does not allow to display the pictureInPictureToggle in browsers that do not support the Picture-in-Picture API, e.g. Firefox.\n    if (typeof document.exitPictureInPicture !== 'function') {\n      return;\n    }\n    super.show();\n  }\n}\n\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * @file fullscreen-toggle.js\n */\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\nclass FullscreenToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.setIcon('fullscreen-enter');\n    this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      this.disable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Exit Fullscreen');\n      this.setIcon('fullscreen-exit');\n    } else {\n      this.controlText('Fullscreen');\n      this.setIcon('fullscreen-enter');\n    }\n  }\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  }\n}\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param { import('../../component').default } self\n *        The component that should be hidden if volume is unsupported\n *\n * @param { import('../../player').default } player\n *        A reference to the player\n *\n * @private\n */\nconst checkVolumeSupport = function (self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\nclass VolumeLevel extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl('div', {\n      className: 'vjs-volume-level'\n    });\n    this.setIcon('circle', el);\n    el.appendChild(super.createEl('span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  }\n}\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-level-tooltip.js\n */\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\nclass VolumeLevelTooltip extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      const tooltipRect = getBoundingClientRect(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n      const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      let pullTooltipBy = tooltipRect.width / 2;\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n      this.el_.style.right = `-${pullTooltipBy}px`;\n    }\n    this.write(`${content}%`);\n  }\n\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  write(content) {\n    textContent(this.el_, content);\n  }\n\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n      this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * @file mouse-volume-level-display.js\n */\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\nclass MouseVolumeLevelDisplay extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  update(rangeBarRect, rangeBarPoint, vertical) {\n    const volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n      if (vertical) {\n        this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n      } else {\n        this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n      }\n    });\n  }\n}\n\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * @file volume-bar.js\n */\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\nclass VolumeBar extends Slider {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on('slideractive', e => this.updateLastVolume_(e));\n    this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n    player.ready(() => this.updateARIAAttributes());\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    super.handleMouseDown(event);\n  }\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  handleMouseMove(event) {\n    const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n    if (mouseVolumeLevelDisplay) {\n      const volumeBarEl = this.el();\n      const volumeBarRect = getBoundingClientRect(volumeBarEl);\n      const vertical = this.vertical();\n      let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n      // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n\n  /**\n   * If the player is muted unmute it.\n   */\n  checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  }\n\n  /**\n   * Increase volume level for keyboard users\n   */\n  stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n  stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  updateARIAAttributes(event) {\n    const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  updateLastVolume_() {\n    const volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', () => {\n      if (this.player_.volume() === 0) {\n        this.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  }\n}\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n// MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\nclass VolumeControl extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkVolumeSupport(this, player);\n    this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n    this.on('mousedown', e => this.handleMouseDown(e));\n    this.on('touchstart', e => this.handleMouseDown(e));\n    this.on('mousemove', e => this.handleMouseMove(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n      this.volumeBar.addClass('vjs-slider-active');\n      this.addClass('vjs-slider-active');\n      this.trigger('slideractive');\n    });\n    this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n      this.volumeBar.removeClass('vjs-slider-active');\n      this.removeClass('vjs-slider-active');\n      this.trigger('sliderinactive');\n    });\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-horizontal';\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-control vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseDown(event) {\n    const doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  handleMouseUp(event) {\n    const doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param { import('../../component').default } self\n *        A reference to the mute toggle button\n *\n * @param { import('../../player').default } player\n *        A reference to the player\n *\n * @private\n */\nconst checkMuteSupport = function (self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\nclass MuteToggle extends Button {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n\n    // hide this control if volume support is missing\n    checkMuteSupport(this, player);\n    this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-mute-control ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const vol = this.player_.volume();\n    const lastVolume = this.player_.lastVolume_();\n    if (vol === 0) {\n      const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  updateIcon_() {\n    const vol = this.player_.volume();\n    let level = 3;\n    this.setIcon('volume-high');\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n    if (vol === 0 || this.player_.muted()) {\n      this.setIcon('volume-mute');\n      level = 0;\n    } else if (vol < 0.33) {\n      this.setIcon('volume-low');\n      level = 1;\n    } else if (vol < 0.67) {\n      this.setIcon('volume-medium');\n      level = 2;\n    }\n    removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n    addClass(this.el_, `vjs-vol-${level}`);\n  }\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  updateControlText_() {\n    const soundOff = this.player_.muted() || this.player_.volume() === 0;\n    const text = soundOff ? 'Unmute' : 'Mute';\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  }\n}\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\nclass VolumePanel extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n    super(player, options);\n\n    // this handler is used by mouse handler methods below\n    this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n    this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n    this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n    this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n    this.on('keydown', e => this.handleKeyPress(e));\n    this.on('mouseover', e => this.handleMouseOver(e));\n    this.on('mouseout', e => this.handleMouseOut(e));\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n    this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n  sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    let orientationClass = 'vjs-volume-panel-horizontal';\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n    return super.createEl('div', {\n      className: `vjs-volume-panel vjs-control ${orientationClass}`\n    });\n  }\n\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  dispose() {\n    this.handleMouseOut();\n    super.dispose();\n  }\n\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  }\n}\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * Button to skip forward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n * e.g. options: {controlBar: {skipButtons: forward: 5}}\n *\n * @extends Button\n */\nclass SkipForward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipForwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.setIcon(`forward-${this.skipTime}`);\n      this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipForwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.forward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-forward-${this.getSkipForwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips forward in the duration/seekable range by a configurable amount of seconds.\n   * If the time left in the duration/seekable range is less than the configured 'skip forward' time,\n   * skips to end of duration/seekable range.\n   *\n   * Handle a click on a `SkipForward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    if (isNaN(this.player_.duration())) {\n      return;\n    }\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    let newTime;\n    if (currentVideoTime + this.skipTime <= duration) {\n      newTime = currentVideoTime + this.skipTime;\n    } else {\n      newTime = duration;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip forward {1} seconds', [this.skipTime]));\n  }\n}\nSkipForward.prototype.controlText_ = 'Skip Forward';\nComponent$1.registerComponent('SkipForward', SkipForward);\n\n/**\n * Button to skip backward a configurable amount of time\n * through a video. Renders in the control bar.\n *\n *  * e.g. options: {controlBar: {skipButtons: backward: 5}}\n *\n * @extends Button\n */\nclass SkipBackward extends Button {\n  constructor(player, options) {\n    super(player, options);\n    this.validOptions = [5, 10, 30];\n    this.skipTime = this.getSkipBackwardTime();\n    if (this.skipTime && this.validOptions.includes(this.skipTime)) {\n      this.setIcon(`replay-${this.skipTime}`);\n      this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  getSkipBackwardTime() {\n    const playerOptions = this.options_.playerOptions;\n    return playerOptions.controlBar && playerOptions.controlBar.skipButtons && playerOptions.controlBar.skipButtons.backward;\n  }\n  buildCSSClass() {\n    return `vjs-skip-backward-${this.getSkipBackwardTime()} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * On click, skips backward in the video by a configurable amount of seconds.\n   * If the current time in the video is less than the configured 'skip backward' time,\n   * skips to beginning of video or seekable range.\n   *\n   * Handle a click on a `SkipBackward` button\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` event that caused this function\n   *        to be called\n   */\n  handleClick(event) {\n    const currentVideoTime = this.player_.currentTime();\n    const liveTracker = this.player_.liveTracker;\n    const seekableStart = liveTracker && liveTracker.isLive() && liveTracker.seekableStart();\n    let newTime;\n    if (seekableStart && currentVideoTime - this.skipTime <= seekableStart) {\n      newTime = seekableStart;\n    } else if (currentVideoTime >= this.skipTime) {\n      newTime = currentVideoTime - this.skipTime;\n    } else {\n      newTime = 0;\n    }\n    this.player_.currentTime(newTime);\n  }\n\n  /**\n   * Update control text on languagechange\n   */\n  handleLanguagechange() {\n    this.controlText(this.localize('Skip backward {1} seconds', [this.skipTime]));\n  }\n}\nSkipBackward.prototype.controlText_ = 'Skip Backward';\nComponent$1.registerComponent('SkipBackward', SkipBackward);\n\n/**\n * @file menu.js\n */\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\nclass Menu extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    if (options) {\n      this.menuButton_ = options.menuButton;\n    }\n    this.focusedChild_ = -1;\n    this.on('keydown', e => this.handleKeyDown(e));\n\n    // All the menu item instances share the same blur handler provided by the menu container.\n    this.boundHandleBlur_ = e => this.handleBlur(e);\n    this.boundHandleTapClick_ = e => this.handleTapClick(e);\n  }\n\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n  addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n    this.removeEventListenerForItem(component);\n    super.removeChild(component);\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  addItem(component) {\n    const childComponent = this.addChild(component);\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  createEl() {\n    const contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n    const el = super.createEl('div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  }\n  dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  handleBlur(event) {\n    const relatedTarget = event.relatedTarget || document.activeElement;\n\n    // Close menu popup when a user clicks outside the menu\n    if (!this.children().some(element => {\n      return element.el() === relatedTarget;\n    })) {\n      const btn = this.menuButton_;\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      const childComponents = this.children();\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n      const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n      if (!foundComponent) {\n        return;\n      }\n\n      // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {KeyboardEvent} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  stepForward() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  stepBack() {\n    let stepChild = 0;\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  }\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  focus(item = 0) {\n    const children = this.children().slice();\n    const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n    if (haveTitle) {\n      children.shift();\n    }\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  }\n}\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\nclass MenuButton extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n    this.menuButton_ = new Button(player, options);\n    this.menuButton_.controlText(this.controlText_);\n    this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    const buttonClass = Button.prototype.buildCSSClass();\n    this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n    this.menuButton_.removeClass('vjs-control');\n    this.addChild(this.menuButton_);\n    this.update();\n    this.enabled_ = true;\n    const handleClick = e => this.handleClick(e);\n    this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n    this.on(this.menuButton_, 'tap', handleClick);\n    this.on(this.menuButton_, 'click', handleClick);\n    this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n    this.on(this.menuButton_, 'mouseenter', () => {\n      this.addClass('vjs-hover');\n      this.menu.show();\n      on(document, 'keyup', this.handleMenuKeyUp_);\n    });\n    this.on('mouseleave', e => this.handleMouseLeave(e));\n    this.on('keydown', e => this.handleSubmenuKeyDown(e));\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n  update() {\n    const menu = this.createMenu();\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  createMenu() {\n    const menu = new Menu(this.player_, {\n      menuButton: this\n    });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      const titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      const titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n    this.items = this.createItems();\n    if (this.items) {\n      // Add menu items to the menu\n      for (let i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n    return menu;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  createItems() {}\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n\n  /**\n   * Overwrites the `setIcon` method from `Component`.\n   * In this case, we want the icon to be appended to the menuButton.\n   *\n   * @param {string} name\n   *         The icon name to be added.\n   */\n  setIcon(name) {\n    super.setIcon(name, this.menuButton_.el_);\n  }\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  buildWrapperCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    const buttonClass = Button.prototype.buildCSSClass();\n    return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    let menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n    return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  controlText(text, el = this.menuButton_.el()) {\n    return this.menuButton_.controlText(text, el);\n  }\n\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  dispose() {\n    this.handleMouseLeave();\n    super.dispose();\n  }\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  focus() {\n    this.menuButton_.focus();\n  }\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  blur() {\n    this.menuButton_.blur();\n  }\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n      // Up Arrow or Down Arrow also 'press' the button to open the menu\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {Event} event\n   *        The event that caused this function to be called.\n   */\n  handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.focus();\n      }\n    }\n  }\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n      this.menu.focus();\n    }\n  }\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  }\n}\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\nclass TrackButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const tracks = options.tracks;\n    super(player, options);\n    if (this.items.length <= 1) {\n      this.hide();\n    }\n    if (!tracks) {\n      return;\n    }\n    const updateHandler = bind_(this, this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n    this.player_.on('ready', updateHandler);\n    this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n  }\n}\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n *\n  * @typedef MenuKeys\n  * @array\n  */\nconst MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * @file menu-item.js\n */\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\nclass MenuItem extends ClickableComponent {\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param { import('../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.selectable = options.selectable;\n    this.isSelected_ = options.selected || false;\n    this.multiSelectable = options.multiSelectable;\n    this.selected(this.isSelected_);\n    if (this.selectable) {\n      if (this.multiSelectable) {\n        this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      this.el_.setAttribute('role', 'menuitem');\n    }\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    const el = super.createEl('li', Object.assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs);\n\n    // swap icon with menu item text.\n    const menuItemEl = createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    });\n\n    // If using SVG icons, the element with vjs-icon-placeholder will be added separately.\n    if (this.player_.options_.experimentalSvgIcons) {\n      el.appendChild(menuItemEl);\n    } else {\n      el.replaceChild(menuItemEl, el.querySelector('.vjs-icon-placeholder'));\n    }\n    return el;\n  }\n\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n      // Pass keydown handling up for unused keys\n      super.handleKeyDown(event);\n    }\n  }\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.selected(true);\n  }\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  selected(selected) {\n    if (this.selectable) {\n      if (selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  }\n}\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\nclass TextTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    super(player, options);\n    this.track = track;\n    // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n    this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    const selectedLanguageChangeHandler = (...args) => {\n      this.handleSelectedLanguageChange.apply(this, args);\n    };\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      let event;\n      this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    this.handleTracksChange();\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    const referenceTrack = this.track;\n    const tracks = this.player_.textTracks();\n    super.handleClick(event);\n    if (!tracks) {\n      return;\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      }\n\n      // If this text track is the component's track and it is not showing,\n      // set it to showing.\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n\n        // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n\n  /**\n   * Handle text track list change\n   *\n   * @param {Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  }\n  dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n\n/**\n * A special menu item for turning off a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\nclass OffTextTrackMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      default: false,\n      mode: 'disabled'\n    };\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n    super(player, options);\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let shouldBeSelected = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  }\n  handleSelectedLanguageChange(event) {\n    const tracks = this.player().textTracks();\n    let allHidden = true;\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.label);\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\nclass TextTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.textTracks();\n    super(player, options);\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n  createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    let label;\n    if (this.label_) {\n      label = `${this.label_} off`;\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label\n    }));\n    this.hideThreshold_ += 1;\n    const tracks = this.player_.textTracks();\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        const item = new TrackMenuItem(this.player_, {\n          track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(`vjs-${track.kind}-menu-item`);\n        items.push(item);\n      }\n    }\n    return items;\n  }\n}\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\nclass ChaptersTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const cue = options.cue;\n    const currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    super(player, options);\n    this.track = track;\n    this.cue = cue;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player_.currentTime(this.cue.startTime);\n  }\n}\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\nclass ChaptersButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this function is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('chapters');\n    this.selectCurrentItem_ = () => {\n      this.items.forEach(item => {\n        item.selected(this.track_.activeCues[0] === item.cue);\n      });\n    };\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-chapters-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n    const track = this.findChaptersTrack();\n    if (track !== this.track_) {\n      this.setTrack(track);\n      super.update();\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      super.update();\n    }\n  }\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n      const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  findChaptersTrack() {\n    const tracks = this.player_.textTracks() || [];\n    for (let i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      const track = tracks[i];\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return { import('../../menu/menu').default }\n   *         New menu for the chapter buttons\n   */\n  createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return super.createMenu();\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return  { import('./text-track-menu-item').default[] }\n   *         Array of menu items\n   */\n  createItems() {\n    const items = [];\n    if (!this.track_) {\n      return items;\n    }\n    const cues = this.track_.cues;\n    if (!cues) {\n      return items;\n    }\n    for (let i = 0, l = cues.length; i < l; i++) {\n      const cue = cues[i];\n      const mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue\n      });\n      items.push(mi);\n    }\n    return items;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\nclass DescriptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('audio-description');\n    const tracks = player.textTracks();\n    const changeHandler = bind_(this, this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n  handleTracksChange(event) {\n    const tracks = this.player().textTracks();\n    let disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (let i = 0, l = tracks.length; i < l; i++) {\n      const track = tracks[i];\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-descriptions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\nclass SubtitlesButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('subtitles');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subtitles-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\nclass CaptionSettingsMenuItem extends TextTrackMenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.track = {\n      player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      default: false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    super(player, options);\n    this.addClass('vjs-texttrack-settings');\n    this.controlText(', opens ' + options.kind + ' settings dialog');\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  }\n\n  /**\n   * Update control text and label on languagechange\n   */\n  handleLanguagechange() {\n    this.$('.vjs-menu-item-text').textContent = this.player_.localize(this.options_.kind + ' settings');\n    super.handleLanguagechange();\n  }\n}\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\nclass CaptionsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options, ready) {\n    super(player, options, ready);\n    this.setIcon('captions');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-captions-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    const items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    return super.createItems(items);\n  }\n}\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\nclass SubsCapsMenuItem extends TextTrackMenuItem {\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (this.options_.track.kind === 'captions') {\n      if (this.player_.options_.experimentalSvgIcons) {\n        this.setIcon('captions', el);\n      } else {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n      }\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: ` ${this.localize('Captions')}`\n      }));\n    }\n    return el;\n  }\n}\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\nclass SubsCapsButton extends TextTrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Function} [ready]\n   *        The function to call when this component is ready.\n   */\n  constructor(player, options = {}) {\n    super(player, options);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    this.label_ = 'subtitles';\n    this.setIcon('subtitles');\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n      this.label_ = 'captions';\n      this.setIcon('captions');\n    }\n    this.menuButton_.controlText(toTitleCase$1(this.label_));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  createItems() {\n    let items = [];\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n    items = super.createItems(items, SubsCapsMenuItem);\n    return items;\n  }\n}\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @protected\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\nclass AudioTrackMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const track = options.track;\n    const tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    super(player, options);\n    this.track = track;\n    this.addClass(`vjs-${track.kind}-menu-item`);\n    const changeHandler = (...args) => {\n      this.handleTracksChange.apply(this, args);\n    };\n    tracks.addEventListener('change', changeHandler);\n    this.on('dispose', () => {\n      tracks.removeEventListener('change', changeHandler);\n    });\n  }\n  createEl(type, props, attrs) {\n    const el = super.createEl(type, props, attrs);\n    const parentSpan = el.querySelector('.vjs-menu-item-text');\n    if (['main-desc', 'description'].indexOf(this.options_.track.kind) >= 0) {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n    return el;\n  }\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick(event);\n\n    // the audio track list will automatically toggle other tracks\n    // off for us.\n    this.track.enabled = true;\n\n    // when native audio tracks are used, we want to make sure that other tracks are turned off\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // skip the current track since we enabled it above\n        if (track === this.track) {\n          continue;\n        }\n        track.enabled = track === this.track;\n      }\n    }\n  }\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  }\n}\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\nclass AudioTrackButton extends TrackButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  constructor(player, options = {}) {\n    options.tracks = player.audioTracks();\n    super(player, options);\n    this.setIcon('audio');\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-audio-button ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  createItems(items = []) {\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    const tracks = this.player_.audioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n      const track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n    return items;\n  }\n}\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @protected\n */\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\nclass PlaybackRateMenuItem extends MenuItem {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    const label = options.rate;\n    const rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    super(player, options);\n    this.label = label;\n    this.rate = rate;\n    this.on(player, 'ratechange', e => this.update(e));\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  handleClick(event) {\n    super.handleClick();\n    this.player().playbackRate(this.rate);\n  }\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\nclass PlaybackRateMenuButton extends MenuButton {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../../player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n    this.updateVisibility();\n    this.updateLabel();\n    this.on(player, 'loadstart', e => this.updateVisibility(e));\n    this.on(player, 'ratechange', e => this.updateLabel(e));\n    this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    const el = super.createEl();\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  }\n  dispose() {\n    this.labelEl_ = null;\n    super.dispose();\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-playback-rate ${super.buildCSSClass()}`;\n  }\n  buildWrapperCSSClass() {\n    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n  }\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  createItems() {\n    const rates = this.playbackRates();\n    const items = [];\n    for (let i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n    return items;\n  }\n\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  handlePlaybackRateschange(event) {\n    this.update();\n  }\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  playbackRates() {\n    const player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  }\n}\n\n/**\n * The text that should display over the `PlaybackRateMenuButton`s controls.\n *\n * Added for localization.\n *\n * @type {string}\n * @protected\n */\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\nclass Spacer extends Component$1 {\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  buildCSSClass() {\n    return `vjs-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl(tag = 'div', props = {}, attributes = {}) {\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n    return super.createEl(tag, props, attributes);\n  }\n}\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\nclass CustomControlSpacer extends Spacer {\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  buildCSSClass() {\n    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: '\\u00a0'\n    });\n  }\n}\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\nclass ControlBar extends Component$1 {\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    return super.createEl('div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  }\n}\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'skipBackward', 'skipForward', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n};\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\nclass ErrorDisplay extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  { import('./player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    super(player, options);\n    this.on(player, 'error', e => {\n      this.close();\n      this.open(e);\n    });\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n  buildCSSClass() {\n    return `vjs-error-display ${super.buildCSSClass()}`;\n  }\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  content() {\n    const error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  }\n}\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\nErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nconst LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nconst COLOR_BLACK = ['#000', 'Black'];\nconst COLOR_BLUE = ['#00F', 'Blue'];\nconst COLOR_CYAN = ['#0FF', 'Cyan'];\nconst COLOR_GREEN = ['#0F0', 'Green'];\nconst COLOR_MAGENTA = ['#F0F', 'Magenta'];\nconst COLOR_RED = ['#F00', 'Red'];\nconst COLOR_WHITE = ['#FFF', 'White'];\nconst COLOR_YELLOW = ['#FF0', 'Yellow'];\nconst OPACITY_OPAQUE = ['1', 'Opaque'];\nconst OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nconst OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nconst selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-text-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Drop shadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    default: 2,\n    parser: v => v === '1.00' ? null : Number(v)\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Opacity',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {*}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  const value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n  for (let i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\nclass TextTrackSettings extends ModalDialog {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('../player').default } player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  constructor(player, options) {\n    options.temporary = false;\n    super(player, options);\n    this.updateDisplay = this.updateDisplay.bind(this);\n\n    // fill the modal and pretend we have opened it\n    this.fill();\n    this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n    this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: this.localize('End of dialog window.')\n    });\n    this.el().appendChild(this.endDialog);\n    this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n    }\n    this.on(this.$('.vjs-done-button'), 'click', () => {\n      this.saveSettings();\n      this.close();\n    });\n    this.on(this.$('.vjs-default-button'), 'click', () => {\n      this.setDefaults();\n      this.updateDisplay();\n    });\n    each(selectConfigs, config => {\n      this.on(this.$(config.selector), 'change', this.updateDisplay);\n    });\n    if (this.options_.persistTextTrackSettings) {\n      this.restoreSettings();\n    }\n  }\n  dispose() {\n    this.endDialog = null;\n    super.dispose();\n  }\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @param {string} [legendId]\n   *        Id of associated <legend>.\n   *\n   * @param {string} [type=label]\n   *        Type of labelling element, `label` or `legend`\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElSelect_(key, legendId = '', type = 'label') {\n    const config = selectConfigs[key];\n    const id = config.id.replace('%s', this.id_);\n    const selectLabelledbyIds = [legendId, id].join(' ').trim();\n    const guid = `vjs_select_${newGUID()}`;\n    return [`<${type} id=\"${id}\"${type === 'label' ? ` for=\"${guid}\" class=\"vjs-label\"` : ''}>`, this.localize(config.label), `</${type}>`, `<select aria-labelledby=\"${selectLabelledbyIds}\" id=\"${guid}\">`].concat(config.options.map(o => {\n      const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [`<option id=\"${optionId}\" value=\"${o[0]}\" `, `aria-labelledby=\"${selectLabelledbyIds} ${optionId}\">`, this.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElFgColor_() {\n    const legendId = `captions-text-legend-${this.id_}`;\n    return ['<fieldset class=\"vjs-fg vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text'), '</legend>', '<span class=\"vjs-text-color\">', this.createElSelect_('color', legendId), '</span>', '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElBgColor_() {\n    const legendId = `captions-background-${this.id_}`;\n    return ['<fieldset class=\"vjs-bg vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text Background'), '</legend>', '<span class=\"vjs-bg-color\">', this.createElSelect_('backgroundColor', legendId), '</span>', '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  createElWinColor_() {\n    const legendId = `captions-window-${this.id_}`;\n    return ['<fieldset class=\"vjs-window vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Caption Area Background'), '</legend>', '<span class=\"vjs-window-color\">', this.createElSelect_('windowColor', legendId), '</span>', '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  createElControls_() {\n    const defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [`<button type=\"button\" class=\"vjs-default-button\" title=\"${defaultsDescription}\">`, this.localize('Reset'), `<span class=\"vjs-control-text\"> ${defaultsDescription}</span>`, '</button>', `<button type=\"button\" class=\"vjs-done-button\">${this.localize('Done')}</button>`].join('')\n    });\n  }\n  content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  }\n  label() {\n    return this.localize('Caption Settings Dialog');\n  }\n  description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  }\n  buildCSSClass() {\n    return super.buildCSSClass() + ' vjs-text-track-settings';\n  }\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  getValues() {\n    return reduce(selectConfigs, (accum, config, key) => {\n      const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n      return accum;\n    }, {});\n  }\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  setValues(values) {\n    each(selectConfigs, (config, key) => {\n      setSelectedOption(this.$(config.selector), values[key], config.parser);\n    });\n  }\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  setDefaults() {\n    each(selectConfigs, config => {\n      const index = config.hasOwnProperty('default') ? config.default : 0;\n      this.$(config.selector).selectedIndex = index;\n    });\n  }\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  restoreSettings() {\n    let values;\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n    if (values) {\n      this.setValues(values);\n    }\n  }\n\n  /**\n   * Save text track settings to localStorage\n   */\n  saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n    const values = this.getValues();\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n\n  /**\n   * Update display of text track settings\n   */\n  updateDisplay() {\n    const ttDisplay = this.player_.getChild('textTrackDisplay');\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    const cb = this.player_.controlBar;\n    const subsCapsBtn = cb && cb.subsCapsButton;\n    const ccBtn = cb && cb.captionsButton;\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  }\n\n  /**\n   * Repopulate dialog with new localizations on languagechange\n   */\n  handleLanguagechange() {\n    this.fill();\n  }\n}\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n *\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\nclass ResizeManager extends Component$1 {\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  constructor(player, options) {\n    let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    const options_ = merge$1({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    super(player, options_);\n    this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    this.loadListener_ = null;\n    this.resizeObserver_ = null;\n    this.debouncedHandler_ = debounce(() => {\n      this.resizeHandler();\n    }, 100, false, this);\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n      this.resizeObserver_.observe(player.el());\n    } else {\n      this.loadListener_ = () => {\n        if (!this.el_ || !this.el_.contentWindow) {\n          return;\n        }\n        const debouncedHandler_ = this.debouncedHandler_;\n        let unloadListener_ = this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        };\n\n        // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n        on(this.el_.contentWindow, 'unload', unloadListener_);\n        on(this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n      this.one('load', this.loadListener_);\n    }\n  }\n  createEl() {\n    return super.createEl('iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n    this.player_.trigger('playerresize');\n  }\n  dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\nconst defaults = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\nclass LiveTracker extends Component$1 {\n  /**\n   * Creates an instance of this class.\n   *\n   * @param { import('./player').default } player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect whether we are live or not.\n   */\n  constructor(player, options) {\n    // LiveTracker does not need an element\n    const options_ = merge$1(defaults, options, {\n      createEl: false\n    });\n    super(player, options_);\n    this.trackLiveHandler_ = () => this.trackLive_();\n    this.handlePlay_ = e => this.handlePlay(e);\n    this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n    this.handleSeeked_ = e => this.handleSeeked(e);\n    this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n    this.reset_();\n    this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n    // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n    this.on(this.player_, 'canplay', () => this.toggleTracking());\n  }\n\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  trackLive_() {\n    const seekable = this.player_.seekable();\n\n    // skip undefined seekable\n    if (!seekable || !seekable.length) {\n      return;\n    }\n    const newTime = Number(window$1.performance.now().toFixed(4));\n    const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    const liveCurrentTime = this.liveCurrentTime();\n    const currentTime = this.player_.currentTime();\n\n    // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n    let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n    // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  handleDurationchange() {\n    this.toggleTracking();\n  }\n\n  /**\n   * start/stop tracking\n   */\n  toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n\n  /**\n   * start tracking live playback\n   */\n  startTracking() {\n    if (this.isTracking()) {\n      return;\n    }\n\n    // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  handleSeeked() {\n    const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n\n  /**\n   * stop tracking live playback\n   */\n  stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  seekableEnd() {\n    const seekable = this.player_.seekable();\n    const seekableEnds = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    }\n\n    // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  seekableStart() {\n    const seekable = this.player_.seekable();\n    const seekableStarts = [];\n    let i = seekable ? seekable.length : 0;\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    }\n\n    // grab the first seekable start after sorting, or if there are none\n    // default to 0\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  liveWindow() {\n    const liveCurrentTime = this.liveCurrentTime();\n\n    // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n    return liveCurrentTime - this.seekableStart();\n  }\n\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Whether liveTracker is tracking\n   */\n  isLive() {\n    return this.isTracking();\n  }\n\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Whether playback is at the live edge\n   */\n  atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n\n  /**\n   * The number of seconds that have occurred after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  pastSeekEnd() {\n    const seekableEnd = this.seekableEnd();\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n\n  /**\n   * Whether live tracker is currently tracking or not.\n   */\n  isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n    if (this.atLiveEdge()) {\n      return;\n    }\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n\n  /**\n   * Dispose of liveTracker\n   */\n  dispose() {\n    this.stopTracking();\n    super.dispose();\n  }\n}\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * Displays an element over the player which contains an optional title and\n * description for the current content.\n *\n * Much of the code for this component originated in the now obsolete\n * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n *\n * @extends Component\n */\nclass TitleBar extends Component$1 {\n  constructor(player, options) {\n    super(player, options);\n    this.on('statechanged', e => this.updateDom_());\n    this.updateDom_();\n  }\n\n  /**\n   * Create the `TitleBar`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  createEl() {\n    this.els = {\n      title: createEl('div', {\n        className: 'vjs-title-bar-title',\n        id: `vjs-title-bar-title-${newGUID()}`\n      }),\n      description: createEl('div', {\n        className: 'vjs-title-bar-description',\n        id: `vjs-title-bar-description-${newGUID()}`\n      })\n    };\n    return createEl('div', {\n      className: 'vjs-title-bar'\n    }, {}, values(this.els));\n  }\n\n  /**\n   * Updates the DOM based on the component's state object.\n   */\n  updateDom_() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    const techAriaAttrs = {\n      title: 'aria-labelledby',\n      description: 'aria-describedby'\n    };\n    ['title', 'description'].forEach(k => {\n      const value = this.state[k];\n      const el = this.els[k];\n      const techAriaAttr = techAriaAttrs[k];\n      emptyEl(el);\n      if (value) {\n        textContent(el, value);\n      }\n\n      // If there is a tech element available, update its ARIA attributes\n      // according to whether a title and/or description have been provided.\n      if (techEl) {\n        techEl.removeAttribute(techAriaAttr);\n        if (value) {\n          techEl.setAttribute(techAriaAttr, el.id);\n        }\n      }\n    });\n    if (this.state.title || this.state.description) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n\n  /**\n   * Update the contents of the title bar component with new title and\n   * description text.\n   *\n   * If both title and description are missing, the title bar will be hidden.\n   *\n   * If either title or description are present, the title bar will be visible.\n   *\n   * NOTE: Any previously set value will be preserved. To unset a previously\n   * set value, you must pass an empty string or null.\n   *\n   * For example:\n   *\n   * ```\n   * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n   * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n   * update({title: ''}) // title: '', description: 'bar2'\n   * update({title: 'foo', description: null}) // title: 'foo', description: null\n   * ```\n   *\n   * @param  {Object} [options={}]\n   *         An options object. When empty, the title bar will be hidden.\n   *\n   * @param  {string} [options.title]\n   *         A title to display in the title bar.\n   *\n   * @param  {string} [options.description]\n   *         A description to display in the title bar.\n   */\n  update(options) {\n    this.setState(options);\n  }\n\n  /**\n   * Dispose the component.\n   */\n  dispose() {\n    const tech = this.player_.tech_;\n    const techEl = tech && tech.el_;\n    if (techEl) {\n      techEl.removeAttribute('aria-labelledby');\n      techEl.removeAttribute('aria-describedby');\n    }\n    super.dispose();\n    this.els = null;\n  }\n}\nComponent$1.registerComponent('TitleBar', TitleBar);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param { import('./html5').default } tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nconst sourcesetLoad = tech => {\n  const el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  const sources = tech.$$('source');\n  const srcUrls = [];\n  let src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (let i = 0; i < sources.length; i++) {\n    const url = sources[i].src;\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nconst innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set(v) {\n    // make a dummy node to use innerHTML on\n    const dummy = document.createElement(this.nodeName.toLowerCase());\n\n    // set innerHTML to the value provided\n    dummy.innerHTML = v;\n\n    // make a document fragment to hold the nodes from dummy\n    const docFrag = document.createDocumentFragment();\n\n    // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    }\n\n    // remove content\n    this.innerText = '';\n\n    // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n    window$1.Element.prototype.appendChild.call(this, docFrag);\n\n    // then return the result that innerHTML's setter would\n    return this.innerHTML;\n  }\n});\n\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nconst getDescriptor = (priority, prop) => {\n  let descriptor = {};\n  for (let i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\nconst getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nconst firstSourceWatch = function (tech) {\n  const el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n  const old = {};\n  const innerDescriptor = getInnerHTMLDescriptor(tech);\n  const appendWrapper = appendFn => (...args) => {\n    const retval = appendFn.apply(el, args);\n    sourcesetLoad(tech);\n    return retval;\n  };\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', merge$1(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n  el.resetSourceWatch_ = () => {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(k => {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one\n */\nconst srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n    return '';\n  },\n  set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\nconst getSrcDescriptor = tech => getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nconst setupSourceset = function (tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n  const el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n  const srcDescriptor = getSrcDescriptor(tech);\n  const oldSetAttribute = el.setAttribute;\n  const oldLoad = el.load;\n  Object.defineProperty(el, 'src', merge$1(srcDescriptor, {\n    set: v => {\n      const retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n  el.setAttribute = (n, v) => {\n    const retval = oldSetAttribute.call(el, n, v);\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n    return retval;\n  };\n  el.load = () => {\n    const retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n    return retval;\n  };\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n  el.resetSourceset_ = () => {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * @file html5.js\n */\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\nclass Html5 extends Tech {\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Function} [ready]\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  constructor(options, ready) {\n    super(options, ready);\n    const source = options.source;\n    let crossoriginTracks = false;\n    this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      this.setSource(source);\n    } else {\n      this.handleLateInit_(this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      this.setupSourcesetHandling_();\n    }\n    this.isScrubbing_ = false;\n    if (this.el_.hasChildNodes()) {\n      const nodes = this.el_.childNodes;\n      let nodesLength = nodes.length;\n      const removeNodes = [];\n      while (nodesLength--) {\n        const node = nodes[nodesLength];\n        const nodeName = node.nodeName.toLowerCase();\n        if (nodeName === 'track') {\n          if (!this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            this.remoteTextTrackEls().addTrackElement_(node);\n            this.remoteTextTracks().addTrack(node.track);\n            this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n      for (let i = 0; i < removeNodes.length; i++) {\n        this.el_.removeChild(removeNodes[i]);\n      }\n    }\n    this.proxyNativeTracks_();\n    if (this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n      this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    this.proxyWebkitFullscreen_();\n    this.triggerReady();\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n  dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    super.dispose();\n  }\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  restoreMetadataTracksInIOSNativePlayer_() {\n    const textTracks = this.textTracks();\n    let metadataTracksPreFullscreenState;\n\n    // captures a snapshot of every metadata track's current state\n    const takeMetadataTrackSnapshot = () => {\n      metadataTracksPreFullscreenState = [];\n      for (let i = 0; i < textTracks.length; i++) {\n        const track = textTracks[i];\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n    const restoreTrackMode = () => {\n      for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        const storedTrack = metadataTracksPreFullscreenState[i];\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', () => {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', () => {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  overrideNative_(type, override) {\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[`featuresNative${type}Tracks`]) {\n      return;\n    }\n    const lowerCaseType = type.toLowerCase();\n    if (this[`${lowerCaseType}TracksListeners_`]) {\n      Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n        const elTracks = this.el()[`${lowerCaseType}Tracks`];\n        elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n      });\n    }\n    this[`featuresNative${type}Tracks`] = !override;\n    this[`${lowerCaseType}TracksListeners_`] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  proxyNativeTracksForType_(name) {\n    const props = NORMAL[name];\n    const elTracks = this.el()[props.getterName];\n    const techTracks = this[props.getterName]();\n    if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n    const listeners = {\n      change: e => {\n        const event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event);\n\n        // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n        if (name === 'text') {\n          this[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n    const removeOldTracks = function () {\n      const removeTracks = [];\n      for (let i = 0; i < techTracks.length; i++) {\n        let found = false;\n        for (let j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(eventName => {\n      const listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n      this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n    });\n\n    // Remove (native) tracks that are not used anymore\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', e => this.off('loadstart', removeOldTracks));\n  }\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  proxyNativeTracks_() {\n    NORMAL.names.forEach(name => {\n      this.proxyNativeTracksForType_(name);\n    });\n  }\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  createEl() {\n    let el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        const clone = el.cloneNode(true);\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        const attributes = merge$1({}, tagAttributes);\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n        setAttributes(el, Object.assign(attributes, {\n          id: this.options_.techId,\n          class: 'vjs-tech'\n        }));\n      }\n      el.playerId = this.options_.playerId;\n    }\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n    for (let i = 0; i < settingsAttrs.length; i++) {\n      const attr = settingsAttrs[i];\n      const value = this.options_[attr];\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n    return el;\n  }\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      let loadstartFired = false;\n      const setLoadstartFired = function () {\n        loadstartFired = true;\n      };\n      this.on('loadstart', setLoadstartFired);\n      const triggerLoadstart = function () {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    const eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  scrubbing() {\n    return this.isScrubbing_;\n  }\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  duration() {\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      const checkProgress = () => {\n        if (this.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (this.el_.duration === Infinity) {\n            this.trigger('durationchange');\n          }\n          this.off('timeupdate', checkProgress);\n        }\n      };\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  }\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  width() {\n    return this.el_.offsetWidth;\n  }\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  height() {\n    return this.el_.offsetHeight;\n  }\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  proxyWebkitFullscreen_() {\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n    const endFn = function () {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n      // Safari will sometimes set controls on the videoelement when existing fullscreen.\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n    const beginFn = function () {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', () => {\n      this.off('webkitbeginfullscreen', beginFn);\n      this.off('webkitendfullscreen', endFn);\n    });\n  }\n\n  /**\n   * Check if fullscreen is supported on the video el.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  supportsFullScreen() {\n    return typeof this.el_.webkitEnterFullScreen === 'function';\n  }\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  enterFullScreen() {\n    const video = this.el_;\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play());\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n    this.el_.webkitExitFullScreen();\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n    return super.requestVideoFrameCallback(cb);\n  }\n\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      super.cancelVideoFrameCallback(id);\n    }\n  }\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  src(src) {\n    if (src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(src);\n  }\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  }\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  setControls(val) {\n    this.el_.controls = !!val;\n  }\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return super.addTextTrack(kind, label, language);\n    }\n    return this.el_.addTextTrack(kind, label, language);\n  }\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return super.createRemoteTextTrack(options);\n    }\n    const htmlTrackElement = document.createElement('track');\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options.default) {\n      htmlTrackElement.default = options.default;\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n   * will not be removed from the TextTrackList and HtmlTrackElementList\n   * after a source change\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n    return htmlTrackElement;\n  }\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  removeRemoteTextTrack(track) {\n    super.removeRemoteTextTrack(track);\n    if (this.featuresNativeTextTracks) {\n      const tracks = this.$$('track');\n      let i = tracks.length;\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n    const videoPlaybackQuality = {};\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n    if (window$1.performance) {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    }\n    return videoPlaybackQuality;\n  }\n}\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n  const video = document.createElement('video');\n  const track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    const canControl = volume !== Html5.TEST_VID.volume;\n\n    // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(() => {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      });\n\n      // default iOS to false, which will be updated in the timeout above.\n      return false;\n    }\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {boolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    const muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    const playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    const noop = () => {};\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {boolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n  defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n  const sources = el.querySelectorAll('source');\n  let i = sources.length;\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    const ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n  }\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n/**\n * @file player.js\n */\n\n// The following tech events are simply re-triggered\n// on the player when they happen\nconst TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nconst TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nconst BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nconst BREAKPOINT_CLASSES = {};\n\n// grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\nBREAKPOINT_ORDER.forEach(k => {\n  const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n  BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n});\nconst DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in three ways:\n * 1. By calling `videojs.getPlayer('example_video_1');`\n * 2. By calling `videojs('example_video_1');` (not recommended)\n * 2. By using it directly via `videojs.players.example_video_1;`\n *\n * @extends Component\n * @global\n */\nclass Player extends Component$1 {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Function} [ready]\n   *        Ready callback function.\n   */\n  constructor(tag, options, ready) {\n    // Make sure tag ID exists\n    // also here.. probably better\n    tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = Object.assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      const closest = tag.closest('[lang]');\n      if (closest) {\n        options.language = closest.getAttribute('lang');\n      }\n    }\n\n    // Run base component initializing with new options\n    super(null, options, ready);\n\n    // Create bound methods for document listeners.\n    this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n    this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n    this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n    this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n    this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n    this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n    this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n    this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n    this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n    this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n    this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n\n    // default isFullscreen_ to false\n    this.isFullscreen_ = false;\n\n    // create logger\n    this.log = createLogger(this.id_);\n\n    // Hold our own reference to fullscreen api so it can be mocked in tests\n    this.fsApi_ = FullscreenApi;\n\n    // Tracks when a tech changes the poster\n    this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // Init state hasStarted_\n    this.hasStarted_ = false;\n\n    // Init state userActive_\n    this.userActive_ = false;\n\n    // Init debugEnabled_\n    this.debugEnabled_ = false;\n\n    // Init state audioOnlyMode_\n    this.audioOnlyMode_ = false;\n\n    // Init state audioPosterMode_\n    this.audioPosterMode_ = false;\n\n    // Init state audioOnlyCache_\n    this.audioOnlyCache_ = {\n      playerHeight: null,\n      hiddenChildren: []\n    };\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    this.language(this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      const languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      this.languages_ = languagesToLower;\n    } else {\n      this.languages_ = Player.prototype.options_.languages;\n    }\n    this.resetCache_();\n\n    // Set poster\n    /** @type string */\n    this.poster_ = options.poster || '';\n\n    // Set controls\n    /** @type {boolean} */\n    this.controls_ = !!options.controls;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    this.changingSrc_ = false;\n    this.playCallbacks_ = [];\n    this.playTerminatedQueue_ = [];\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      this.autoplay(this.options_.autoplay);\n    }\n\n    // check plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        if (typeof this[name] !== 'function') {\n          throw new Error(`plugin \"${name}\" does not exist`);\n        }\n      });\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    this.scrubbing_ = false;\n    this.el_ = this.createEl();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(this, {\n      eventBusKey: 'el_'\n    });\n\n    // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n    if (this.fsApi_.requestFullscreen) {\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n    if (this.fluid_) {\n      this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    const playerOptionsCopy = merge$1(this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(name => {\n        this[name](options.plugins[name]);\n      });\n    }\n\n    // Enable debug mode to fire debugon event for all plugins.\n    if (options.debug) {\n      this.debug(true);\n    }\n    this.options_.playerOptions = playerOptionsCopy;\n    this.middleware_ = [];\n    this.playbackRates(options.playbackRates);\n    if (options.experimentalSvgIcons) {\n      // Add SVG Sprite to the DOM\n      const parser = new window$1.DOMParser();\n      const parsedSVG = parser.parseFromString(icons, 'image/svg+xml');\n      const errorNode = parsedSVG.querySelector('parsererror');\n      if (errorNode) {\n        log$1.warn('Failed to load SVG Icons. Falling back to Font Icons.');\n        this.options_.experimentalSvgIcons = null;\n      } else {\n        const sprite = parsedSVG.documentElement;\n        sprite.style.display = 'none';\n        this.el_.appendChild(sprite);\n        this.addClass('vjs-svg-icons-enabled');\n      }\n    }\n    this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (this.controls()) {\n      this.addClass('vjs-controls-enabled');\n    } else {\n      this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    this.el_.setAttribute('role', 'region');\n    if (this.isAudio()) {\n      this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n    } else {\n      this.el_.setAttribute('aria-label', this.localize('Video Player'));\n    }\n    if (this.isAudio()) {\n      this.addClass('vjs-audio');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n    if (TOUCH_ENABLED) {\n      this.addClass('vjs-touch-enabled');\n    }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[this.id_] = this;\n\n    // Add a major version class to aid css in plugins\n    const majorVersion = version$6.split('.')[0];\n    this.addClass(`vjs-v${majorVersion}`);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    this.userActive(true);\n    this.reportUserActivity();\n    this.one('play', e => this.listenForUserActivity_(e));\n    this.on('keydown', e => this.handleKeyDown(e));\n    this.on('languagechange', e => this.handleLanguagechange(e));\n    this.breakpoints(this.options_.breakpoints);\n    this.responsive(this.options_.responsive);\n\n    // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n    this.on('ready', () => {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      this.audioPosterMode(this.options_.audioPosterMode);\n      this.audioOnlyMode(this.options_.audioOnlyMode);\n    });\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n  dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    // Make sure all player-specific document listeners are unbound. This is\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n    if (this.tag) {\n      this.tag = null;\n    }\n    clearCacheForPlayer(this);\n\n    // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      const list = this[props.getterName]();\n\n      // if it is not a native list\n      // we have to manually remove event listeners\n      if (list && list.off) {\n        list.off();\n      }\n    });\n\n    // the actual .el_ is removed here, or replaced if\n    super.dispose({\n      restoreEl: this.options_.restoreEl\n    });\n  }\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  createEl() {\n    let tag = this.tag;\n    let el;\n    let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = super.createEl('div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    const attrs = getAttributes(tag);\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el;\n      // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n      Object.keys(el).forEach(k => {\n        try {\n          tag[k] = el[k];\n        } catch (e) {\n          // we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1';\n\n    // Workaround for #4583 on Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    // doesn't change behavior of Chrome if JAWS is not being used\n    if (IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overridable by CSS, just like the\n    // video element\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      const defaultsStyleEl = $('.vjs-styles-defaults');\n      const head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n    this.fill_ = false;\n    this.fluid_ = false;\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n    // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n    // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n    const links = tag.getElementsByTagName('a');\n    for (let i = 0; i < links.length; i++) {\n      const linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string|null} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  crossOrigin(value) {\n    // `null` can be set to unset a value\n    if (typeof value === 'undefined') {\n      return this.techGet_('crossOrigin');\n    }\n    if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n      return;\n    }\n    this.techCall_('setCrossOrigin', value);\n    if (this.posterImage) {\n      this.posterImage.crossOrigin(value);\n    }\n    return;\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number|string} [value]\n   *        CSS value to set the `Player`'s width to.\n   *\n   * @return {number|undefined}\n   *         - The current width of the `Player` when getting.\n   *         - Nothing when setting\n   */\n  width(value) {\n    return this.dimension('width', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number|string} [value]\n   *        CSS value to set the `Player`'s height to.\n   *\n   * @return {number|undefined}\n   *         - The current height of the `Player` when getting.\n   *         - Nothing when setting\n   */\n  height(value) {\n    return this.dimension('height', value);\n  }\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number|string} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  dimension(dimension, value) {\n    const privDimension = dimension + '_';\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n    const parsedVal = parseFloat(value);\n    if (isNaN(parsedVal)) {\n      log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n      return;\n    }\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n    this.fluid_ = !!bool;\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, () => {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n    this.updateStyleEl_();\n  }\n\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n    this.fill_ = !!bool;\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      const techEl = this.tech_ && this.tech_.el();\n      if (techEl) {\n        if (width >= 0) {\n          techEl.width = width;\n        }\n        if (height >= 0) {\n          techEl.height = height;\n        }\n      }\n      return;\n    }\n    let width;\n    let height;\n    let aspectRatio;\n    let idClass;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    const ratioParts = aspectRatio.split(':');\n    const ratioMultiplier = ratioParts[1] / ratioParts[0];\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calculate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n  }\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  loadTech_(techName, source) {\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n    const titleTechName = toTitleCase$1(techName);\n    const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n    let autoplay = this.autoplay();\n\n    // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    }\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    const techOptions = {\n      source,\n      autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': `${this.id()}_${camelTechName}_api`,\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      techOptions[props.getterName] = this[props.privateName];\n    });\n    Object.assign(techOptions, this.options_[titleTechName]);\n    Object.assign(techOptions, this.options_[camelTechName]);\n    Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    const TechClass = Tech.getTech(techName);\n    if (!TechClass) {\n      throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n    }\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind_(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(event => {\n      this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n      this.on(this.tech_, event, eventObj => {\n        if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n          this.queuedCallbacks_.push({\n            callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n            event: eventObj\n          });\n          return;\n        }\n        this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n    this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n    this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n    this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n    this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n    this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n    this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n    this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n    this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n    this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n    this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n    this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n    this.on(this.tech_, 'error', e => this.handleTechError_(e));\n    this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n    this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n    this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  unloadTech_() {\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(name => {\n      const props = ALL[name];\n      this[props.privateName] = this[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n    this.isPosterFromTech_ = false;\n  }\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n    return this.tech_;\n  }\n\n  /**\n   * An object that contains Video.js version.\n   *\n   * @typedef {Object} PlayerVersion\n   *\n   * @property {string} 'video.js' - Video.js version\n   */\n\n  /**\n   * Returns an object with Video.js version.\n   *\n   * @return {PlayerVersion}\n   *          An object with Video.js version.\n   */\n  version() {\n    return {\n      'video.js': version$6\n    };\n  }\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n  }\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#loadstart\n   * @listens Tech#loadstart\n   * @private\n   */\n  handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended', 'vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // Update the duration\n    this.handleTechDurationChange_();\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {Event}\n       */\n      this.trigger('loadstart');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  manualAutoplay_(type) {\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n    const resolveMuted = () => {\n      const previouslyMuted = this.muted();\n      this.muted(true);\n      const restoreMuted = () => {\n        this.muted(previouslyMuted);\n      };\n\n      // restore muted on play terminatation\n      this.playTerminatedQueue_.push(restoreMuted);\n      const mutedPromise = this.play();\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n      return mutedPromise.catch(err => {\n        restoreMuted();\n        throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n      });\n    };\n    let promise;\n\n    // if muted defaults to true\n    // the only thing we can do is call play\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n      if (isPromise(promise)) {\n        promise = promise.catch(resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n    if (!isPromise(promise)) {\n      return;\n    }\n    return promise.then(() => {\n      this.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    }).catch(() => {\n      this.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  updateSourceCaches_(srcObj = '') {\n    let src = srcObj;\n    let type = '';\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = merge$1({}, srcObj, {\n      src,\n      type\n    });\n    const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n    const sourceElSources = [];\n    const sourceEls = this.$$('source');\n    const matchingSourceEls = [];\n    for (let i = 0; i < sourceEls.length; i++) {\n      const sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  }\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  handleTechSourceset_(event) {\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      let updateSourceCaches = src => this.updateSourceCaches_(src);\n      const playerSrc = this.currentSource().src;\n      const eventSrc = event.src;\n\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = () => {};\n        }\n      }\n\n      // update the source to the initial source right away\n      // in some cases this will be empty string\n      updateSourceCaches(eventSrc);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], e => {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n          const techSrc = this.techGet_('currentSrc');\n          this.lastSource_.tech = techSrc;\n          this.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n    if (request === this.hasStarted_) {\n      return;\n    }\n    this.hasStarted_ = request;\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  handleTechPlay_() {\n    this.removeClass('vjs-ended', 'vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {Event}\n     */\n    this.trigger('play');\n  }\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  }\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  handleTechWaiting_() {\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {Event}\n     */\n    this.trigger('waiting');\n\n    // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n    const timeWhenWaiting = this.currentTime();\n    const timeUpdateListener = () => {\n      if (timeWhenWaiting !== this.currentTime()) {\n        this.removeClass('vjs-waiting');\n        this.off('timeupdate', timeUpdateListener);\n      }\n    };\n    this.on('timeupdate', timeUpdateListener);\n  }\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {Event}\n     */\n    this.trigger('canplay');\n  }\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {Event}\n     */\n    this.trigger('canplaythrough');\n  }\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {Event}\n     */\n    this.trigger('playing');\n  }\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {Event}\n     */\n    this.trigger('seeking');\n  }\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  handleTechSeeked_() {\n    this.removeClass('vjs-seeking', 'vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {Event}\n     */\n    this.trigger('seeked');\n  }\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {Event}\n     */\n    this.trigger('pause');\n  }\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {Event}\n     */\n    this.trigger('ended');\n  }\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    }\n\n    // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n    const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n\n  /**\n   * Handle touch to end\n   *\n   * @param {Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @private\n   */\n  toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  documentFullscreenChange_(e) {\n    const targetPlayer = e.target.player;\n\n    // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n    const el = this.el();\n    let isFs = document[this.fsApi_.fullscreenElement] === el;\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    }\n    this.isFullscreen(isFs);\n  }\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  handleTechFullscreenChange_(event, data) {\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', () => {\n          this.removeClass('vjs-ios-native-fs');\n        });\n      }\n      this.isFullscreen(data.isFullscreen);\n    }\n  }\n  handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n\n  /**\n   * @private\n   */\n  togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  handleTechError_() {\n    const error = this.tech_.error();\n    if (error) {\n      this.error(error);\n    }\n  }\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  handleTechTextData_() {\n    let data = null;\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {Event}\n     */\n    this.trigger('textdata', data);\n  }\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  getCache() {\n    return this.cache_;\n  }\n\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} [arg]\n   *        the argument to pass\n   *\n   * @private\n   */\n  techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n\n  /**\n   * Mediate attempt to call playback tech method\n   * and return the value of the method called.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {*}\n   *         Value returned by the tech method called, undefined if tech\n   *         is not ready or tech method is not present\n   *\n   * @private\n   */\n  techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Log error when playback tech object is present but method\n    // is undefined or unavailable\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  }\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  play() {\n    return new Promise(resolve => {\n      this.play_(resolve);\n    });\n  }\n\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  play_(callback = silencePromise) {\n    this.playCallbacks_.push(callback);\n    const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n    const isSafariOrIOS = Boolean(IS_ANY_SAFARI || IS_IOS);\n\n    // treat calls to play_ somewhat like the `one` event function\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    }\n\n    // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = e => {\n        this.play_();\n      };\n      this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n      // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n      if (!isSrcReady && isSafariOrIOS) {\n        this.load();\n      }\n      return;\n    }\n\n    // If the player/tech is ready and we have a source, we can attempt playback.\n    const val = this.techGet_('play');\n\n    // For native playback, reset the progress bar if we get a play call from a replay.\n    const isNativeReplay = isSafariOrIOS && this.hasClass('vjs-ended');\n    if (isNativeReplay) {\n      this.resetProgressBar_();\n    }\n    // play was terminated if the returned value is null\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differentiate between a terminated play and an actual call to play.\n   */\n  runPlayTerminatedQueue_() {\n    const queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  runPlayCallbacks_(val) {\n    const callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = [];\n    // clear play terminatedQueue since we finished a real play\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n\n  /**\n   * Pause the video playback\n   */\n  pause() {\n    this.techCall_('pause');\n  }\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  played() {\n    return this.techGet_('played') || createTimeRanges$1(0, 0);\n  }\n\n  /**\n   * Sets or returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean|undefined}\n   *         - The value of scrubbing when getting\n   *         - Nothing when setting\n   */\n  scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number|undefined}\n   *         - the current time in seconds when getting\n   *         - Nothing when setting\n   */\n  currentTime(seconds) {\n    if (seconds === undefined) {\n      // cache last currentTime and return. default to 0 seconds\n      //\n      // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n      // currentTime when scrubbing, but may not provide much performance benefit after all.\n      // Should be tested. Also something has to read the actual current time or the cache will\n      // never get updated.\n      this.cache_.currentTime = this.techGet_('currentTime') || 0;\n      return this.cache_.currentTime;\n    }\n    if (seconds < 0) {\n      seconds = 0;\n    }\n    if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n      this.cache_.initTime = seconds;\n      this.off('canplay', this.boundApplyInitTime_);\n      this.one('canplay', this.boundApplyInitTime_);\n      return;\n    }\n    this.techCall_('setCurrentTime', seconds);\n    this.cache_.initTime = 0;\n    if (isFinite(seconds)) {\n      this.cache_.currentTime = Number(seconds);\n    }\n  }\n\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number|undefined}\n   *         - The duration of the video in seconds when getting\n   *         - Nothing when setting\n   */\n  duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n    seconds = parseFloat(seconds);\n\n    // Standardize on Infinity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing\n      this.cache_.duration = seconds;\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n\n  /**\n   * A remaining time function that is intended to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  }\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  buffered() {\n    let buffered = this.techGet_('buffered');\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    return buffered;\n  }\n\n  /**\n   * Get the TimeRanges of the media that are currently available\n   * for seeking to.\n   *\n   * @see [Seekable Spec]{@link https://html.spec.whatwg.org/multipage/media.html#dom-media-seekable}\n   *\n   * @return { import('./utils/time').TimeRange }\n   *         A mock {@link TimeRanges} object (following HTML spec)\n   */\n  seekable() {\n    let seekable = this.techGet_('seekable');\n    if (!seekable || !seekable.length) {\n      seekable = createTimeRanges$1(0, 0);\n    }\n    return seekable;\n  }\n\n  /**\n   * Returns whether the player is in the \"seeking\" state.\n   *\n   * @return {boolean} True if the player is in the seeking state, false if not.\n   */\n  seeking() {\n    return this.techGet_('seeking');\n  }\n\n  /**\n   * Returns whether the player is in the \"ended\" state.\n   *\n   * @return {boolean} True if the player is in the ended state, false if not.\n   */\n  ended() {\n    return this.techGet_('ended');\n  }\n\n  /**\n   * Returns the current state of network activity for the element, from\n   * the codes in the list below.\n   * - NETWORK_EMPTY (numeric value 0)\n   *   The element has not yet been initialised. All attributes are in\n   *   their initial states.\n   * - NETWORK_IDLE (numeric value 1)\n   *   The element's resource selection algorithm is active and has\n   *   selected a resource, but it is not actually using the network at\n   *   this time.\n   * - NETWORK_LOADING (numeric value 2)\n   *   The user agent is actively trying to download data.\n   * - NETWORK_NO_SOURCE (numeric value 3)\n   *   The element's resource selection algorithm is active, but it has\n   *   not yet found a resource to use.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n   * @return {number} the current network activity state\n   */\n  networkState() {\n    return this.techGet_('networkState');\n  }\n\n  /**\n   * Returns a value that expresses the current state of the element\n   * with respect to rendering the current playback position, from the\n   * codes in the list below.\n   * - HAVE_NOTHING (numeric value 0)\n   *   No information regarding the media resource is available.\n   * - HAVE_METADATA (numeric value 1)\n   *   Enough of the resource has been obtained that the duration of the\n   *   resource is available.\n   * - HAVE_CURRENT_DATA (numeric value 2)\n   *   Data for the immediate current playback position is available.\n   * - HAVE_FUTURE_DATA (numeric value 3)\n   *   Data for the immediate current playback position is available, as\n   *   well as enough data for the user agent to advance the current\n   *   playback position in the direction of playback.\n   * - HAVE_ENOUGH_DATA (numeric value 4)\n   *   The user agent estimates that enough data is available for\n   *   playback to proceed uninterrupted.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n   * @return {number} the current playback rendering state\n   */\n  readyState() {\n    return this.techGet_('readyState');\n  }\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  bufferedPercent() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  bufferedEnd() {\n    const buffered = this.buffered();\n    const duration = this.duration();\n    let end = buffered.end(buffered.length - 1);\n    if (end > duration) {\n      end = duration;\n    }\n    return end;\n  }\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number|undefined}\n   *         The current volume as a percent when getting\n   */\n  volume(percentAsDecimal) {\n    let vol;\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, percentAsDecimal));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|undefined}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   *         - nothing if setting\n   */\n  muted(muted) {\n    if (muted !== undefined) {\n      this.techCall_('setMuted', muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  }\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|undefined}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - Nothing when setting\n   */\n  defaultMuted(defaultMuted) {\n    if (defaultMuted !== undefined) {\n      this.techCall_('setDefaultMuted', defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  }\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number|undefined}\n   *         - The current value of lastVolume as a percent when getting\n   *         - Nothing when setting\n   *\n   * @private\n   */\n  lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  }\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean|undefined}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   *         - Nothing when setting\n   */\n  isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      const oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS);\n\n      // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n      this.toggleFullscreenClass_();\n      return;\n    }\n    return this.isFullscreen_;\n  }\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  requestFullscreen(fullscreenOptions) {\n    if (this.isInPictureInPicture()) {\n      this.exitPictureInPicture();\n    }\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.requestFullscreenHelper_(fullscreenOptions);\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  requestFullscreenHelper_(fullscreenOptions) {\n    let fsOptions;\n\n    // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    }\n\n    // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n    if (this.fsApi_.requestFullscreen) {\n      const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  exitFullscreen() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      function offHandler() {\n        self.off('fullscreenerror', errorHandler);\n        self.off('fullscreenchange', changeHandler);\n      }\n      function changeHandler() {\n        offHandler();\n        resolve();\n      }\n      function errorHandler(e, err) {\n        offHandler();\n        reject(err);\n      }\n      self.one('fullscreenchange', changeHandler);\n      self.one('fullscreenerror', errorHandler);\n      const promise = self.exitFullscreenHelper_();\n      if (promise) {\n        promise.then(offHandler, offHandler);\n        // map the promise to our resolve/reject methods\n        promise.then(resolve, reject);\n      }\n    });\n  }\n  exitFullscreenHelper_() {\n    if (this.fsApi_.requestFullscreen) {\n      const promise = document[this.fsApi_.exitFullscreen]();\n\n      // Even on browsers with promise support this may not return a promise\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(() => this.isFullscreen(false)));\n      }\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {Event}\n     */\n    this.trigger('enterFullWindow');\n  }\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {Event}\n     */\n    this.trigger('exitFullWindow');\n  }\n\n  /**\n   * Get or set disable Picture-in-Picture mode.\n   *\n   * @param {boolean} [value]\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean|undefined}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   *         - nothing if setting\n   */\n  isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n    return !!this.isInPictureInPicture_;\n  }\n\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * This can use document picture-in-picture or element picture in picture\n   *\n   * Set `enableDocumentPictureInPicture` to `true` to use docPiP on a supported browser\n   * Else set `disablePictureInPicture` to `false` to disable elPiP on a supported browser\n   *\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/}\n   * @see [Spec]{@link https://wicg.github.io/document-picture-in-picture/}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  requestPictureInPicture() {\n    if (this.options_.enableDocumentPictureInPicture && window$1.documentPictureInPicture) {\n      const pipContainer = document.createElement(this.el().tagName);\n      pipContainer.classList = this.el().classList;\n      pipContainer.classList.add('vjs-pip-container');\n      if (this.posterImage) {\n        pipContainer.appendChild(this.posterImage.el().cloneNode(true));\n      }\n      if (this.titleBar) {\n        pipContainer.appendChild(this.titleBar.el().cloneNode(true));\n      }\n      pipContainer.appendChild(createEl('p', {\n        className: 'vjs-pip-text'\n      }, {}, this.localize('Playing in picture-in-picture')));\n      return window$1.documentPictureInPicture.requestWindow({\n        // The aspect ratio won't be correct, Chrome bug https://crbug.com/1407629\n        width: this.videoWidth(),\n        height: this.videoHeight()\n      }).then(pipWindow => {\n        copyStyleSheetsToWindow(pipWindow);\n        this.el_.parentNode.insertBefore(pipContainer, this.el_);\n        pipWindow.document.body.appendChild(this.el_);\n        pipWindow.document.body.classList.add('vjs-pip-window');\n        this.player_.isInPictureInPicture(true);\n        this.player_.trigger('enterpictureinpicture');\n\n        // Listen for the PiP closing event to move the video back.\n        pipWindow.addEventListener('pagehide', event => {\n          const pipVideo = event.target.querySelector('.video-js');\n          pipContainer.parentNode.replaceChild(pipVideo, pipContainer);\n          this.player_.isInPictureInPicture(false);\n          this.player_.trigger('leavepictureinpicture');\n        });\n        return pipWindow;\n      });\n    }\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n    return Promise.reject('No PiP mode is available');\n  }\n\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  exitPictureInPicture() {\n    if (window$1.documentPictureInPicture && window$1.documentPictureInPicture.window) {\n      // With documentPictureInPicture, Player#leavepictureinpicture is fired in the pagehide handler\n      window$1.documentPictureInPicture.window.close();\n      return Promise.resolve();\n    }\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {KeyboardEvent} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  handleKeyDown(event) {\n    const {\n      userActions\n    } = this.options_;\n\n    // Bail out if hotkeys are not configured.\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    }\n\n    // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n    const excludeElement = el => {\n      const tagName = el.tagName.toLowerCase();\n\n      // The first and easiest test is for `contenteditable` elements.\n      if (el.isContentEditable) {\n        return true;\n      }\n\n      // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n      const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      // The final test is by tag name. These tags will be excluded entirely.\n      const excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    };\n\n    // Bail out if the user is focused on an interactive form element.\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  handleHotkeys(event) {\n    const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n    // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n    const {\n      fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'),\n      muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'),\n      playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')\n    } = hotkeys;\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const FSToggle = Component$1.getComponent('FullscreenToggle');\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      const PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  canPlayType(type) {\n    let can;\n\n    // Loop through each playback technology in the options order\n    for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      const techName = j[i];\n      let tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  selectSource(sources) {\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    const techs = this.options_.techOrder.map(techName => {\n      return [techName, Tech.getTech(techName)];\n    }).filter(([techName, tech]) => {\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n      log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n      let found;\n      outerArray.some(outerChoice => {\n        return innerArray.some(innerChoice => {\n          found = tester(outerChoice, innerChoice);\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n    let foundSourceAndTech;\n    const flip = fn => (a, b) => fn(b, a);\n    const finder = ([techName, tech], source) => {\n      if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n        return {\n          source,\n          tech: techName\n        };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n    return foundSourceAndTech || false;\n  }\n\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} [isRetry]\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  handleSrc_(source, isRetry) {\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n\n    // Reset retry behavior for new source\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    }\n\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    const sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    }\n\n    // initial sources\n    this.changingSrc_ = true;\n\n    // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], (middlewareSource, mws) => {\n      this.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(middlewareSource);\n      const err = this.src_(middlewareSource);\n      if (err) {\n        if (sources.length > 1) {\n          return this.handleSrc_(sources.slice(1));\n        }\n        this.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        this.triggerReady();\n        return;\n      }\n      setTech(mws, this.tech_);\n    });\n\n    // Try another available source if this one fails before playback.\n    if (sources.length > 1) {\n      const retry = () => {\n        // Remove the error modal\n        this.error(null);\n        this.handleSrc_(sources.slice(1), true);\n      };\n      const stopListeningForErrors = () => {\n        this.off('error', retry);\n      };\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n      this.resetRetryOnError_ = () => {\n        this.off('error', retry);\n        this.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  src(source) {\n    return this.handleSrc_(source, false);\n  }\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  src_(source) {\n    const sourceTech = this.selectSource([source]);\n    if (!sourceTech) {\n      return true;\n    }\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(() => {\n        this.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n\n  /**\n   * Begin loading the src data.\n   */\n  load() {\n    // Workaround to use the load method with the VHS.\n    // Does not cover the case when the load method is called directly from the mediaElement.\n    if (this.tech_ && this.tech_.vhs) {\n      this.src(this.currentSource());\n      return;\n    }\n    this.techCall_('load');\n  }\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  reset() {\n    if (this.paused()) {\n      this.doReset_();\n    } else {\n      const playPromise = this.play();\n      silencePromise(playPromise.then(() => this.doReset_()));\n    }\n  }\n  doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n    this.error(null);\n    if (this.titleBar) {\n      this.titleBar.update({\n        title: undefined,\n        description: undefined\n      });\n    }\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  resetProgressBar_() {\n    this.currentTime(0);\n    const {\n      currentTimeDisplay,\n      durationDisplay,\n      progressControl,\n      remainingTimeDisplay\n    } = this.controlBar || {};\n    const {\n      seekBar\n    } = progressControl || {};\n    if (currentTimeDisplay) {\n      currentTimeDisplay.updateContent();\n    }\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n    if (seekBar) {\n      seekBar.update();\n      if (seekBar.loadProgressBar) {\n        seekBar.loadProgressBar.update();\n      }\n    }\n  }\n\n  /**\n   * Reset Playback ratio\n   */\n  resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n\n  /**\n   * Reset Volume bar\n   */\n  resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  currentSources() {\n    const source = this.currentSource();\n    const sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n    return this.cache_.sources || sources;\n  }\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  currentSource() {\n    return this.cache_.source || {};\n  }\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {'none'|'auto'|'metadata'} [value]\n   *        Preload mode to pass to tech\n   *\n   * @return {string|undefined}\n   *         - The preload attribute value when getting\n   *         - Nothing when setting\n   */\n  preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  }\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|'play'|'muted'|'any'} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string|undefined}\n   *         - The current value of autoplay when getting\n   *         - Nothing when setting\n   */\n  autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n    let techAutoplay;\n\n    // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|undefined}\n   *         - the current value of playsinline\n   *         - Nothing when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n    }\n    return this.techGet_('playsinline');\n  }\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean|undefined}\n   *         - The current value of loop when getting\n   *         - Nothing when setting\n   */\n  loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  }\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string|undefined}\n   *         - The current value of poster when getting\n   *         - Nothing when setting\n   */\n  poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {Event}\n     */\n    this.trigger('posterchange');\n  }\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      const newPoster = this.tech_.poster() || '';\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  }\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean|undefined}\n   *         - The current value of controls when getting\n   *         - Nothing when setting\n   */\n  controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n    this.controls_ = bool;\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean|undefined}\n   *         - The current value of native controls when getting\n   *         - Nothing when setting\n   */\n  usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n    this.usingNativeControls_ = bool;\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  }\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null|undefined}\n   *         - The current MediaError when getting (or null)\n   *         - Nothing when setting\n   */\n  error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // allow hooks to modify error object\n    hooks('beforeerror').forEach(hookFunction => {\n      const newErr = hookFunction(this, err);\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        this.log.error('please return a value that MediaError expects in beforeerror hooks');\n        return;\n      }\n      err = newErr;\n    });\n\n    // Suppress the first error message for no compatible source until\n    // user interaction\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      const triggerSuppressedError = function () {\n        this.error(err);\n      };\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = null;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n    log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {Event}\n     */\n    this.trigger('error');\n\n    // notify hooks of the per player error\n    hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n    return;\n  }\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean|undefined}\n   *         - The current value of userActive when getting\n   *         - Nothing when setting\n   */\n  userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n    bool = !!bool;\n    if (bool === this.userActive_) {\n      return;\n    }\n    this.userActive_ = bool;\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {Event}\n     */\n    this.trigger('userinactive');\n  }\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  listenForUserActivity_() {\n    let mouseInProgress;\n    let lastMoveX;\n    let lastMoveY;\n    const handleActivity = bind_(this, this.reportUserActivity);\n    const handleMouseMove = function (e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n    const handleMouseDown = function () {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n    const handleMouseUpAndMouseLeave = function (event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    const controlBar = this.getChild('controlBar');\n\n    // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    }\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    let inactivityTimeout;\n\n    /** @this Player */\n    const activityCheck = function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n      const timeout = this.options_.inactivityTimeout;\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    };\n    this.setInterval(activityCheck, 250);\n  }\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number|undefined}\n   *         - The current playback rate when getting or 1.0\n   *         - Nothing when setting\n   */\n  playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|undefined}\n   *         - The default playback rate when getting or 1.0\n   *         - Nothing when setting\n   */\n  defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  }\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} [bool]\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean|undefined}\n   *         - The current value of isAudio when getting\n   *         - Nothing when setting\n   */\n  isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n    return !!this.isAudio_;\n  }\n  enableAudioOnlyUI_() {\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    const playerChildren = this.children();\n    const controlBar = this.getChild('ControlBar');\n    const controlBarHeight = controlBar && controlBar.currentHeight();\n\n    // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n    playerChildren.forEach(child => {\n      if (child === controlBar) {\n        return;\n      }\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n        this.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight();\n\n    // Set the player height the same as the control bar\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  }\n  disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode');\n\n    // Show player components that were previously hidden\n    this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n    // Reset player height\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioOnlyMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n    this.audioOnlyMode_ = value;\n\n    // Enable Audio Only Mode\n    if (value) {\n      const exitPromises = [];\n\n      // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n      if (this.isInPictureInPicture()) {\n        exitPromises.push(this.exitPictureInPicture());\n      }\n      if (this.isFullscreen()) {\n        exitPromises.push(this.exitFullscreen());\n      }\n      if (this.audioPosterMode()) {\n        exitPromises.push(this.audioPosterMode(false));\n      }\n      return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n    }\n\n    // Disable Audio Only Mode\n    return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n  }\n  enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    const tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  audioPosterMode(value) {\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n    this.audioPosterMode_ = value;\n    if (value) {\n      if (this.audioOnlyMode()) {\n        const audioOnlyModePromise = this.audioOnlyMode(false);\n        return audioOnlyModePromise.then(() => {\n          // enable audio poster mode after audio only mode is disabled\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // enable audio poster mode\n        this.enablePosterModeUI_();\n      });\n    }\n    return Promise.resolve().then(() => {\n      // disable audio poster mode\n      this.disablePosterModeUI_();\n    });\n  }\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n   *                                        from the TextTrackList and HtmlTrackElementList\n   *                                        after a source change\n   *\n   * @return { import('./tracks/html-track-element').default }\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   */\n  addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  removeRemoteTextTrack(obj = {}) {\n    let {\n      track\n    } = obj;\n    if (!track) {\n      track = obj;\n    }\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n\n  /**\n   * Set or get the player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string|undefined}\n   *         - The current language code when getting\n   *         - Nothing when setting\n   */\n  language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase();\n\n      // during first init, it's possible some things won't be evented\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  languages() {\n    return merge$1(Player.prototype.options_.languages, this.languages_);\n  }\n\n  /**\n   * returns a JavaScript object representing the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  toJSON() {\n    const options = merge$1(this.options_);\n    const tracks = options.tracks;\n    options.tracks = [];\n    for (let i = 0; i < tracks.length; i++) {\n      let track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = merge$1(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n    return options;\n  }\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  createModal(content, options) {\n    options = options || {};\n    options.content = content || '';\n    const modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', () => {\n      this.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n    const currentBreakpoint = this.currentBreakpoint();\n    const currentWidth = this.currentWidth();\n    for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      const candidateBreakpoint = BREAKPOINT_ORDER[i];\n      const maxWidth = this.breakpoints_[candidateBreakpoint];\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        }\n\n        // Only remove a class if there is a current breakpoint.\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  removeCurrentBreakpoint_() {\n    const className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  breakpoints(breakpoints) {\n    // Used as a getter.\n    if (breakpoints === undefined) {\n      return Object.assign(this.breakpoints_);\n    }\n    this.breakpoint_ = '';\n    this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n    // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n    this.updateCurrentBreakpoint_();\n\n    // Clone the breakpoints before returning.\n    return Object.assign(this.breakpoints_);\n  }\n\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} [value]\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean|undefined}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   *         Nothing if setting\n   */\n  responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n    value = Boolean(value);\n    const current = this.responsive_;\n\n    // Nothing changed.\n    if (value === current) {\n      return;\n    }\n\n    // The value actually changed, set it.\n    this.responsive_ = value;\n\n    // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_();\n\n      // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n    return value;\n  }\n\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  currentBreakpoint() {\n    return this.breakpoint_;\n  }\n\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  loadMedia(media, ready) {\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n    const crossOrigin = this.crossOrigin();\n    this.reset();\n\n    // Clone the media object so it cannot be mutated from outside.\n    this.cache_.media = merge$1(media);\n    const {\n      artist,\n      artwork,\n      description,\n      poster,\n      src,\n      textTracks,\n      title\n    } = this.cache_.media;\n\n    // If `artwork` is not given, create it using `poster`.\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n    if (crossOrigin) {\n      this.crossOrigin(crossOrigin);\n    }\n    if (src) {\n      this.src(src);\n    }\n    if (poster) {\n      this.poster(poster);\n    }\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n    }\n    if (this.titleBar) {\n      this.titleBar.update({\n        title,\n        description: description || artist || ''\n      });\n    }\n    this.ready(ready);\n  }\n\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  getMedia() {\n    if (!this.cache_.media) {\n      const poster = this.poster();\n      const src = this.currentSources();\n      const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n        kind: tt.kind,\n        label: tt.label,\n        language: tt.language,\n        src: tt.src\n      }));\n      const media = {\n        src,\n        textTracks\n      };\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n      return media;\n    }\n    return merge$1(this.cache_.media);\n  }\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  static getTagSettings(tag) {\n    const baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    const tagOptions = getAttributes(tag);\n    const dataSetup = tagOptions['data-setup'];\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      const [err, data] = safeParseTuple(dataSetup || '{}');\n      if (err) {\n        log$1.error(err);\n      }\n      Object.assign(tagOptions, data);\n    }\n    Object.assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      const children = tag.childNodes;\n      for (let i = 0, j = children.length; i < j; i++) {\n        const child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        const childName = child.nodeName.toLowerCase();\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n    return baseOptions;\n  }\n\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   * @return {boolean|undefined}\n   */\n  debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    }\n\n    // ignore any value that isn't an array\n    if (!Array.isArray(newRates)) {\n      return;\n    }\n\n    // ignore any arrays that don't only contain numbers\n    if (!newRates.every(rate => typeof rate === 'number')) {\n      return;\n    }\n    this.cache_.playbackRates = newRates;\n\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {Event}\n    */\n    this.trigger('playbackrateschange');\n  }\n}\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  const props = ALL[name];\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\nPlayer.players = {};\nconst navigator = window$1.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // enable sourceset by default\n  enableSourceset: true,\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false,\n  // Default smooth seeking to false\n  enableSmoothSeeking: false\n};\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nconst BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nconst PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nconst pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\nconst pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {typeof Plugin|Function|undefined}\n *          The plugin (or undefined).\n */\nconst getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nconst markPluginAsActive = (player, name) => {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nconst triggerSetupEvent = (player, hash, before) => {\n  const eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\nconst createBasicPlugin = function (name, plugin) {\n  const basicPluginWrapper = function () {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance: null\n    }, true);\n    const instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name,\n      plugin,\n      instance\n    });\n    return instance;\n  };\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\nconst createPluginFactory = (name, PluginSubClass) => {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function (...args) {\n    triggerSetupEvent(this, {\n      name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n    const instance = new PluginSubClass(...[this, ...args]);\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = () => instance;\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\nclass Plugin {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  constructor(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n    this.player = player;\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    }\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = this.dispose.bind(this);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n  version() {\n    return this.constructor.VERSION;\n  }\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  getEventHash(hash = {}) {\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  trigger(event, hash = {}) {\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  handleStateChanged(e) {}\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  dispose() {\n    const {\n      name,\n      player\n    } = this;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {Event}\n     */\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  static isBasic(plugin) {\n    const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {typeof Plugin|Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {typeof Plugin|Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  static registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n    }\n    if (pluginExists(name)) {\n      log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n    }\n    if (typeof plugin !== 'function') {\n      throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n    }\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n    return plugin;\n  }\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  static deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  static getPlugins(names = Object.keys(pluginStorage)) {\n    let result;\n    names.forEach(name => {\n      const plugin = getPlugin(name);\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  static getPluginVersion(name) {\n    const plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  }\n}\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {typeof Plugin|Function|undefined}\n *           The plugin (or `undefined`).\n */\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {PluginEventHash}\n */\n\n/**\n * @typedef  {Object} PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file deprecate.js\n * @module deprecate\n */\n\n/**\n * Decorate a function with a deprecation message the first time it is called.\n *\n * @param  {string}   message\n *         A deprecation message to log the first time the returned function\n *         is called.\n *\n * @param  {Function} fn\n *         The function to be deprecated.\n *\n * @return {Function}\n *         A wrapper function that will log a deprecation warning the first\n *         time it is called. The return value will be the return value of\n *         the wrapped function.\n */\nfunction deprecate(message, fn) {\n  let warned = false;\n  return function (...args) {\n    if (!warned) {\n      log$1.warn(message);\n    }\n    warned = true;\n    return fn.apply(this, args);\n  };\n}\n\n/**\n * Internal function used to mark a function as deprecated in the next major\n * version with consistent messaging.\n *\n * @param  {number}   major   The major version where it will be removed\n * @param  {string}   oldName The old function name\n * @param  {string}   newName The new function name\n * @param  {Function} fn      The function to deprecate\n * @return {Function}         The decorated function\n */\nfunction deprecateForMajor(major, oldName, newName, fn) {\n  return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n}\n\n/**\n * @file video.js\n * @module videojs\n */\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\nconst normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n/**\n * A callback that is called when a component is ready. Does not have any\n * parameters and any callback value will be ignored. See: {@link Component~ReadyCallback}\n *\n * @callback ReadyCallback\n */\n\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\nfunction videojs(id, options, ready) {\n  let player = videojs.getPlayer(id);\n  if (player) {\n    if (options) {\n      log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n  const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n  // If element is inside Shadow DOM (e.g. is part of a Custom element), ownerDocument.body\n  // always returns false. Instead, use the Shadow DOM root.\n  const inShadowDom = 'getRootNode' in el ? el.getRootNode() instanceof window$1.ShadowRoot : false;\n  const rootNode = inShadowDom ? el.getRootNode() : el.ownerDocument.body;\n  if (!el.ownerDocument.defaultView || !rootNode.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n  options = options || {};\n\n  // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n  hooks('beforesetup').forEach(hookFunction => {\n    const opts = hookFunction(el, merge$1(options));\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n    options = merge$1(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  const PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(hookFunction => hookFunction(player));\n  return player;\n}\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook;\n\n// Add default styles\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  let style = $('.vjs-styles-defaults');\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    const head = $('head');\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\nvideojs.VERSION = version$6;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = () => Player.players;\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = id => {\n  const players = Player.players;\n  let tag;\n  if (typeof id === 'string') {\n    const nId = normalizeId(id);\n    const player = players[nId];\n    if (player) {\n      return player;\n    }\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n  if (isEl(tag)) {\n    const {\n      player,\n      playerId\n    } = tag;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n    if (player || players[playerId]) {\n      return player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = () =>\n// Disposed players leave a key with a `null` value, so we need to make sure\n// we filter those out.\nObject.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {typeof Component} comp\n *        The component class\n *\n * @return {typeof Component}\n *         The newly registered component\n */\nvideojs.registerComponent = (name, comp) => {\n  if (Tech.isTech(comp)) {\n    log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n  }\n  return Component$1.registerComponent.call(Component$1, name, comp);\n};\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\nvideojs.browser = browser;\n\n/**\n * A reference to the {@link module:obj|obj utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:obj|obj}\n */\nvideojs.obj = Obj;\n\n/**\n * Deprecated reference to the {@link module:obj.merge|merge function}\n *\n * @type {Function}\n * @see {@link module:obj.merge|merge}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n */\nvideojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$1);\n\n/**\n * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n *\n * @type {Function}\n * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n */\nvideojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n/**\n * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n *\n * @type {Function}\n * @see {@link module:fn.bind_|fn.bind_}\n * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n */\nvideojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n *\n * @param {string} name\n *        The plugin name\n*\n * @param {typeof Plugin|Function} plugin\n *         The plugin sub-class or function\n *\n * @return {typeof Plugin|Function}\n */\nvideojs.plugin = (name, plugin) => {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = merge$1(videojs.options.languages, {\n    [code]: data\n  });\n  return videojs.options.languages[code];\n};\n\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\n\n/**\n * A reference to the {@link module:time|time utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:time|time}\n */\nvideojs.time = Time;\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n *\n * @type {Function}\n * @see {@link module:time.createTimeRanges|createTimeRanges}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n */\nvideojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n/**\n * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n *\n * @type {Function}\n * @see {@link module:time.formatTime|formatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n */\nvideojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n/**\n * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.setFormatTime|setFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n */\nvideojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n/**\n * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n *\n * @type {Function}\n * @see {@link module:time.resetFormatTime|resetFormatTime}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n */\nvideojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n/**\n * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n *\n * @type {Function}\n * @see {@link module:url.parseUrl|parseUrl}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n */\nvideojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n/**\n * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n *\n * @type {Function}\n * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n */\nvideojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\nvideojs.EventTarget = EventTarget$2;\nvideojs.any = any;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n  videojs[k] = function () {\n    log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:dom|dom}\n */\nvideojs.dom = Dom;\n\n/**\n * A reference to the {@link module:fn|fn utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:fn|fn}\n */\nvideojs.fn = Fn;\n\n/**\n * A reference to the {@link module:num|num utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:num|num}\n */\nvideojs.num = Num;\n\n/**\n * A reference to the {@link module:str|str utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:str|str}\n */\nvideojs.str = Str;\n\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see {@link module:url|url}\n */\nvideojs.url = Url;\n\n/*! @name videojs-contrib-quality-levels @version 4.0.0 @license Apache-2.0 */\n\n/**\n * A single QualityLevel.\n *\n * interface QualityLevel {\n *   readonly attribute DOMString id;\n *            attribute DOMString label;\n *   readonly attribute long width;\n *   readonly attribute long height;\n *   readonly attribute long bitrate;\n *            attribute boolean enabled;\n * };\n *\n * @class QualityLevel\n */\nclass QualityLevel {\n  /**\n   * Creates a QualityLevel\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   */\n  constructor(representation) {\n    let level = this; // eslint-disable-line\n\n    level.id = representation.id;\n    level.label = level.id;\n    level.width = representation.width;\n    level.height = representation.height;\n    level.bitrate = representation.bandwidth;\n    level.frameRate = representation.frameRate;\n    level.enabled_ = representation.enabled;\n    Object.defineProperty(level, 'enabled', {\n      /**\n       * Get whether the QualityLevel is enabled.\n       *\n       * @return {boolean} True if the QualityLevel is enabled.\n       */\n      get() {\n        return level.enabled_();\n      },\n      /**\n       * Enable or disable the QualityLevel.\n       *\n       * @param {boolean} enable true to enable QualityLevel, false to disable.\n       */\n      set(enable) {\n        level.enabled_(enable);\n      }\n    });\n    return level;\n  }\n}\n\n/**\n * A list of QualityLevels.\n *\n * interface QualityLevelList : EventTarget {\n *   getter QualityLevel (unsigned long index);\n *   readonly attribute unsigned long length;\n *   readonly attribute long selectedIndex;\n *\n *   void addQualityLevel(QualityLevel qualityLevel)\n *   void removeQualityLevel(QualityLevel remove)\n *   QualityLevel? getQualityLevelById(DOMString id);\n *\n *   attribute EventHandler onchange;\n *   attribute EventHandler onaddqualitylevel;\n *   attribute EventHandler onremovequalitylevel;\n * };\n *\n * @extends videojs.EventTarget\n * @class QualityLevelList\n */\n\nclass QualityLevelList extends videojs.EventTarget {\n  /**\n   * Creates a QualityLevelList.\n   */\n  constructor() {\n    super();\n    let list = this; // eslint-disable-line\n\n    list.levels_ = [];\n    list.selectedIndex_ = -1;\n    /**\n     * Get the index of the currently selected QualityLevel.\n     *\n     * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'selectedIndex', {\n      get() {\n        return list.selectedIndex_;\n      }\n    });\n    /**\n     * Get the length of the list of QualityLevels.\n     *\n     * @returns {number} The length of the list.\n     * @readonly\n     */\n\n    Object.defineProperty(list, 'length', {\n      get() {\n        return list.levels_.length;\n      }\n    });\n    list[Symbol.iterator] = () => list.levels_.values();\n    return list;\n  }\n  /**\n   * Adds a quality level to the list.\n   *\n   * @param {Representation|Object} representation The representation of the quality level\n   * @param {string}   representation.id        Unique id of the QualityLevel\n   * @param {number=}  representation.width     Resolution width of the QualityLevel\n   * @param {number=}  representation.height    Resolution height of the QualityLevel\n   * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n   * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n   * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n   * @return {QualityLevel} the QualityLevel added to the list\n   * @method addQualityLevel\n   */\n\n  addQualityLevel(representation) {\n    let qualityLevel = this.getQualityLevelById(representation.id); // Do not add duplicate quality levels\n\n    if (qualityLevel) {\n      return qualityLevel;\n    }\n    const index = this.levels_.length;\n    qualityLevel = new QualityLevel(representation);\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get() {\n          return this.levels_[index];\n        }\n      });\n    }\n    this.levels_.push(qualityLevel);\n    this.trigger({\n      qualityLevel,\n      type: 'addqualitylevel'\n    });\n    return qualityLevel;\n  }\n  /**\n   * Removes a quality level from the list.\n   *\n   * @param {QualityLevel} qualityLevel The QualityLevel to remove from the list.\n   * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n   * @method removeQualityLevel\n   */\n\n  removeQualityLevel(qualityLevel) {\n    let removed = null;\n    for (let i = 0, l = this.length; i < l; i++) {\n      if (this[i] === qualityLevel) {\n        removed = this.levels_.splice(i, 1)[0];\n        if (this.selectedIndex_ === i) {\n          this.selectedIndex_ = -1;\n        } else if (this.selectedIndex_ > i) {\n          this.selectedIndex_--;\n        }\n        break;\n      }\n    }\n    if (removed) {\n      this.trigger({\n        qualityLevel,\n        type: 'removequalitylevel'\n      });\n    }\n    return removed;\n  }\n  /**\n   * Searches for a QualityLevel with the given id.\n   *\n   * @param {string} id The id of the QualityLevel to find.\n   * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n   * @method getQualityLevelById\n   */\n\n  getQualityLevelById(id) {\n    for (let i = 0, l = this.length; i < l; i++) {\n      const level = this[i];\n      if (level.id === id) {\n        return level;\n      }\n    }\n    return null;\n  }\n  /**\n   * Resets the list of QualityLevels to empty\n   *\n   * @method dispose\n   */\n\n  dispose() {\n    this.selectedIndex_ = -1;\n    this.levels_.length = 0;\n  }\n}\n/**\n * change - The selected QualityLevel has changed.\n * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n */\n\nQualityLevelList.prototype.allowedEvents_ = {\n  change: 'change',\n  addqualitylevel: 'addqualitylevel',\n  removequalitylevel: 'removequalitylevel'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (const event in QualityLevelList.prototype.allowedEvents_) {\n  QualityLevelList.prototype['on' + event] = null;\n}\nvar version$5 = \"4.0.0\";\n\n/**\n * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n * event handlers.\n *\n * @param {Player} player Player object.\n * @param {Object} options Plugin options object.\n * @return {QualityLevelList} a list of QualityLevels\n */\n\nconst initPlugin$1 = function (player, options) {\n  const originalPluginFn = player.qualityLevels;\n  const qualityLevelList = new QualityLevelList();\n  const disposeHandler = function () {\n    qualityLevelList.dispose();\n    player.qualityLevels = originalPluginFn;\n    player.off('dispose', disposeHandler);\n  };\n  player.on('dispose', disposeHandler);\n  player.qualityLevels = () => qualityLevelList;\n  player.qualityLevels.VERSION = version$5;\n  return qualityLevelList;\n};\n/**\n * A video.js plugin.\n *\n * In the plugin function, the value of `this` is a video.js `Player`\n * instance. You cannot rely on the player being in a \"ready\" state here,\n * depending on how the plugin is invoked. This may or may not be important\n * to you; if not, remove the wait for \"ready\"!\n *\n * @param {Object} options Plugin options object\n * @return {QualityLevelList} a list of QualityLevels\n */\n\nconst qualityLevels = function (options) {\n  return initPlugin$1(this, videojs.obj.merge({}, options));\n}; // Register the plugin with video.js.\n\nvideojs.registerPlugin('qualityLevels', qualityLevels); // Include the version number.\n\nqualityLevels.VERSION = version$5;\n\n/*! @name @videojs/http-streaming @version 3.10.0 @license Apache-2.0 */\n\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\nconst resolveUrl = _resolveUrl;\n/**\n * If the xhr request was redirected, return the responseURL, otherwise,\n * return the original url.\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nconst resolveManifestRedirect = (url, req) => {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n  return url;\n};\nconst logger = source => {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n  }\n  return function () {};\n};\n\n/**\n * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n */\n/**\n * Delegates to videojs.obj.merge (Video.js 8) or\n * videojs.mergeOptions (Video.js 7).\n */\n\nfunction merge(...args) {\n  const context = videojs.obj || videojs;\n  const fn = context.merge || context.mergeOptions;\n  return fn.apply(context, args);\n}\n/**\n * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n * videojs.createTimeRanges (Video.js 7).\n */\n\nfunction createTimeRanges(...args) {\n  const context = videojs.time || videojs;\n  const fn = context.createTimeRanges || context.createTimeRanges;\n  return fn.apply(context, args);\n}\n\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\nconst TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nconst SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\nconst filterRanges = function (timeRanges, predicate) {\n  const results = [];\n  let i;\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n  return createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\nconst findRange = function (buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\nconst findNextRange = function (timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\nconst findGaps = function (buffered) {\n  if (buffered.length < 2) {\n    return createTimeRanges();\n  }\n  const ranges = [];\n  for (let i = 1; i < buffered.length; i++) {\n    const start = buffered.end(i - 1);\n    const end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\nconst bufferIntersection = function (bufferA, bufferB) {\n  let start = null;\n  let end = null;\n  let arity = 0;\n  const extents = [];\n  const ranges = [];\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return createTimeRanges();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n  let count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n  count = bufferB.length;\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n  return createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\nconst printableRange = range => {\n  const strArr = [];\n  if (!range || !range.length) {\n    return '';\n  }\n  for (let i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\nconst timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n  const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\nconst timeRangesToArray = timeRanges => {\n  const timeRangesList = [];\n  for (let i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\nconst isRangeDifferent = function (a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n  for (let i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n  return false;\n};\nconst lastBufferedEnd = function (a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\nconst timeAheadOf = function (range, startTime) {\n  let time = 0;\n  if (!range || !range.length) {\n    return time;\n  }\n  for (let i = 0; i < range.length; i++) {\n    const start = range.start(i);\n    const end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n    time += end - start;\n  }\n  return time;\n};\n\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nconst segmentDurationWithParts = (playlist, segment) => {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n  let result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\nconst getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n  if (segment.parts) {\n    segment.parts.forEach(function (part, pi) {\n      acc.push({\n        duration: part.duration,\n        segmentIndex: si,\n        partIndex: pi,\n        part,\n        segment\n      });\n    });\n  } else {\n    acc.push({\n      duration: segment.duration,\n      segmentIndex: si,\n      partIndex: null,\n      segment,\n      part: null\n    });\n  }\n  return acc;\n}, []);\nconst getLastParts = media => {\n  const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\nconst getKnownPartCount = ({\n  preloadSegment\n}) => {\n  if (!preloadSegment) {\n    return;\n  }\n  const {\n    parts,\n    preloadHints\n  } = preloadSegment;\n  let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} main the main playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\nconst liveEdgeDelay = (main, media) => {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n  if (main && main.suggestedPresentationDelay) {\n    return main.suggestedPresentationDelay;\n  }\n  const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nconst backwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n  while (i--) {\n    segment = playlist.segments[i];\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n  return {\n    result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\nconst forwardDuration = function (playlist, endSequence) {\n  let result = 0;\n  let segment;\n  let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n    result += segmentDurationWithParts(playlist, segment);\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\nconst intervalDuration = function (playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n  const backward = backwardDuration(playlist, endSequence);\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n  const forward = forwardDuration(playlist, endSequence);\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\nconst duration = function (playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\nconst sumDurations = function ({\n  defaultDuration,\n  durationList,\n  startIndex,\n  endIndex\n}) {\n  let durations = 0;\n  if (startIndex > endIndex) {\n    [startIndex, endIndex] = [endIndex, startIndex];\n  }\n  if (startIndex < 0) {\n    for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n    startIndex = 0;\n  }\n  for (let i = startIndex; i < endIndex; i++) {\n    durations += durationList[i].duration;\n  }\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\nconst playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n  if (expired === null) {\n    return null;\n  }\n  expired = expired || 0;\n  let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\nconst seekable = function (playlist, expired, liveEdgePadding) {\n  const useSafeLiveEnd = true;\n  const seekableStart = expired || 0;\n  let seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n  if (seekableEnd === null) {\n    return createTimeRanges();\n  } // Clamp seekable end since it can not be less than the seekable start\n\n  if (seekableEnd < seekableStart) {\n    seekableEnd = seekableStart;\n  }\n  return createTimeRanges(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\nconst getMediaInfoForTime = function ({\n  playlist,\n  currentTime,\n  startingSegmentIndex,\n  startingPartIndex,\n  startTime,\n  exactManifestTimings\n}) {\n  let time = currentTime - startTime;\n  const partsAndSegments = getPartsAndSegments(playlist);\n  let startIndex = 0;\n  for (let i = 0; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n    startIndex = i;\n    break;\n  }\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (let i = startIndex - 1; i >= 0; i--) {\n        const partAndSegment = partsAndSegments[i];\n        time += partAndSegment.duration;\n        if (exactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n        return {\n          partIndex: partAndSegment.partIndex,\n          segmentIndex: partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex,\n            endIndex: i\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n  if (startIndex < 0) {\n    for (let i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n  for (let i = startIndex; i < partsAndSegments.length; i++) {\n    const partAndSegment = partsAndSegments[i];\n    time -= partAndSegment.duration;\n    const canUseFudgeFactor = partAndSegment.duration > TIME_FUDGE_FACTOR;\n    const isExactlyAtTheEnd = time === 0;\n    const isExtremelyCloseToTheEnd = canUseFudgeFactor && time + TIME_FUDGE_FACTOR >= 0;\n    if (isExactlyAtTheEnd || isExtremelyCloseToTheEnd) {\n      // 1) We are exactly at the end of the current segment.\n      // 2) We are extremely close to the end of the current segment (The difference is less than  1 / 30).\n      //    We may encounter this situation when\n      //    we don't have exact match between segment duration info in the manifest and the actual duration of the segment\n      //    For example:\n      //    We appended 3 segments 10 seconds each, meaning we should have 30 sec buffered,\n      //    but we the actual buffered is 29.99999\n      //\n      // In both cases:\n      // if we passed current time -> it means that we already played current segment\n      // if we passed buffered.end -> it means that this segment is already loaded and buffered\n      // we should select the next segment if we have one:\n      if (i !== partsAndSegments.length - 1) {\n        continue;\n      }\n    }\n    if (exactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n    return {\n      partIndex: partAndSegment.partIndex,\n      segmentIndex: partAndSegment.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex,\n        endIndex: i\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is excluded or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is excluded or not\n * @function isExcluded\n */\n\nconst isExcluded = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been excluded permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\nconst isIncompatible = function (playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\nconst isEnabled = function (playlist) {\n  const excluded = isExcluded(playlist);\n  return !playlist.disabled && !excluded;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\nconst isDisabled = function (playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\nconst isAes = function (media) {\n  for (let i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\nconst hasAttribute = function (attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\nconst estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n  const size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\nconst isLowestEnabledRendition = (main, media) => {\n  if (main.playlists.length === 1) {\n    return true;\n  }\n  const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return main.playlists.filter(playlist => {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\nconst playlistMatch = (a, b) => {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n  return false;\n};\nconst someAudioVariant = function (main, callback) {\n  const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n  let found = false;\n  for (const groupName in AUDIO) {\n    for (const label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n      if (found) {\n        break;\n      }\n    }\n    if (found) {\n      break;\n    }\n  }\n  return !!found;\n};\nconst isAudioOnly = main => {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!main || !main.playlists || !main.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only main.\n    const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n  for (let i = 0; i < main.playlists.length; i++) {\n    const playlist = main.playlists[i];\n    const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n      continue;\n    } // playlist is in an audio group it is audio only\n\n    const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n    if (found) {\n      continue;\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n    return false;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n  return true;\n}; // exports\n\nvar Playlist = {\n  liveEdgeDelay,\n  duration,\n  seekable,\n  getMediaInfoForTime,\n  isEnabled,\n  isDisabled,\n  isExcluded,\n  isIncompatible,\n  playlistEnd,\n  isAes,\n  hasAttribute,\n  estimateSegmentRequestTime,\n  isLowestEnabledRendition,\n  isAudioOnly,\n  playlistMatch,\n  segmentDurationWithParts\n};\nconst {\n  log\n} = videojs;\nconst createPlaylistID = (index, uri) => {\n  return `${index}-${uri}`;\n}; // default function for creating a group id\n\nconst groupID = (type, group, label) => {\n  return `placeholder-uri-${type}-${group}-${label}`;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [llhls]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\nconst parseManifest = ({\n  onwarn,\n  oninfo,\n  manifestString,\n  customTagParsers = [],\n  customTagMappers = [],\n  llhls\n}) => {\n  const parser = new Parser();\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n  customTagParsers.forEach(customParser => parser.addParser(customParser));\n  customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n  parser.push(manifestString);\n  parser.end();\n  const manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!llhls) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n  if (!manifest.targetDuration) {\n    let targetDuration = 10;\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n    }\n    if (onwarn) {\n      onwarn({\n        message: `manifest has no targetDuration defaulting to ${targetDuration}`\n      });\n    }\n    manifest.targetDuration = targetDuration;\n  }\n  const parts = getLastParts(manifest);\n  if (parts.length && !manifest.partTargetDuration) {\n    const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n    if (onwarn) {\n      onwarn({\n        message: `manifest has no partTargetDuration defaulting to ${partTargetDuration}`\n      });\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n    manifest.partTargetDuration = partTargetDuration;\n  }\n  return manifest;\n};\n/**\n * Loops through all supported media groups in main and calls the provided\n * callback for each group\n *\n * @param {Object} main\n *        The parsed main manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nconst forEachMediaGroup = (main, callback) => {\n  if (!main.mediaGroups) {\n    return;\n  }\n  ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n    if (!main.mediaGroups[mediaType]) {\n      return;\n    }\n    for (const groupKey in main.mediaGroups[mediaType]) {\n      for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n        const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a main\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\nconst setupMediaPlaylist = ({\n  playlist,\n  uri,\n  id\n}) => {\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS main playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst setupMediaPlaylists = main => {\n  let i = main.playlists.length;\n  while (i--) {\n    const playlist = main.playlists[i];\n    setupMediaPlaylist({\n      playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n    main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} main\n *        The main playlist\n */\n\nconst resolveMediaGroupUris = main => {\n  forEachMediaGroup(main, properties => {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a main playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         main playlist\n */\n\nconst mainForMedia = (media, uri) => {\n  const id = createPlaylistID(0, uri);\n  const main = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri,\n      id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n  main.playlists[uri] = main.playlists[0];\n  return main;\n};\n/**\n * Does an in-place update of the main manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} main\n *        main manifest object\n * @param {string} uri\n *        The source URI\n * @param {function} createGroupID\n *        A function to determine how to create the groupID for mediaGroups\n */\n\nconst addPropertiesToMain = (main, uri, createGroupID = groupID) => {\n  main.uri = uri;\n  for (let i = 0; i < main.playlists.length; i++) {\n    if (!main.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      const phonyUri = `placeholder-uri-${i}`;\n      main.playlists[i].uri = phonyUri;\n    }\n  }\n  const audioOnlyMain = isAudioOnly(main);\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    // add a playlist array under properties\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n        for (let i = 0; i < main.playlists.length; i++) {\n          const p = main.playlists[i];\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n      properties.playlists = [_extends({}, properties)];\n    }\n    properties.playlists.forEach(function (p, i) {\n      const groupId = createGroupID(mediaType, groupKey, labelKey, p);\n      const id = createPlaylistID(i, groupId);\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      main.playlists[p.id] = p;\n      main.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(main);\n  resolveMediaGroupUris(main);\n};\nclass DateRangesStorage {\n  constructor() {\n    this.offset_ = null;\n    this.pendingDateRanges_ = new Map();\n    this.processedDateRanges_ = new Map();\n  }\n  setOffset(segments = []) {\n    // already set\n    if (this.offset_ !== null) {\n      return;\n    } // no segment to process\n\n    if (!segments.length) {\n      return;\n    }\n    const [firstSegment] = segments; // no program date time\n\n    if (firstSegment.programDateTime === undefined) {\n      return;\n    } // Set offset as ProgramDateTime for the very first segment of the very first playlist load:\n\n    this.offset_ = firstSegment.programDateTime / 1000;\n  }\n  setPendingDateRanges(dateRanges = []) {\n    if (!dateRanges.length) {\n      return;\n    }\n    const [dateRange] = dateRanges;\n    const startTime = dateRange.startDate.getTime();\n    this.trimProcessedDateRanges_(startTime);\n    this.pendingDateRanges_ = dateRanges.reduce((map, pendingDateRange) => {\n      map.set(pendingDateRange.id, pendingDateRange);\n      return map;\n    }, new Map());\n  }\n  processDateRange(dateRange) {\n    this.pendingDateRanges_.delete(dateRange.id);\n    this.processedDateRanges_.set(dateRange.id, dateRange);\n  }\n  getDateRangesToProcess() {\n    if (this.offset_ === null) {\n      return [];\n    }\n    const dateRangeClasses = {};\n    const dateRangesToProcess = [];\n    this.pendingDateRanges_.forEach((dateRange, id) => {\n      if (this.processedDateRanges_.has(id)) {\n        return;\n      }\n      dateRange.startTime = dateRange.startDate.getTime() / 1000 - this.offset_;\n      dateRange.processDateRange = () => this.processDateRange(dateRange);\n      dateRangesToProcess.push(dateRange);\n      if (!dateRange.class) {\n        return;\n      }\n      if (dateRangeClasses[dateRange.class]) {\n        const length = dateRangeClasses[dateRange.class].push(dateRange);\n        dateRange.classListIndex = length - 1;\n      } else {\n        dateRangeClasses[dateRange.class] = [dateRange];\n        dateRange.classListIndex = 0;\n      }\n    });\n    for (const dateRange of dateRangesToProcess) {\n      const classList = dateRangeClasses[dateRange.class] || [];\n      if (dateRange.endDate) {\n        dateRange.endTime = dateRange.endDate.getTime() / 1000 - this.offset_;\n      } else if (dateRange.endOnNext && classList[dateRange.classListIndex + 1]) {\n        dateRange.endTime = classList[dateRange.classListIndex + 1].startTime;\n      } else if (dateRange.duration) {\n        dateRange.endTime = dateRange.startTime + dateRange.duration;\n      } else if (dateRange.plannedDuration) {\n        dateRange.endTime = dateRange.startTime + dateRange.plannedDuration;\n      } else {\n        dateRange.endTime = dateRange.startTime;\n      }\n    }\n    return dateRangesToProcess;\n  }\n  trimProcessedDateRanges_(startTime) {\n    const copy = new Map(this.processedDateRanges_);\n    copy.forEach((dateRange, id) => {\n      if (dateRange.startDate.getTime() < startTime) {\n        this.processedDateRanges_.delete(id);\n      }\n    });\n  }\n}\nconst {\n  EventTarget: EventTarget$1\n} = videojs;\nconst addLLHLSQueryDirectives = (uri, media) => {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n  const parameters = {};\n  if (media.serverControl.canBlockReload) {\n    const {\n      preloadSegment\n    } = media; // next msn is a zero based value, length is not.\n\n    let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n    parameters._HLS_msn = nextMSN;\n  }\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n  if (Object.keys(parameters).length) {\n    const parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\nconst updateSegment = (a, b) => {\n  if (!a) {\n    return b;\n  }\n  const result = merge(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (let i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = merge(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\nconst updateSegments = (original, update, offset) => {\n  const oldSegments = original.slice();\n  const newSegments = update.slice();\n  offset = offset || 0;\n  const result = [];\n  let currentMap;\n  for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    const oldSegment = oldSegments[newIndex + offset];\n    const newSegment = newSegments[newIndex];\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n      result.push(newSegment);\n    }\n  }\n  return result;\n};\nconst resolveSegmentUris = (segment, baseUri) => {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(p => {\n      if (p.resolvedUri) {\n        return;\n      }\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\nconst getAllSegments = function (media) {\n  const segments = media.segments || [];\n  const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\nconst isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n/**\n  * Returns a new main playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original main playlist, null is returned.\n  *\n  * @param {Object} main a parsed main M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * main playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\nconst updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n  const result = merge(main, {});\n  const oldMedia = result.playlists[newMedia.id];\n  if (!oldMedia) {\n    return null;\n  }\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n  newMedia.segments = getAllSegments(newMedia);\n  const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n  mergedPlaylist.segments.forEach(segment => {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (let i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].id === newMedia.id) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (!properties.playlists) {\n      return;\n    }\n    for (let i = 0; i < properties.playlists.length; i++) {\n      if (newMedia.id === properties.playlists[i].id) {\n        properties.playlists[i] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\nconst refreshDelay = (media, update) => {\n  const segments = media.segments || [];\n  const lastSegment = segments[segments.length - 1];\n  const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\nclass PlaylistLoader extends EventTarget$1 {\n  constructor(src, vhs, options = {}) {\n    super();\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n    this.logger_ = logger('PlaylistLoader');\n    const {\n      withCredentials = false\n    } = options;\n    this.src = src;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    this.addDateRangesToTextTrack_ = options.addDateRangesToTextTrack;\n    const vhsOptions = vhs.options_;\n    this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    this.llhls = vhsOptions && vhsOptions.llhls;\n    this.dateRangesStorage_ = new DateRangesStorage(); // initialize the loader state\n\n    this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n    this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n    this.on('loadedplaylist', this.handleLoadedPlaylist_.bind(this));\n  }\n  handleLoadedPlaylist_() {\n    const mediaPlaylist = this.media();\n    if (!mediaPlaylist) {\n      return;\n    }\n    this.dateRangesStorage_.setOffset(mediaPlaylist.segments);\n    this.dateRangesStorage_.setPendingDateRanges(mediaPlaylist.dateRanges);\n    const availableDateRanges = this.dateRangesStorage_.getDateRangesToProcess();\n    if (!availableDateRanges.length || !this.addDateRangesToTextTrack_) {\n      return;\n    }\n    this.addDateRangesToTextTrack_(availableDateRanges);\n  }\n  handleMediaupdatetimeout_() {\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n    const media = this.media();\n    let uri = resolveUrl(this.main.uri, media.uri);\n    if (this.llhls) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n      }\n      this.haveMetadata({\n        playlistString: this.request.responseText,\n        url: this.media().uri,\n        id: this.media().id\n      });\n    });\n  }\n  playlistRequestError(xhr, playlist, startingState) {\n    const {\n      uri,\n      id\n    } = playlist; // any in-flight request is now finished\n\n    this.request = null;\n    if (startingState) {\n      this.state = startingState;\n    }\n    this.error = {\n      playlist: this.main.playlists[id],\n      status: xhr.status,\n      message: `HLS playlist request error at URL: ${uri}.`,\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  }\n  parseManifest_({\n    url,\n    manifestString\n  }) {\n    return parseManifest({\n      onwarn: ({\n        message\n      }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n      oninfo: ({\n        message\n      }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n      manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      llhls: this.llhls\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n\n  haveMetadata({\n    playlistString,\n    playlistObject,\n    url,\n    id\n  }) {\n    // any in-flight request is now finished\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    const playlist = playlistObject || this.parseManifest_({\n      url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist,\n      uri: url,\n      id\n    }); // merge this playlist into the main manifest\n\n    const update = updateMain$1(this.main, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n    if (update) {\n      this.main = update;\n      this.media_ = this.main.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.dateRangesStorage_ = new DateRangesStorage();\n    this.off();\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n\n  media(playlist, shouldDelay) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.main.playlists[playlist];\n    }\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    if (shouldDelay) {\n      const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n    const startingState = this.state;\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (mainPlaylistRef && mainPlaylistRef.endList ||\n    // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          // The initial playlist was a main manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.pendingMedia_ = playlist;\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n      if (error) {\n        return this.playlistRequestError(this.request, playlist, startingState);\n      }\n      this.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        this.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n\n  pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    this.stopRequest();\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MAIN_MANIFEST';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  load(shouldDelay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n    const media = this.media();\n    if (shouldDelay) {\n      const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.load();\n      }, delay);\n      return;\n    }\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  updateMediaUpdateTimeout_(delay) {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n    this.mediaUpdateTimeout = window$1.setTimeout(() => {\n      this.mediaUpdateTimeout = null;\n      this.trigger('mediaupdatetimeout');\n      this.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n\n  start() {\n    this.started = true;\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a main playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(() => {\n        this.setupInitialPlaylist(this.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      } // clear the loader's request reference\n\n      this.request = null;\n      if (error) {\n        this.error = {\n          status: req.status,\n          message: `HLS playlist request error at URL: ${this.src}.`,\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return this.trigger('error');\n      }\n      this.src = resolveManifestRedirect(this.src, req);\n      const manifest = this.parseManifest_({\n        manifestString: req.responseText,\n        url: this.src\n      });\n      this.setupInitialPlaylist(manifest);\n    });\n  }\n  srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a main or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a main playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a main playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n\n  setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (manifest.playlists) {\n      this.main = manifest;\n      addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(playlist => {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(segment => {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.main.playlists[0]);\n      }\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n    const uri = this.srcUri() || window$1.location.href;\n    this.main = mainForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.main.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  }\n  /**\n   * Updates or deletes a preexisting pathway clone.\n   * Ensures that all playlists related to the old pathway clone are\n   * either updated or deleted.\n   *\n   * @param {Object} clone On update, the pathway clone object for the newly updated pathway clone.\n   *        On delete, the old pathway clone object to be deleted.\n   * @param {boolean} isUpdate True if the pathway is to be updated,\n   *        false if it is meant to be deleted.\n   */\n\n  updateOrDeleteClone(clone, isUpdate) {\n    const main = this.main;\n    const pathway = clone.ID;\n    let i = main.playlists.length; // Iterate backwards through the playlist so we can remove playlists if necessary.\n\n    while (i--) {\n      const p = main.playlists[i];\n      if (p.attributes['PATHWAY-ID'] === pathway) {\n        const oldPlaylistUri = p.resolvedUri;\n        const oldPlaylistId = p.id; // update the indexed playlist and add new playlists by ID and URI\n\n        if (isUpdate) {\n          const newPlaylistUri = this.createCloneURI_(p.resolvedUri, clone);\n          const newPlaylistId = createPlaylistID(pathway, newPlaylistUri);\n          const attributes = this.createCloneAttributes_(pathway, p.attributes);\n          const updatedPlaylist = this.createClonePlaylist_(p, newPlaylistId, clone, attributes);\n          main.playlists[i] = updatedPlaylist;\n          main.playlists[newPlaylistId] = updatedPlaylist;\n          main.playlists[newPlaylistUri] = updatedPlaylist;\n        } else {\n          // Remove the indexed playlist.\n          main.playlists.splice(i, 1);\n        } // Remove playlists by the old ID and URI.\n\n        delete main.playlists[oldPlaylistId];\n        delete main.playlists[oldPlaylistUri];\n      }\n    }\n    this.updateOrDeleteCloneMedia(clone, isUpdate);\n  }\n  /**\n   * Updates or deletes media data based on the pathway clone object.\n   * Due to the complexity of the media groups and playlists, in all cases\n   * we remove all of the old media groups and playlists.\n   * On updates, we then create new media groups and playlists based on the\n   * new pathway clone object.\n   *\n   * @param {Object} clone The pathway clone object for the newly updated pathway clone.\n   * @param {boolean} isUpdate True if the pathway is to be updated,\n   *        false if it is meant to be deleted.\n   */\n\n  updateOrDeleteCloneMedia(clone, isUpdate) {\n    const main = this.main;\n    const id = clone.ID;\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      if (!main.mediaGroups[mediaType] || !main.mediaGroups[mediaType][id]) {\n        return;\n      }\n      for (const groupKey in main.mediaGroups[mediaType]) {\n        // Remove all media playlists for the media group for this pathway clone.\n        if (groupKey === id) {\n          for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n            const oldMedia = main.mediaGroups[mediaType][groupKey][labelKey];\n            oldMedia.playlists.forEach((p, i) => {\n              const oldMediaPlaylist = main.playlists[p.id];\n              const oldPlaylistId = oldMediaPlaylist.id;\n              const oldPlaylistUri = oldMediaPlaylist.resolvedUri;\n              delete main.playlists[oldPlaylistId];\n              delete main.playlists[oldPlaylistUri];\n            });\n          } // Delete the old media group.\n\n          delete main.mediaGroups[mediaType][groupKey];\n        }\n      }\n    }); // Create the new media groups and playlists if there is an update.\n\n    if (isUpdate) {\n      this.createClonedMediaGroups_(clone);\n    }\n  }\n  /**\n   * Given a pathway clone object, clones all necessary playlists.\n   *\n   * @param {Object} clone The pathway clone object.\n   * @param {Object} basePlaylist The original playlist to clone from.\n   */\n\n  addClonePathway(clone, basePlaylist = {}) {\n    const main = this.main;\n    const index = main.playlists.length;\n    const uri = this.createCloneURI_(basePlaylist.resolvedUri, clone);\n    const playlistId = createPlaylistID(clone.ID, uri);\n    const attributes = this.createCloneAttributes_(clone.ID, basePlaylist.attributes);\n    const playlist = this.createClonePlaylist_(basePlaylist, playlistId, clone, attributes);\n    main.playlists[index] = playlist; // add playlist by ID and URI\n\n    main.playlists[playlistId] = playlist;\n    main.playlists[uri] = playlist;\n    this.createClonedMediaGroups_(clone);\n  }\n  /**\n   * Given a pathway clone object we create clones of all media.\n   * In this function, all necessary information and updated playlists\n   * are added to the `mediaGroup` object.\n   * Playlists are also added to the `playlists` array so the media groups\n   * will be properly linked.\n   *\n   * @param {Object} clone The pathway clone object.\n   */\n\n  createClonedMediaGroups_(clone) {\n    const id = clone.ID;\n    const baseID = clone['BASE-ID'];\n    const main = this.main;\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      // If the media type doesn't exist, or there is already a clone, skip\n      // to the next media type.\n      if (!main.mediaGroups[mediaType] || main.mediaGroups[mediaType][id]) {\n        return;\n      }\n      for (const groupKey in main.mediaGroups[mediaType]) {\n        if (groupKey === baseID) {\n          // Create the group.\n          main.mediaGroups[mediaType][id] = {};\n        } else {\n          // There is no need to iterate over label keys in this case.\n          continue;\n        }\n        for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n          const oldMedia = main.mediaGroups[mediaType][groupKey][labelKey];\n          main.mediaGroups[mediaType][id][labelKey] = _extends({}, oldMedia);\n          const newMedia = main.mediaGroups[mediaType][id][labelKey]; // update URIs on the media\n\n          const newUri = this.createCloneURI_(oldMedia.resolvedUri, clone);\n          newMedia.resolvedUri = newUri;\n          newMedia.uri = newUri; // Reset playlists in the new media group.\n\n          newMedia.playlists = []; // Create new playlists in the newly cloned media group.\n\n          oldMedia.playlists.forEach((p, i) => {\n            const oldMediaPlaylist = main.playlists[p.id];\n            const group = groupID(mediaType, id, labelKey);\n            const newPlaylistID = createPlaylistID(id, group); // Check to see if it already exists\n\n            if (oldMediaPlaylist && !main.playlists[newPlaylistID]) {\n              const newMediaPlaylist = this.createClonePlaylist_(oldMediaPlaylist, newPlaylistID, clone);\n              const newPlaylistUri = newMediaPlaylist.resolvedUri;\n              main.playlists[newPlaylistID] = newMediaPlaylist;\n              main.playlists[newPlaylistUri] = newMediaPlaylist;\n            }\n            newMedia.playlists[i] = this.createClonePlaylist_(p, newPlaylistID, clone);\n          });\n        }\n      }\n    });\n  }\n  /**\n   * Using the original playlist to be cloned, and the pathway clone object\n   * information, we create a new playlist.\n   *\n   * @param {Object} basePlaylist  The original playlist to be cloned from.\n   * @param {string} id The desired id of the newly cloned playlist.\n   * @param {Object} clone The pathway clone object.\n   * @param {Object} attributes An optional object to populate the `attributes` property in the playlist.\n   *\n   * @return {Object} The combined cloned playlist.\n   */\n\n  createClonePlaylist_(basePlaylist, id, clone, attributes) {\n    const uri = this.createCloneURI_(basePlaylist.resolvedUri, clone);\n    const newProps = {\n      resolvedUri: uri,\n      uri,\n      id\n    }; // Remove all segments from previous playlist in the clone.\n\n    if (basePlaylist.segments) {\n      newProps.segments = [];\n    }\n    if (attributes) {\n      newProps.attributes = attributes;\n    }\n    return merge(basePlaylist, newProps);\n  }\n  /**\n   * Generates an updated URI for a cloned pathway based on the original\n   * pathway's URI and the paramaters from the pathway clone object in the\n   * content steering server response.\n   *\n   * @param {string} baseUri URI to be updated in the cloned pathway.\n   * @param {Object} clone The pathway clone object.\n   *\n   * @return {string} The updated URI for the cloned pathway.\n   */\n\n  createCloneURI_(baseURI, clone) {\n    const uri = new URL(baseURI);\n    uri.hostname = clone['URI-REPLACEMENT'].HOST;\n    const params = clone['URI-REPLACEMENT'].PARAMS; // Add params to the cloned URL.\n\n    for (const key of Object.keys(params)) {\n      uri.searchParams.set(key, params[key]);\n    }\n    return uri.href;\n  }\n  /**\n   * Helper function to create the attributes needed for the new clone.\n   * This mainly adds the necessary media attributes.\n   *\n   * @param {string} id The pathway clone object ID.\n   * @param {Object} oldAttributes The old attributes to compare to.\n   * @return {Object} The new attributes to add to the playlist.\n   */\n\n  createCloneAttributes_(id, oldAttributes) {\n    const attributes = {\n      ['PATHWAY-ID']: id\n    };\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(mediaType => {\n      if (oldAttributes[mediaType]) {\n        attributes[mediaType] = id;\n      }\n    });\n    return attributes;\n  }\n  /**\n   * Returns the key ID set from a playlist\n   *\n   * @param {playlist} playlist to fetch the key ID set from.\n   * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.\n   */\n\n  getKeyIdSet(playlist) {\n    if (playlist.contentProtection) {\n      const keyIds = new Set();\n      for (const keysystem in playlist.contentProtection) {\n        const keyId = playlist.contentProtection[keysystem].attributes.keyId;\n        if (keyId) {\n          keyIds.add(keyId.toLowerCase());\n        }\n      }\n      return keyIds;\n    }\n  }\n}\n\n/**\n * @file xhr.js\n */\nconst {\n  xhr: videojsXHR\n} = videojs;\nconst callbackWrapper = function (request, error, response, callback) {\n  const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n  callback(error, request);\n};\n/**\n * Iterates over the request hooks Set and calls them in order\n *\n * @param {Set} hooks the hook Set to iterate over\n * @param {Object} options the request options to pass to the xhr wrapper\n * @return the callback hook function return value, the modified or new options Object.\n */\n\nconst callAllRequestHooks = (requestSet, options) => {\n  if (!requestSet || !requestSet.size) {\n    return;\n  }\n  let newOptions = options;\n  requestSet.forEach(requestCallback => {\n    newOptions = requestCallback(newOptions);\n  });\n  return newOptions;\n};\n/**\n * Iterates over the response hooks Set and calls them in order.\n *\n * @param {Set} hooks the hook Set to iterate over\n * @param {Object} request the xhr request object\n * @param {Object} error the xhr error object\n * @param {Object} response the xhr response object\n */\n\nconst callAllResponseHooks = (responseSet, request, error, response) => {\n  if (!responseSet || !responseSet.size) {\n    return;\n  }\n  responseSet.forEach(responseCallback => {\n    responseCallback(request, error, response);\n  });\n};\nconst xhrFactory = function () {\n  const xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = merge({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n    // TODO: Remove beforeRequest in the next major release.\n\n    const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest; // onRequest and onResponse hooks as a Set, at either the player or global level.\n    // TODO: new Set added here for beforeRequest alias. Remove this when beforeRequest is removed.\n\n    const _requestCallbackSet = XhrFunction._requestCallbackSet || videojs.Vhs.xhr._requestCallbackSet || new Set();\n    const _responseCallbackSet = XhrFunction._responseCallbackSet || videojs.Vhs.xhr._responseCallbackSet;\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      videojs.log.warn('beforeRequest is deprecated, use onRequest instead.');\n      _requestCallbackSet.add(beforeRequest);\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n    const xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr; // call all registered onRequest hooks, assign new options.\n\n    const beforeRequestOptions = callAllRequestHooks(_requestCallbackSet, options); // Remove the beforeRequest function from the hooks set so stale beforeRequest functions are not called.\n\n    _requestCallbackSet.delete(beforeRequest); // xhrMethod will call XMLHttpRequest.open and XMLHttpRequest.send\n\n    const request = xhrMethod(beforeRequestOptions || options, function (error, response) {\n      // call all registered onResponse hooks\n      callAllResponseHooks(_responseCallbackSet, request, error, response);\n      return callbackWrapper(request, error, response, callback);\n    });\n    const originalAbort = request.abort;\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\nconst byterangeStr = function (byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  let byterangeEnd;\n  const byterangeStart = byterange.offset;\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\nconst segmentXhrHeaders = function (segment) {\n  const headers = {};\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n  return headers;\n};\n\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\nconst textRange = function (range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\nconst formatHexString = function (e, i) {\n  const value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\nconst formatAsciiString = function (e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\nconst createTransferableMessage = function (message) {\n  const transferable = {};\n  Object.keys(message).forEach(key => {\n    const value = message[key];\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\nconst initSegmentId = function (initSegment) {\n  const byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\nconst segmentKeyId = function (key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\nconst hexDump = data => {\n  const bytes = Array.prototype.slice.call(data);\n  const step = 16;\n  let result = '';\n  let hex;\n  let ascii;\n  for (let j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n  return result;\n};\nconst tagDump = ({\n  bytes\n}) => hexDump(bytes);\nconst textRanges = ranges => {\n  let result = '';\n  let i;\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n  return result;\n};\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n});\n\n// TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nconst SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nconst playerTimeToProgramTime = (playerTime, segment) => {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n  const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  const offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\nconst originalSegmentVideoDuration = videoTimingInfo => {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForProgramTime = (programTime, playlist) => {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  let dateTimeObject;\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segment = playlist.segments[0];\n  if (dateTimeObject < new Date(segment.dateTimeObject)) {\n    // Requested time is before stream start.\n    return null;\n  }\n  for (let i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    const nextSegmentStart = new Date(playlist.segments[i + 1].dateTimeObject);\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  const lastSegmentStart = lastSegment.dateTimeObject;\n  const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n  if (dateTimeObject > new Date(lastSegmentStart)) {\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\nconst findSegmentForPlayerTime = (time, playlist) => {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n  let segmentEnd = 0;\n  let segment;\n  for (let i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n  const lastSegment = playlist.segments[playlist.segments.length - 1];\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n    segment = lastSegment;\n  }\n  return {\n    segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\nconst getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n  let segmentDateTime;\n  let programDateTime;\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n  const segmentTimeEpoch = segmentDateTime.getTime();\n  const programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\nconst verifyProgramDateTimeTags = playlist => {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n  for (let i = 0; i < playlist.segments.length; i++) {\n    const segment = playlist.segments[i];\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\nconst getProgramTime = ({\n  playlist,\n  time = undefined,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n  const matchedSegment = findSegmentForPlayerTime(time, playlist);\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n  const programTimeObject = {\n    mediaSeconds: time\n  };\n  const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\nconst seekToProgramTime = ({\n  programTime,\n  playlist,\n  retryCount = 2,\n  seekTo,\n  pauseAfterSeek = true,\n  tech,\n  callback\n}) => {\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n  const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: `${programTime} was not found in the stream`\n    });\n  }\n  const segment = matchedSegment.segment;\n  const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: `${programTime} is not buffered yet. Try again`\n      });\n    }\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', () => {\n      seekToProgramTime({\n        programTime,\n        playlist,\n        retryCount: retryCount - 1,\n        seekTo,\n        pauseAfterSeek,\n        tech,\n        callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n  const seekToTime = segment.start + mediaOffset;\n  const seekedCallback = () => {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n  seekTo(seekToTime);\n};\n\n// which will only happen if the request is complete.\n\nconst callbackOnCompleted = (request, cb) => {\n  if (request.readyState === 4) {\n    return cb();\n  }\n  return;\n};\nconst containerRequest = (uri, xhr, cb) => {\n  let bytes = [];\n  let id3Offset;\n  let finished = false;\n  const endRequestAndCallback = function (err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n  const progressListener = function (error, request) {\n    if (finished) {\n      return;\n    }\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n    const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n    }\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n  const options = {\n    uri,\n    beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function ({\n        total,\n        loaded\n      }) {\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  const request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\nconst {\n  EventTarget\n} = videojs;\nconst dashPlaylistUnchanged = function (a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n  for (let i = 0; i < a.segments.length; i++) {\n    const aSegment = a.segments[i];\n    const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n    const aByterange = aSegment.byterange;\n    const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n  return true;\n};\n/**\n * Use the representation IDs from the mpd object to create groupIDs, the NAME is set to mandatory representation\n * ID in the parser. This allows for continuous playout across periods with the same representation IDs\n * (continuous periods as defined in DASH-IF 3.2.12). This is assumed in the mpd-parser as well. If we want to support\n * periods without continuous playback this function may need modification as well as the parser.\n */\n\nconst dashGroupId = (type, group, label, playlist) => {\n  // If the manifest somehow does not have an ID (non-dash compliant), use the label.\n  const playlistId = playlist.attributes.NAME || label;\n  return `placeholder-uri-${type}-${group}-${playlistId}`;\n};\n/**\n * Parses the main XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.mainXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\nconst parseMainXml = ({\n  mainXml,\n  srcUrl,\n  clientOffset,\n  sidxMapping,\n  previousManifest\n}) => {\n  const manifest = parse(mainXml, {\n    manifestUri: srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  });\n  addPropertiesToMain(manifest, srcUrl, dashGroupId);\n  return manifest;\n};\n/**\n * Removes any mediaGroup labels that no longer exist in the newMain\n *\n * @param {Object} update\n *         The previous mpd object being updated\n * @param {Object} newMain\n *         The new mpd object\n */\n\nconst removeOldMediaGroupLabels = (update, newMain) => {\n  forEachMediaGroup(update, (properties, type, group, label) => {\n    if (!(label in newMain.mediaGroups[type][group])) {\n      delete update.mediaGroups[type][group][label];\n    }\n  });\n};\n/**\n * Returns a new main manifest that is the result of merging an updated main manifest\n * into the original version.\n *\n * @param {Object} oldMain\n *        The old parsed mpd object\n * @param {Object} newMain\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original main manifest with the updated media\n *         playlists merged in\n */\n\nconst updateMain = (oldMain, newMain, sidxMapping) => {\n  let noChanges = true;\n  let update = merge(oldMain, {\n    // These are top level properties that can be updated\n    duration: newMain.duration,\n    minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n    timelineStarts: newMain.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (let i = 0; i < newMain.playlists.length; i++) {\n    const playlist = newMain.playlists[i];\n    if (playlist.sidx) {\n      const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n    const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n  forEachMediaGroup(newMain, (properties, type, group, label) => {\n    if (properties.playlists && properties.playlists.length) {\n      const id = properties.playlists[0].id;\n      const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate; // add new mediaGroup label if it doesn't exist and assign the new mediaGroup.\n\n        if (!(label in update.mediaGroups[type][group])) {\n          update.mediaGroups[type][group][label] = properties;\n        } // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  }); // remove mediaGroup labels and references that no longer exist in the newMain\n\n  removeOldMediaGroupLabels(update, newMain);\n  if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n  if (noChanges) {\n    return null;\n  }\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\nconst equivalentSidx = (a, b) => {\n  const neitherMap = Boolean(!a.map && !b.map);\n  const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\nconst compareSidxEntry = (playlists, oldSidxMapping) => {\n  const newSidxMapping = {};\n  for (const id in playlists) {\n    const playlist = playlists[id];\n    const currentSidxInfo = playlist.sidx;\n    if (currentSidxInfo) {\n      const key = generateSidxKey(currentSidxInfo);\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n      const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} main the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\nconst filterChangedSidxMappings = (main, oldSidxMapping) => {\n  const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n  let mediaGroupSidx = videoSidx;\n  forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n    if (properties.playlists && properties.playlists.length) {\n      const playlists = properties.playlists;\n      mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\nclass DashPlaylistLoader extends EventTarget {\n  // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n  constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n    super();\n    this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n    if (!mainPlaylistLoader) {\n      this.isMain_ = true;\n    }\n    const {\n      withCredentials = false\n    } = options;\n    this.vhs_ = vhs;\n    this.withCredentials = withCredentials;\n    this.addMetadataToTextTrack = options.addMetadataToTextTrack;\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n    this.on('minimumUpdatePeriod', () => {\n      this.refreshXml_();\n    }); // live playlist staleness timeout\n\n    this.on('mediaupdatetimeout', () => {\n      this.refreshMedia_(this.media().id);\n    });\n    this.state = 'HAVE_NOTHING';\n    this.loadedPlaylists_ = {};\n    this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The mainPlaylistLoader will be created with a string\n\n    if (this.isMain_) {\n      this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      this.mainPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n  }\n  requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n    this.request = null;\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n\n  addSidxSegments_(playlist, startingState, cb) {\n    const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(() => cb(false), 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n    const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n    const fin = (err, request) => {\n      if (this.requestErrored_(err, request, startingState)) {\n        return;\n      }\n      const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n      let sidx;\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        this.requestErrored_(e, request, startingState);\n        return;\n      }\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n    this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n      if (err) {\n        return fin(err, request);\n      }\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: `Unsupported ${container || 'unknown'} container type for sidx segment at URL: ${uri}`,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist,\n          internal: true,\n          playlistExclusionDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n      const {\n        offset,\n        length\n      } = playlist.sidx.byterange;\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n      this.request = this.vhs_.xhr({\n        uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.off();\n  }\n  hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  }\n  stopRequest() {\n    if (this.request) {\n      const oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  media(playlist) {\n    // getter\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n    const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n      playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n    }\n    const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n      return;\n    } // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n    this.addSidxSegments_(playlist, startingState, sidxChanged => {\n      // everything is ready just continue to haveMetadata\n      this.haveMetadata({\n        startingState,\n        playlist\n      });\n    });\n  }\n  haveMetadata({\n    startingState,\n    playlist\n  }) {\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MAIN_MANIFEST') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  }\n  pause() {\n    if (this.mainPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n      this.mainPlaylistLoader_.createMupOnMedia_ = null;\n    }\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    if (this.isMain_) {\n      window$1.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  }\n  load(isFinalRendition) {\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    const media = this.media();\n    if (isFinalRendition) {\n      const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(() => this.load(), delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n    if (media && !media.endList) {\n      // Check to see if this is the main loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the main manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  }\n  start() {\n    this.started = true; // We don't need to request the main manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMain_) {\n      this.mediaRequest_ = window$1.setTimeout(() => this.haveMain_(), 0);\n      return;\n    }\n    this.requestMain_((req, mainChanged) => {\n      this.haveMain_();\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.mainPlaylistLoader_.main.playlists[0]);\n      }\n    });\n  }\n  requestMain_(cb) {\n    this.request = this.vhs_.xhr({\n      uri: this.mainPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      if (this.requestErrored_(error, req)) {\n        if (this.state === 'HAVE_NOTHING') {\n          this.started = false;\n        }\n        return;\n      }\n      const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n      this.mainPlaylistLoader_.mainXml_ = req.responseText;\n      if (req.responseHeaders && req.responseHeaders.date) {\n        this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        this.mainLoaded_ = Date.now();\n      }\n      this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n      if (mainChanged) {\n        this.handleMain_();\n        this.syncClientServerClock_(() => {\n          return cb(req, mainChanged);\n        });\n        return;\n      }\n      return cb(req, mainChanged);\n    });\n  }\n  /**\n   * Parses the main xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n\n  syncClientServerClock_(done) {\n    const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n      return done();\n    }\n    if (utcTiming.method === 'DIRECT') {\n      this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, (error, req) => {\n      // disposed\n      if (!this.request) {\n        return;\n      }\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      let serverTime;\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = this.mainLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n      this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  }\n  haveMain_() {\n    this.state = 'HAVE_MAIN_MANIFEST';\n    if (this.isMain_) {\n      // We have the main playlist at this point, so\n      // trigger this to allow PlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  }\n  handleMain_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    const oldMain = this.mainPlaylistLoader_.main;\n    let newMain = parseMainXml({\n      mainXml: this.mainPlaylistLoader_.mainXml_,\n      srcUrl: this.mainPlaylistLoader_.srcUrl,\n      clientOffset: this.mainPlaylistLoader_.clientOffset_,\n      sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n      previousManifest: oldMain\n    }); // if we have an old main to compare the new main against\n\n    if (oldMain) {\n      newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n    } // only update main if we have a new main\n\n    this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n    const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n    if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n      this.mainPlaylistLoader_.srcUrl = location;\n    }\n    if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n    this.addEventStreamToMetadataTrack_(newMain);\n    return Boolean(newMain);\n  }\n  updateMinimumUpdatePeriodTimeout_() {\n    const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n    let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n      }\n      return;\n    }\n    this.createMUPTimeout_(mup);\n  }\n  createMUPTimeout_(mup) {\n    const mpl = this.mainPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(() => {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the main xml and updates the parsed main manifest\n   */\n\n  refreshXml_() {\n    this.requestMain_((req, mainChanged) => {\n      if (!mainChanged) {\n        return;\n      }\n      if (this.media_) {\n        this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n      this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n      this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n        // TODO: do we need to reload the current playlist?\n        this.refreshMedia_(this.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the main xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the main loader.\n   */\n\n  refreshMedia_(mediaID) {\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for main we have to reparse the main xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating the main manifest\n    // if this is the first time this.media_ is being set.\n    // as main was just parsed in that case.\n\n    if (this.media_ && this.isMain_) {\n      this.handleMain_();\n    }\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n    if (!this.mediaUpdateTimeout) {\n      const createMediaUpdateTimeout = () => {\n        if (this.media().endList) {\n          return;\n        }\n        this.mediaUpdateTimeout = window$1.setTimeout(() => {\n          this.trigger('mediaupdatetimeout');\n          createMediaUpdateTimeout();\n        }, refreshDelay(this.media(), Boolean(mediaChanged)));\n      };\n      createMediaUpdateTimeout();\n    }\n    this.trigger('loadedplaylist');\n  }\n  /**\n   * Takes eventstream data from a parsed DASH manifest and adds it to the metadata text track.\n   *\n   * @param {manifest} newMain the newly parsed manifest\n   */\n\n  addEventStreamToMetadataTrack_(newMain) {\n    // Only add new event stream metadata if we have a new manifest.\n    if (newMain && this.mainPlaylistLoader_.main.eventStream) {\n      // convert EventStream to ID3-like data.\n      const metadataArray = this.mainPlaylistLoader_.main.eventStream.map(eventStreamNode => {\n        return {\n          cueTime: eventStreamNode.start,\n          frames: [{\n            data: eventStreamNode.messageData\n          }]\n        };\n      });\n      this.addMetadataToTextTrack('EventStream', metadataArray, this.mainPlaylistLoader_.main.duration);\n    }\n  }\n  /**\n   * Returns the key ID set from a playlist\n   *\n   * @param {playlist} playlist to fetch the key ID set from.\n   * @return a Set of 32 digit hex strings that represent the unique keyIds for that playlist.\n   */\n\n  getKeyIdSet(playlist) {\n    if (playlist.contentProtection) {\n      const keyIds = new Set();\n      for (const keysystem in playlist.contentProtection) {\n        const defaultKID = playlist.contentProtection[keysystem].attributes['cenc:default_KID'];\n        if (defaultKID) {\n          // DASH keyIds are separated by dashes.\n          keyIds.add(defaultKID.replace(/-/g, '').toLowerCase());\n        }\n      }\n      return keyIds;\n    }\n  }\n}\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\nconst stringToArrayBuffer = string => {\n  const view = new Uint8Array(new ArrayBuffer(string.length));\n  for (let i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n  return view.buffer;\n};\n\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\nconst browserWorkerPolyFill = function (workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\nconst createObjectURL = function (str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    const blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\nconst factory = function (code) {\n  return function () {\n    const objectUrl = createObjectURL(code);\n    const worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    const terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n    return worker;\n  };\n};\nconst transform = function (code) {\n  return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n};\nconst getWorkerString = function (fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n\n/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\nconst workerCode$1 = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n\n  var Stream$8 = function () {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n      this.off = function (type, listener) {\n        var index;\n        if (!listeners[type]) {\n          return false;\n        }\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n          length = callbacks.length;\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n  Stream$8.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n  Stream$8.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n  Stream$8.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n  Stream$8.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n  Stream$8.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n  Stream$8.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n  var stream = Stream$8;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n  var getUint64$3 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$3,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Functions that generate fragmented MP4s suitable for use with Media\n   * Source Extensions.\n   */\n\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x76, 0x69, 0x64, 0x65,\n    // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n\n    AUDIO_HDLR = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0x73, 0x6f, 0x75, 0x6e,\n    // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // entry_count\n    0x00, 0x00, 0x00, 0x0c,\n    // entry_size\n    0x75, 0x72, 0x6c, 0x20,\n    // 'url' type\n    0x00,\n    // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n\n    SMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00,\n    // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n\n    STCO = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x01,\n    // flags\n    0x00, 0x00,\n    // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function (type) {\n    var payload = [],\n      size = 0,\n      i,\n      result,\n      view;\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n    return result;\n  };\n  dinf = function () {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n  esds = function (track) {\n    return box(types.esds, new Uint8Array([0x00,\n    // version\n    0x00, 0x00, 0x00,\n    // flags\n    // ES_Descriptor\n    0x03,\n    // tag, ES_DescrTag\n    0x19,\n    // length\n    0x00, 0x00,\n    // ES_ID\n    0x00,\n    // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04,\n    // tag, DecoderConfigDescrTag\n    0x11,\n    // length\n    0x40,\n    // object type\n    0x15,\n    // streamType\n    0x00, 0x06, 0x00,\n    // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0,\n    // maxBitrate\n    0x00, 0x00, 0xda, 0xc0,\n    // avgBitrate\n    // DecoderSpecificInfo\n    0x05,\n    // tag, DecoderSpecificInfoTag\n    0x02,\n    // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function () {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n  hdlr = function (type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n  mdat = function (data) {\n    return box(types.mdat, data);\n  };\n  mdhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x02,\n    // creation_time\n    0x00, 0x00, 0x00, 0x03,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n    // duration\n    0x55, 0xc4,\n    // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n    return box(types.mdhd, result);\n  };\n  mdia = function (track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n  mfhd = function (sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n    // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function (track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n  moof = function (sequenceNumber, tracks) {\n    var trackFragments = [],\n      i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n  moov = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n  mvex = function (tracks) {\n    var i = tracks.length,\n      boxes = [];\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n  mvhd = function (duration) {\n    var bytes = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    0x00, 0x00, 0x00, 0x01,\n    // creation_time\n    0x00, 0x00, 0x00, 0x02,\n    // modification_time\n    0x00, 0x01, 0x5f, 0x90,\n    // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n    // duration\n    0x00, 0x01, 0x00, 0x00,\n    // 1.0 rate\n    0x01, 0x00,\n    // 1.0 volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n\n    return box(types.mvhd, bytes);\n  };\n  sdtp = function (track) {\n    var samples = track.samples || [],\n      bytes = new Uint8Array(4 + samples.length),\n      flags,\n      i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n    return box(types.sdtp, bytes);\n  };\n  stbl = function (track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n  (function () {\n    var videoSample, audioSample;\n    stsd = function (track) {\n      return box(types.stsd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n    videoSample = function (track) {\n      var sps = track.sps || [],\n        pps = track.pps || [],\n        sequenceParameterSets = [],\n        pictureParameterSets = [],\n        i,\n        avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff,\n      // width\n      (track.height & 0xff00) >> 8, track.height & 0xff,\n      // height\n      0x00, 0x48, 0x00, 0x00,\n      // horizresolution\n      0x00, 0x48, 0x00, 0x00,\n      // vertresolution\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // compressorname\n      0x00, 0x18,\n      // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01,\n      // configurationVersion\n      track.profileIdc,\n      // AVCProfileIndication\n      track.profileCompatibility,\n      // profile_compatibility\n      track.levelIdc,\n      // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length],\n      // numOfSequenceParameterSets\n      sequenceParameterSets,\n      // \"SPS\"\n      [pps.length],\n      // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n      // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0,\n      // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n          vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n      return box.apply(null, avc1Box);\n    };\n    audioSample = function (track) {\n      return box(types.mp4a, new Uint8Array([\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01,\n      // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n      // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n      // samplesize\n      0x00, 0x00,\n      // pre_defined\n      0x00, 0x00,\n      // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n  tkhd = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x07,\n    // flags\n    0x00, 0x00, 0x00, 0x00,\n    // creation_time\n    0x00, 0x00, 0x00, 0x00,\n    // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x00,\n    // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n    // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n    // reserved\n    0x00, 0x00,\n    // layer\n    0x00, 0x00,\n    // alternate_group\n    0x01, 0x00,\n    // non-audio track volume\n    0x00, 0x00,\n    // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n    // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n    // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n  traf = function (track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x3a,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n    // version 1\n    0x00, 0x00, 0x00,\n    // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 +\n    // tfhd\n    20 +\n    // tfdt\n    8 +\n    // traf header\n    16 +\n    // mfhd\n    8 +\n    // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n  trak = function (track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n  trex = function (track) {\n    var result = new Uint8Array([0x00,\n    // version 0\n    0x00, 0x00, 0x00,\n    // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n    // track_ID\n    0x00, 0x00, 0x00, 0x01,\n    // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_duration\n    0x00, 0x00, 0x00, 0x00,\n    // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n    return box(types.trex, result);\n  };\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function (samples, offset) {\n      var durationPresent = 0,\n        sizePresent = 0,\n        flagsPresent = 0,\n        compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n      return [0x00,\n      // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n      // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n      // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function (track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n    audioTrun = function (track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n    trun$1 = function (track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n      return videoTrun(track, offset);\n    };\n  })();\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function (tracks) {\n      var fileType = ftyp(),\n        movie = moov(tracks),\n        result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function (nalUnits) {\n    var i,\n      currentNal,\n      currentFrame = [],\n      frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n  var groupFramesIntoGops = function (frames) {\n    var i,\n      currentFrame,\n      currentGop = [],\n      gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n  var extendFirstKeyFrame = function (gops) {\n    var currentGop;\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n  var createDefaultSample = function () {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n  var sampleForFrame = function (frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n  var generateSampleTable$1 = function (gops, baseDataOffset) {\n    var h,\n      i,\n      sample,\n      currentGop,\n      currentFrame,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n  var concatenateNalData = function (gops) {\n    var h,\n      i,\n      j,\n      currentGop,\n      currentFrame,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = gops.byteLength,\n      numberOfNals = gops.nalCount,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n    return data;\n  }; // generate the track's sample table from a frame\n\n  var generateSampleTableForFrame = function (frame, baseDataOffset) {\n    var sample,\n      dataOffset = baseDataOffset || 0,\n      samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n  var concatenateNalDataForFrame = function (frame) {\n    var i,\n      currentNal,\n      dataOffset = 0,\n      nalsByteLength = frame.byteLength,\n      numberOfNals = frame.length,\n      totalByteLength = nalsByteLength + 4 * numberOfNals,\n      data = new Uint8Array(totalByteLength),\n      view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n    return data;\n  };\n  var frameUtils$1 = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n  var zeroFill = function (count) {\n    var a = [];\n    while (count--) {\n      a.push(0);\n    }\n    return a;\n  };\n  var makeTable = function (metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n  var silence;\n  var silence_1 = function () {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock$2 = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var coneOfSilence = silence_1;\n  var clock$1 = clock$2;\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function (array) {\n    var i,\n      currentObj,\n      sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n  var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n      frameDuration = 0,\n      audioGapDuration = 0,\n      audioFillFrameCount = 0,\n      audioFillDuration = 0,\n      silentFrame,\n      i,\n      firstFrame;\n    if (!frames.length) {\n      return;\n    }\n    baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n    silentFrame = coneOfSilence()[track.samplerate];\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n    track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n  var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n  var generateSampleTable = function (frames) {\n    var i,\n      currentFrame,\n      samples = [];\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n  var concatenateFrameData = function (frames) {\n    var i,\n      currentFrame,\n      dataOffset = 0,\n      data = new Uint8Array(sumFrameByteLengths(frames));\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n    return data;\n  };\n  var audioFrameUtils$1 = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function (track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n  var clearDtsInfo = function (track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n      scale,\n      minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n    return baseMediaDecodeTime;\n  };\n  var trackDecodeInfo$1 = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function (bytes) {\n    var i = 0,\n      result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n      payloadType = 0,\n      payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n  var parseUserData = function (sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n  var parseCaptionPackets = function (pts, userData) {\n    var results = [],\n      i,\n      count,\n      offset,\n      data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n    count = userData[0] & 0x1f;\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n    return results;\n  };\n  var discardEmulationPreventionBytes$1 = function (data) {\n    var length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength,\n      newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n    return newData;\n  }; // exports\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // Link To Transport\n  // -----------------\n\n  var Stream$7 = stream;\n  var cea708Parser = captionPacketParser;\n  var CaptionStream$2 = function (options) {\n    options = options || {};\n    CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0),\n    // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n  CaptionStream$2.prototype = new Stream$7();\n  CaptionStream$2.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n    sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n    if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n    userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n      return;\n    } // parse out CC data packets and save them for later\n\n    newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n  CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n  CaptionStream$2.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n  CaptionStream$2.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n  CaptionStream$2.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n  CaptionStream$2.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n  CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n  CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n  CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n  CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n  CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n  };\n\n  var get708CharFromCode = function (code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n    return String.fromCharCode(newCode);\n  };\n  var within708TextBlock = function (b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n  var Cea708Window = function (windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n    return false;\n  };\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n  var Cea708Service = function (serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n  var Cea708Stream = function (options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(serviceName => {\n      serviceProps = captionServices[serviceName];\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n        self.add708Bytes(packet);\n      }\n    };\n  };\n  Cea708Stream.prototype = new Stream$7();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n      this.pushServiceBlock(serviceNum, i, blockSize);\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n    var char;\n    var charCodeArray; // Converts an array of bytes to a unicode hex string.\n\n    function toHexString(byteArray) {\n      return byteArray.map(byte => {\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n      }).join('');\n    }\n    if (isMultiByte) {\n      charCodeArray = [currentByte, nextByte];\n      i++;\n    } else {\n      charCodeArray = [currentByte];\n    } // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      // We assume any multi-byte char without a decoder is unicode.\n      if (isMultiByte) {\n        const unicode = toHexString(charCodeArray); // Takes a unicode hex string and creates a single character.\n\n        char = String.fromCharCode(parseInt(unicode, 16));\n      } else {\n        char = get708CharFromCode(extended | currentByte);\n      }\n    }\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n    win.pendingNewLine = false;\n    win.addText(char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n  };\n\n  var getCharFromCode = function (code) {\n    if (code === null) {\n      return '';\n    }\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n  // We keep track of positioning information as we go by storing the\n  // number of indentations and the tab offset in this buffer.\n\n  var createDisplayBuffer = function () {\n    var result = [],\n      i = BOTTOM_ROW + 1;\n    while (i--) {\n      result.push({\n        text: '',\n        indent: 0,\n        offset: 0\n      });\n    }\n    return result;\n  };\n  var Cea608Stream = function (field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n        } else {\n          this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1);\n        } else {\n          this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        const offset = char1 & 0x03; // For an offest value 1-3, set the offset for that caption\n        // in the non-displayed array.\n\n        this.nonDisplayed_[this.row_].offset = offset;\n        this.column_ += offset; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n          this.setRollUp(packet.pts, row);\n        }\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          const indentations = (data & 0xe) >> 1;\n          this.column_ = indentations * 4; // add to the number of indentations for positioning\n\n          this.nonDisplayed_[this.row_].indent += indentations;\n        }\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n    };\n  };\n\n  Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    const logWarning = index => {\n      this.trigger('log', {\n        level: 'warn',\n        message: 'Skipping a malformed 608 caption at index ' + index + '.'\n      });\n    };\n    const content = [];\n    this.displayed_.forEach((row, i) => {\n      if (row && row.text && row.text.length) {\n        try {\n          // remove spaces from the start and end of the string\n          row.text = row.text.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          logWarning(i);\n        } // See the below link for more details on the following fields:\n        // https://dvcs.w3.org/hg/text-tracks/raw-file/default/608toVTT/608toVTT.html#positioning-in-cea-608\n\n        if (row.text.length) {\n          content.push({\n            // The text to be displayed in the caption from this specific row, with whitespace removed.\n            text: row.text,\n            // Value between 1 and 15 representing the PAC row used to calculate line height.\n            line: i + 1,\n            // A number representing the indent position by percentage (CEA-608 PAC indent code).\n            // The value will be a number between 10 and 80. Offset is used to add an aditional\n            // value to the position if necessary.\n            position: 10 + Math.min(70, row.indent * 10) + row.offset * 2.5\n          });\n        }\n      } else if (row === undefined || row === null) {\n        logWarning(i);\n      }\n    });\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n  Cea608Stream.prototype.isNormalChar = function (char) {\n    return char >= 0x20 && char <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = {\n          text: '',\n          indent: 0,\n          offset: 0\n        };\n      }\n    }\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_].text; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_].text = baseRow;\n  };\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_].text;\n    baseRow += text;\n    this.displayed_[this.row_].text = baseRow;\n  };\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    }\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = {\n        text: '',\n        indent: 0,\n        offset: 0\n      };\n    } // shift displayed rows up\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n    this.displayed_[this.row_] = {\n      text: '',\n      indent: 0,\n      offset: 0\n    };\n  };\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_].text;\n    baseRow += text;\n    this.displayed_[this.row_].text = baseRow;\n  }; // exports\n\n  var captionStream = {\n    CaptionStream: CaptionStream$2,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and corrects\n   * decode and presentation time stamps to account for a rollover\n   * of the 33 bit value.\n   */\n\n  var Stream$6 = stream;\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n  var handleRollover$1 = function (value, reference) {\n    var direction = 1;\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n    return value;\n  };\n  var TimestampRolloverStream$1 = function (type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n    this.push = function (data) {\n      /**\n       * Rollover stream expects data from elementary stream.\n       * Elementary stream can push forward 2 types of data\n       * - Parsed Video/Audio/Timed-metadata PES (packetized elementary stream) packets\n       * - Tracks metadata from PMT (Program Map Table)\n       * Rollover stream expects pts/dts info to be available, since it stores lastDTS\n       * We should ignore non-PES packets since they may override lastDTS to undefined.\n       * lastDTS is important to signal the next segments\n       * about rollover from the previous segments.\n       */\n      if (data.type === 'metadata') {\n        this.trigger('data', data);\n        return;\n      } // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n  TimestampRolloverStream$1.prototype = new Stream$6();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  }; // Once IE11 support is dropped, this function should be removed.\n\n  var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n    if (!typedArray) {\n      return -1;\n    }\n    var currentIndex = fromIndex;\n    for (; currentIndex < typedArray.length; currentIndex++) {\n      if (typedArray[currentIndex] === element) {\n        return currentIndex;\n      }\n    }\n    return -1;\n  };\n  var typedArray = {\n    typedArrayIndexOf: typedArrayIndexOf$1\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Tools for parsing ID3 frame data\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var typedArrayIndexOf = typedArray.typedArrayIndexOf,\n    // Frames that allow different types of text encoding contain a text\n    // encoding description byte [ID3v2.4.0 section 4.]\n    textEncodingDescriptionByte = {\n      Iso88591: 0x00,\n      // ISO-8859-1, terminated with \\0.\n      Utf16: 0x01,\n      // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n      Utf16be: 0x02,\n      // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n      Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n    },\n    // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding \n    percentEncode$1 = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function (bytes, start, end) {\n      return decodeURIComponent(percentEncode$1(bytes, start, end));\n    },\n    // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591$1 = function (bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    },\n    parseSyncSafeInteger$1 = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n    frameParsers = {\n      'APIC': function (frame) {\n        var i = 1,\n          mimeTypeEndIndex,\n          descriptionEndIndex,\n          LINK_MIME_TYPE = '-->';\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parsing fields [ID3v2.4.0 section 4.14.]\n\n        mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (mimeTypeEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Mime type field (terminated with \\0)\n\n        frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n        i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n        frame.pictureType = frame.data[i];\n        i++;\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n        if (descriptionEndIndex < 0) {\n          // malformed frame\n          return;\n        } // parsing Description field (terminated with \\0)\n\n        frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n        i = descriptionEndIndex + 1;\n        if (frame.mimeType === LINK_MIME_TYPE) {\n          // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n          frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n        } else {\n          // parsing Picture Data field as binary data\n          frame.pictureData = frame.data.subarray(i, frame.data.length);\n        }\n      },\n      'T*': function (frame) {\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        } // parse text field, do not include null terminator in the frame value\n        // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n        frame.values = frame.value.split('\\0');\n      },\n      'TXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the text fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n        // frames that allow different types of encoding contain terminated text\n        // [ID3v2.4.0 section 4.]\n\n        frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n        frame.data = frame.value;\n      },\n      'W*': function (frame) {\n        // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n        frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'WXXX': function (frame) {\n        var descriptionEndIndex;\n        if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n        descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n        if (descriptionEndIndex === -1) {\n          return;\n        } // parse the description and URL fields\n\n        frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n        // if the value is followed by a string termination all the following information\n        // should be ignored [ID3v2.4.0 section 4.3]\n\n        frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n      },\n      'PRIV': function (frame) {\n        var i;\n        for (i = 0; i < frame.data.length; i++) {\n          if (frame.data[i] === 0) {\n            // parse the description and URL fields\n            frame.owner = parseIso88591$1(frame.data, 0, i);\n            break;\n          }\n        }\n        frame.privateData = frame.data.subarray(i + 1);\n        frame.data = frame.privateData;\n      }\n    };\n  var parseId3Frames$1 = function (data) {\n    var frameSize,\n      frameHeader,\n      frameStart = 10,\n      tagSize = 0,\n      frames = []; // If we don't have enough data for a header, 10 bytes, \n    // or 'ID3' in the first 3 bytes this is not a valid ID3 tag.\n\n    if (data.length < 10 || data[0] !== 'I'.charCodeAt(0) || data[1] !== 'D'.charCodeAt(0) || data[2] !== '3'.charCodeAt(0)) {\n      return;\n    } // the frame size is transmitted as a 28-bit integer in the\n    // last four bytes of the ID3 header.\n    // The most significant bit of each byte is dropped and the\n    // results concatenated to recover the actual value.\n\n    tagSize = parseSyncSafeInteger$1(data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n    // convenient for our comparisons to include it\n\n    tagSize += 10; // check bit 6 of byte 5 for the extended header flag.\n\n    var hasExtendedHeader = data[5] & 0x40;\n    if (hasExtendedHeader) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger$1(data.subarray(10, 14));\n      tagSize -= parseSyncSafeInteger$1(data.subarray(16, 20)); // clip any padding off the end\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger$1(data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        break;\n      }\n      frameHeader = String.fromCharCode(data[frameStart], data[frameStart + 1], data[frameStart + 2], data[frameStart + 3]);\n      var frame = {\n        id: frameHeader,\n        data: data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id; // parse frame values\n\n      if (frameParsers[frame.id]) {\n        // use frame specific parser\n        frameParsers[frame.id](frame);\n      } else if (frame.id[0] === 'T') {\n        // use text frame generic parser\n        frameParsers['T*'](frame);\n      } else if (frame.id[0] === 'W') {\n        // use URL link frame generic parser\n        frameParsers['W*'](frame);\n      }\n      frames.push(frame);\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    return frames;\n  };\n  var parseId3 = {\n    parseId3Frames: parseId3Frames$1,\n    parseSyncSafeInteger: parseSyncSafeInteger$1,\n    frameParsers: frameParsers\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Accepts program elementary stream (PES) data events and parses out\n   * ID3 metadata from them, if present.\n   * @see http://id3.org/id3v2.3.0\n   */\n\n  var Stream$5 = stream,\n    StreamTypes$3 = streamTypes,\n    id3 = parseId3,\n    MetadataStream;\n  MetadataStream = function (options) {\n    var settings = {\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n      // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n      // tag data that is not complete enough to be parsed\n      buffer = [],\n      // the total number of bytes currently in the buffer\n      bufferSize = 0,\n      i;\n    MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n    this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = id3.parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += id3.parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= id3.parseSyncSafeInteger(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = id3.parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n          }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n          // to be sent along.\n\n          break;\n        }\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id; // parse frame values\n\n        if (id3.frameParsers[frame.id]) {\n          // use frame specific parser\n          id3.frameParsers[frame.id](frame);\n        } else if (frame.id[0] === 'T') {\n          // use text frame generic parser\n          id3.frameParsers['T*'](frame);\n        } else if (frame.id[0] === 'W') {\n          // use URL link frame generic parser\n          id3.frameParsers['W*'](frame);\n        } // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var d = frame.data,\n            size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n      this.trigger('data', tag);\n    };\n  };\n  MetadataStream.prototype = new Stream$5();\n  var metadataStream = MetadataStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$4 = stream,\n    CaptionStream$1 = captionStream,\n    StreamTypes$2 = streamTypes,\n    TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n    // bytes\n    SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  TransportPacketStream = function () {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n      bytesInBuffer = 0;\n    TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH$1,\n        everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n  TransportPacketStream.prototype = new Stream$4();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  TransportParseStream = function () {\n    var parsePsi, parsePat, parsePmt, self;\n    TransportParseStream.prototype.init.call(this);\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n    parsePsi = function (payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n    parsePat = function (payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n    parsePmt = function (payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n    this.push = function (packet) {\n      var result = {},\n        offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n  TransportParseStream.prototype = new Stream$4();\n  TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  ElementaryStream = function () {\n    var self = this,\n      segmentHadPmt = false,\n      // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n      audio = {\n        data: [],\n        size: 0\n      },\n      timedMetadata = {\n        data: [],\n        size: 0\n      },\n      programMapTable,\n      parsePes = function (payload, pes) {\n        var ptsDtsFlags;\n        const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n        pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n        // that are frame data that is continuing from the previous fragment. This\n        // is to check that the pes data is the start of a new pes payload\n\n        if (startPrefix !== 1) {\n          return;\n        } // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function (stream, type, forceFlush) {\n        var packetData = new Uint8Array(stream.size),\n          event = {\n            type: type\n          },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream.data.length || stream.size < 9) {\n          return;\n        }\n        event.trackId = stream.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream.data.length; i++) {\n          fragment = stream.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream.size = 0;\n          stream.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n    ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n    this.push = function (data) {\n      ({\n        pat: function () {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function () {\n          var stream, streamType;\n          switch (data.streamType) {\n            case StreamTypes$2.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n            case StreamTypes$2.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n            case StreamTypes$2.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function () {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n        self.trigger('data', pmt);\n      }\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n  ElementaryStream.prototype = new Stream$4();\n  var m2ts$1 = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: TransportPacketStream,\n    TransportParseStream: TransportParseStream,\n    ElementaryStream: ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: CaptionStream$1.CaptionStream,\n    Cea608Stream: CaptionStream$1.Cea608Stream,\n    Cea708Stream: CaptionStream$1.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n  for (var type in StreamTypes$2) {\n    if (StreamTypes$2.hasOwnProperty(type)) {\n      m2ts$1[type] = StreamTypes$2[type];\n    }\n  }\n  var m2ts_1 = m2ts$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$3 = stream;\n  var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n  var AdtsStream$1;\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  AdtsStream$1 = function (handlePartialSegments) {\n    var buffer,\n      frameNum = 0;\n    AdtsStream$1.prototype.init.call(this);\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n      });\n    };\n    this.push = function (packet) {\n      var i = 0,\n        frameLength,\n        protectionSkipBytes,\n        oldBuffer,\n        sampleCount,\n        adtsFrameDuration;\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n          i++;\n          continue;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n      buffer = buffer.subarray(i);\n    };\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n  AdtsStream$1.prototype = new Stream$3();\n  var adts = AdtsStream$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb$1;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb$1 = function (workingData) {\n    var\n      // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n      // the current word being examined\n      workingWord = 0,\n      // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n        workingBytes = new Uint8Array(4),\n        availableBytes = Math.min(4, workingBytesAvailable);\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n        // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n      bits = size - bits;\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n      return valu;\n    }; // ():uint\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n    this.loadWord();\n  };\n  var expGolomb = ExpGolomb$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var Stream$2 = stream;\n  var ExpGolomb = expGolomb;\n  var H264Stream$1, NalByteStream;\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  NalByteStream = function () {\n    var syncPoint = 0,\n      i,\n      buffer;\n    NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n    this.push = function (data) {\n      var swapBuffer;\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n  NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  H264Stream$1 = function () {\n    var nalByteStream = new NalByteStream(),\n      self,\n      trackId,\n      currentPts,\n      currentDts,\n      discardEmulationPreventionBytes,\n      readSequenceParameterSet,\n      skipScalingList;\n    H264Stream$1.prototype.init.call(this);\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n    skipScalingList = function (count, expGolombDecoder) {\n      var lastScale = 8,\n        nextScale = 8,\n        j,\n        deltaScale;\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n    discardEmulationPreventionBytes = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n    readSequenceParameterSet = function (data) {\n      var frameCropLeftOffset = 0,\n        frameCropRightOffset = 0,\n        frameCropTopOffset = 0,\n        frameCropBottomOffset = 0,\n        expGolombDecoder,\n        profileIdc,\n        levelIdc,\n        profileCompatibility,\n        chromaFormatIdc,\n        picOrderCntType,\n        numRefFramesInPicOrderCntCycle,\n        picWidthInMbsMinus1,\n        picHeightInMapUnitsMinus1,\n        frameMbsOnlyFlag,\n        scalingListCount,\n        sarRatio = [1, 1],\n        aspectRatioIdc,\n        i;\n      expGolombDecoder = new ExpGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n            case 2:\n              sarRatio = [12, 11];\n              break;\n            case 3:\n              sarRatio = [10, 11];\n              break;\n            case 4:\n              sarRatio = [16, 11];\n              break;\n            case 5:\n              sarRatio = [40, 33];\n              break;\n            case 6:\n              sarRatio = [24, 11];\n              break;\n            case 7:\n              sarRatio = [20, 11];\n              break;\n            case 8:\n              sarRatio = [32, 11];\n              break;\n            case 9:\n              sarRatio = [80, 33];\n              break;\n            case 10:\n              sarRatio = [18, 11];\n              break;\n            case 11:\n              sarRatio = [15, 11];\n              break;\n            case 12:\n              sarRatio = [64, 33];\n              break;\n            case 13:\n              sarRatio = [160, 99];\n              break;\n            case 14:\n              sarRatio = [4, 3];\n              break;\n            case 15:\n              sarRatio = [3, 2];\n              break;\n            case 16:\n              sarRatio = [2, 1];\n              break;\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n  H264Stream$1.prototype = new Stream$2();\n  var h264 = {\n    H264Stream: H264Stream$1,\n    NalByteStream: NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  var parseId3TagSize = function (header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n      flags = header[byteIndex + 5],\n      footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function (data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n  var isLikelyAacData$1 = function (data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n    // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n  var parseSyncSafeInteger = function (data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n  var percentEncode = function (bytes, start, end) {\n    var i,\n      result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n  var parseIso88591 = function (bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function (header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n      middle = header[byteIndex + 4] << 3,\n      highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n  var parseType$4 = function (header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n    return null;\n  };\n  var parseSampleRate = function (packet) {\n    var i = 0;\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n    return null;\n  };\n  var parseAacTimestamp = function (packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n        return null;\n      }\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n            break;\n          }\n        }\n      }\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n    return null;\n  };\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$4,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based aac to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream$1 = stream;\n  var aacUtils = utils; // Constants\n\n  var AacStream$1;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n  AacStream$1 = function () {\n    var everything = new Uint8Array(),\n      timeStamp = 0;\n    AacStream$1.prototype.init.call(this);\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n    this.push = function (bytes) {\n      var frameSize = 0,\n        byteIndex = 0,\n        bytesLeft,\n        chunk,\n        packet,\n        tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n          frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n          frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n        byteIndex++;\n      }\n      bytesLeft = everything.length - byteIndex;\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n  AacStream$1.prototype = new Stream$1();\n  var aac = AacStream$1;\n  var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES$1;\n  var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES$1;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A stream-based mp2t to mp4 converter. This utility can be used to\n   * deliver mp4s to a SourceBuffer on platforms that support native\n   * Media Source Extensions.\n   */\n\n  var Stream = stream;\n  var mp4 = mp4Generator;\n  var frameUtils = frameUtils$1;\n  var audioFrameUtils = audioFrameUtils$1;\n  var trackDecodeInfo = trackDecodeInfo$1;\n  var m2ts = m2ts_1;\n  var clock = clock$2;\n  var AdtsStream = adts;\n  var H264Stream = h264.H264Stream;\n  var AacStream = aac;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n  var AUDIO_PROPERTIES = audioProperties;\n  var VIDEO_PROPERTIES = videoProperties; // object types\n\n  var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n  var retriggerForStream = function (key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n  var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n  var arrayEquals = function (a, b) {\n    var i;\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n      decodeDuration = endDts - startDts,\n      presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  AudioSegmentStream = function (track, options) {\n    var adtsFrames = [],\n      sequenceNumber,\n      earliestAllowedDts = 0,\n      audioAppendStartTs = 0,\n      videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    AudioSegmentStream.prototype.init.call(this);\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n      if (track) {\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n      adtsFrames.push(data);\n    };\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n        // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n        // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n  AudioSegmentStream.prototype = new Stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  VideoSegmentStream = function (track, options) {\n    var sequenceNumber,\n      nalUnits = [],\n      gopsToAlignWith = [],\n      config,\n      pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n    VideoSegmentStream.prototype.init.call(this);\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n    this.flush = function () {\n      var frames,\n        gopForFusion,\n        gops,\n        moof,\n        mdat,\n        boxes,\n        prependedContentDuration = 0,\n        firstGop,\n        lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n        // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n        // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n        dtsDistance,\n        nearestGopObj,\n        currentGop,\n        currentGopObj,\n        i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          break;\n        }\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n        gopIndex--;\n      }\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n      var trimIndex;\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n      if (trimIndex === 0) {\n        return gops;\n      }\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n  VideoSegmentStream.prototype = new Stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  CoalesceStream = function (options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n    CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.content || output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n  CoalesceStream.prototype = new Stream();\n  CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n      event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n      caption,\n      id3,\n      initSegment,\n      timelineStartPts = 0,\n      i;\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n        return;\n      }\n    }\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      VIDEO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      AUDIO_PROPERTIES.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n  CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n  Transmuxer = function (options) {\n    var self = this,\n      hasFlushed = true,\n      videoTrack,\n      audioTrack;\n    Transmuxer.prototype.init.call(this);\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new AacStream();\n      pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts.TransportPacketStream();\n      pipeline.parseStream = new m2ts.TransportParseStream();\n      pipeline.elementaryStream = new m2ts.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n      pipeline.adtsStream = new AdtsStream();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts.CaptionStream(options);\n      pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n        hasFlushed = false;\n      }\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n  Transmuxer.prototype = new Stream();\n  var transmuxer = {\n    Transmuxer: Transmuxer,\n    VideoSegmentStream: VideoSegmentStream,\n    AudioSegmentStream: AudioSegmentStream,\n    AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n    VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function (value) {\n    return value >>> 0;\n  };\n  var toHexString$1 = function (value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n  var parseType$3 = function (buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n  var parseType_1 = parseType$3;\n  var toUnsigned$2 = bin.toUnsigned;\n  var parseType$2 = parseType_1;\n  var findBox$2 = function (data, path) {\n    var results = [],\n      i,\n      size,\n      type,\n      end,\n      subresults;\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType$2(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox$2(data.subarray(i + 8, end), path.slice(1));\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n      i = end;\n    } // we've finished searching all of data\n\n    return results;\n  };\n  var findBox_1 = findBox$2;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$2 = numbers.getUint64;\n  var tfdt = function (data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$2(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n    return result;\n  };\n  var parseTfdt$2 = tfdt;\n  var parseSampleFlags$1 = function (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n  var parseSampleFlags_1 = parseSampleFlags$1;\n  var parseSampleFlags = parseSampleFlags_1;\n  var trun = function (data) {\n    var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        samples: []\n      },\n      view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      // Flag interpretation\n      dataOffsetPresent = result.flags[2] & 0x01,\n      // compare with 2nd byte of 0x1\n      firstSampleFlagsPresent = result.flags[2] & 0x04,\n      // compare with 2nd byte of 0x4\n      sampleDurationPresent = result.flags[1] & 0x01,\n      // compare with 2nd byte of 0x100\n      sampleSizePresent = result.flags[1] & 0x02,\n      // compare with 2nd byte of 0x200\n      sampleFlagsPresent = result.flags[1] & 0x04,\n      // compare with 2nd byte of 0x400\n      sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n      // compare with 2nd byte of 0x800\n      sampleCount = view.getUint32(4),\n      offset = 8,\n      sample;\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n      sampleCount--;\n    }\n    while (sampleCount--) {\n      sample = {};\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n        offset += 4;\n      }\n      result.samples.push(sample);\n    }\n    return result;\n  };\n  var parseTrun$2 = trun;\n  var tfhd = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4)\n      },\n      baseDataOffsetPresent = result.flags[2] & 0x01,\n      sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n      defaultSampleDurationPresent = result.flags[2] & 0x08,\n      defaultSampleSizePresent = result.flags[2] & 0x10,\n      defaultSampleFlagsPresent = result.flags[2] & 0x20,\n      durationIsEmpty = result.flags[0] & 0x010000,\n      defaultBaseIsMoof = result.flags[0] & 0x020000,\n      i;\n    i = 8;\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n    return result;\n  };\n  var parseTfhd$2 = tfhd;\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band CEA-708 captions out of FMP4 segments.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   */\n\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  var findBox$1 = findBox_1;\n  var parseTfdt$1 = parseTfdt$2;\n  var parseTrun$1 = parseTrun$2;\n  var parseTfhd$1 = parseTfhd$2;\n  var window$2 = window_1;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function (offset, samples) {\n    var approximateOffset = offset;\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n      approximateOffset -= sample.size;\n    }\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n  var findSeiNals = function (avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = {\n        logs: [],\n        seiNals: []\n      },\n      seiNal,\n      i,\n      length,\n      lastMatchedSample;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var parseSamples = function (truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun$1(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window$2.BigInt(sample.compositionTimeOffset);\n          currentDts += window$2.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n  var parseCaptionNals = function (segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox$1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox$1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd$1(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox$1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {Object[]} parsedCaptions[].content - A list of individual caption segments\n    * @return {String} parsedCaptions[].content.text - The visible content of the caption segment\n    * @return {Number} parsedCaptions[].content.line - The line height from 1-15 for positioning of the caption segment\n    * @return {Number} parsedCaptions[].content.position - The column indent percentage for cue positioning from 10-80\n   **/\n\n  var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n  var CaptionParser = function () {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n        return null;\n      }\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n      this.resetCaptionStream();\n    };\n    this.reset();\n  };\n  var captionParser = CaptionParser;\n  /**\n   * Returns the first string in the data array ending with a null char '\\0'\n   * @param {UInt8} data \n   * @returns the string with the null char\n   */\n\n  var uint8ToCString$1 = function (data) {\n    var index = 0;\n    var curChar = String.fromCharCode(data[index]);\n    var retString = '';\n    while (curChar !== '\\0') {\n      retString += curChar;\n      index++;\n      curChar = String.fromCharCode(data[index]);\n    } // Add nullChar\n\n    retString += curChar;\n    return retString;\n  };\n  var string = {\n    uint8ToCString: uint8ToCString$1\n  };\n  var uint8ToCString = string.uint8ToCString;\n  var getUint64$1 = numbers.getUint64;\n  /**\n   * Based on: ISO/IEC 23009 Section: 5.10.3.3\n   * References:\n   * https://dashif-documents.azurewebsites.net/Events/master/event.html#emsg-format\n   * https://aomediacodec.github.io/id3-emsg/\n   * \n   * Takes emsg box data as a uint8 array and returns a emsg box object\n   * @param {UInt8Array} boxData data from emsg box\n   * @returns A parsed emsg box object\n   */\n\n  var parseEmsgBox = function (boxData) {\n    // version + flags\n    var offset = 4;\n    var version = boxData[0];\n    var scheme_id_uri, value, timescale, presentation_time, presentation_time_delta, event_duration, id, message_data;\n    if (version === 0) {\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time_delta = dv.getUint32(offset);\n      offset += 4;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n    } else if (version === 1) {\n      var dv = new DataView(boxData.buffer);\n      timescale = dv.getUint32(offset);\n      offset += 4;\n      presentation_time = getUint64$1(boxData.subarray(offset));\n      offset += 8;\n      event_duration = dv.getUint32(offset);\n      offset += 4;\n      id = dv.getUint32(offset);\n      offset += 4;\n      scheme_id_uri = uint8ToCString(boxData.subarray(offset));\n      offset += scheme_id_uri.length;\n      value = uint8ToCString(boxData.subarray(offset));\n      offset += value.length;\n    }\n    message_data = new Uint8Array(boxData.subarray(offset, boxData.byteLength));\n    var emsgBox = {\n      scheme_id_uri,\n      value,\n      // if timescale is undefined or 0 set to 1 \n      timescale: timescale ? timescale : 1,\n      presentation_time,\n      presentation_time_delta,\n      event_duration,\n      id,\n      message_data\n    };\n    return isValidEmsgBox(version, emsgBox) ? emsgBox : undefined;\n  };\n  /**\n   * Scales a presentation time or time delta with an offset with a provided timescale\n   * @param {number} presentationTime \n   * @param {number} timescale \n   * @param {number} timeDelta \n   * @param {number} offset \n   * @returns the scaled time as a number\n   */\n\n  var scaleTime = function (presentationTime, timescale, timeDelta, offset) {\n    return presentationTime || presentationTime === 0 ? presentationTime / timescale : offset + timeDelta / timescale;\n  };\n  /**\n   * Checks the emsg box data for validity based on the version\n   * @param {number} version of the emsg box to validate\n   * @param {Object} emsg the emsg data to validate\n   * @returns if the box is valid as a boolean\n   */\n\n  var isValidEmsgBox = function (version, emsg) {\n    var hasScheme = emsg.scheme_id_uri !== '\\0';\n    var isValidV0Box = version === 0 && isDefined(emsg.presentation_time_delta) && hasScheme;\n    var isValidV1Box = version === 1 && isDefined(emsg.presentation_time) && hasScheme; // Only valid versions of emsg are 0 and 1\n\n    return !(version > 1) && isValidV0Box || isValidV1Box;\n  }; // Utility function to check if an object is defined\n\n  var isDefined = function (data) {\n    return data !== undefined || data !== null;\n  };\n  var emsg$1 = {\n    parseEmsgBox: parseEmsgBox,\n    scaleTime: scaleTime\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about MP4s.\n   */\n\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var findBox = findBox_1;\n  var parseType$1 = parseType_1;\n  var emsg = emsg$1;\n  var parseTfhd = parseTfhd$2;\n  var parseTrun = parseTrun$2;\n  var parseTfdt = parseTfdt$2;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader, getEmsgID3;\n  var window$1 = window_1;\n  var parseId3Frames = parseId3.parseId3Frames;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function (init) {\n    var result = {},\n      traks = findBox(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox(trak, ['tkhd'])[0];\n      if (!tkhd) {\n        return null;\n      }\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (!mdhd) {\n        return null;\n      }\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n  startTime = function (timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n      let seconds;\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window$1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n      if (seconds < acc) {\n        acc = seconds;\n      }\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n  compositionStartTime = function (timescales, fragment) {\n    var trafBoxes = findBox(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window$1.BigInt(compositionTimeOffset);\n      timescale = window$1.BigInt(timescale);\n    }\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n  getVideoTrackIds = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType$1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n  getTimescaleFromMediaHeader = function (mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n  getTracks = function (init) {\n    var traks = findBox(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n      var hdlr = findBox(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType$1(hdlr.subarray(8, 12));\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n      var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n      var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n      tracks.push(track);\n    });\n    return tracks;\n  };\n  /**\n   * Returns an array of emsg ID3 data from the provided segmentData.\n   * An offset can also be provided as the Latest Arrival Time to calculate \n   * the Event Start Time of v0 EMSG boxes. \n   * See: https://dashif-documents.azurewebsites.net/Events/master/event.html#Inband-event-timing\n   * \n   * @param {Uint8Array} segmentData the segment byte array.\n   * @param {number} offset the segment start time or Latest Arrival Time, \n   * @return {Object[]} an array of ID3 parsed from EMSG boxes\n   */\n\n  getEmsgID3 = function (segmentData, offset = 0) {\n    var emsgBoxes = findBox(segmentData, ['emsg']);\n    return emsgBoxes.map(data => {\n      var parsedBox = emsg.parseEmsgBox(new Uint8Array(data));\n      var parsedId3Frames = parseId3Frames(parsedBox.message_data);\n      return {\n        cueTime: emsg.scaleTime(parsedBox.presentation_time, parsedBox.timescale, parsedBox.presentation_time_delta, offset),\n        duration: emsg.scaleTime(parsedBox.event_duration, parsedBox.timescale),\n        frames: parsedId3Frames\n      };\n    });\n  };\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox,\n    parseType: parseType$1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader,\n    getEmsgID3: getEmsgID3\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about TS Segments.\n   */\n\n  var StreamTypes$1 = streamTypes;\n  var parsePid = function (packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n  var parsePayloadUnitStartIndicator = function (packet) {\n    return !!(packet[1] & 0x40);\n  };\n  var parseAdaptionField = function (packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n    return offset;\n  };\n  var parseType = function (packet, pmtPid) {\n    var pid = parsePid(packet);\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n    return null;\n  };\n  var parsePat = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n  var parsePmt = function (packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n    return programMapTable;\n  };\n  var parsePesType = function (packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n    switch (type) {\n      case StreamTypes$1.H264_STREAM_TYPE:\n        return 'video';\n      case StreamTypes$1.ADTS_STREAM_TYPE:\n        return 'audio';\n      case StreamTypes$1.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n      default:\n        return null;\n    }\n  };\n  var parsePesTime = function (packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    if (!pusi) {\n      return null;\n    }\n    var offset = 4 + parseAdaptionField(packet);\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n  var parseNalUnitType = function (type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n      case 0x06:\n        return 'sei_rbsp';\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n      default:\n        return null;\n    }\n  };\n  var videoPacketContainsKeyFrame = function (packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n    return foundKeyFrame;\n  };\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Parse mpeg2 transport stream packets to extract basic timing information\n   */\n\n  var StreamTypes = streamTypes;\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n    // bytes\n    SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function (bytes, pmt) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type;\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n  var parseAudioPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n  var parseVideoPes_ = function (bytes, pmt, result) {\n    var startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      packet,\n      type,\n      pesType,\n      pusi,\n      parsed,\n      frame,\n      i,\n      pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n                    currentFrame.size = 0;\n                  }\n                }\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n            break;\n        }\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            break;\n        }\n        if (endLoop) {\n          break;\n        }\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n  var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n  var inspectAac_ = function (bytes) {\n    var endLoop = false,\n      audioCount = 0,\n      sampleRate = null,\n      timestamp = null,\n      frameSize = 0,\n      byteIndex = 0,\n      packet;\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n          byteIndex += frameSize;\n          break;\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n        default:\n          byteIndex++;\n          break;\n      }\n      if (endLoop) {\n        return null;\n      }\n    }\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n  var inspectTs_ = function (bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n        switch (type) {\n          case StreamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n            break;\n          case StreamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n            break;\n        }\n      }\n    }\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n  var inspect = function (bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  const wireTransmuxerEvents = function (self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      const initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      const typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      const videoSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      const audioSegmentTimingInfo = {\n        start: {\n          decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n          end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n          end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n  class MessageHandlers {\n    constructor(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n    init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    }\n    pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    }\n    probeMp4StartTime({\n      timescales,\n      data\n    }) {\n      const startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime,\n        data\n      }, [data.buffer]);\n    }\n    probeMp4Tracks({\n      data\n    }) {\n      const tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks,\n        data\n      }, [data.buffer]);\n    }\n    /**\n     * Probes an mp4 segment for EMSG boxes containing ID3 data.\n     * https://aomediacodec.github.io/id3-emsg/\n     *\n     * @param {Uint8Array} data segment data\n     * @param {number} offset segment start time\n     * @return {Object[]} an array of ID3 frames\n     */\n\n    probeEmsgID3({\n      data,\n      offset\n    }) {\n      const id3Frames = probe$2.getEmsgID3(data, offset);\n      this.self.postMessage({\n        action: 'probeEmsgID3',\n        id3Frames,\n        emsgData: data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n\n    probeTs({\n      data,\n      baseStartTime\n    }) {\n      const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n      const timeInfo = tsInspector.inspect(data, tsStartTime);\n      let result = null;\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n      this.self.postMessage({\n        action: 'probeTs',\n        result,\n        data\n      }, [data.buffer]);\n    }\n    clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    }\n    clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n\n    push(data) {\n      // Cast array buffer to correct type for transmuxer\n      const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n\n    reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n\n    setTimestampOffset(data) {\n      const timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n    }\n    setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n    }\n    setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n\n    flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    }\n    endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    }\n    alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    }\n  }\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/transmuxer-worker.js */\n\nconst handleData_ = (event, transmuxedData, callback) => {\n  const {\n    type,\n    initSegment,\n    captions,\n    captionStreams,\n    metadata,\n    videoFrameDtsTime,\n    videoFramePtsTime\n  } = event.data.segment;\n  transmuxedData.buffer.push({\n    captions,\n    captionStreams,\n    metadata\n  });\n  const boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  const result = {\n    type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n  callback(result);\n};\nconst handleDone_ = ({\n  transmuxedData,\n  callback\n}) => {\n  // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\nconst handleGopInfo_ = (event, transmuxedData) => {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\nconst processTransmux = options => {\n  const {\n    transmuxer,\n    bytes,\n    audioAppendStart,\n    gopsToAlignWith,\n    remux,\n    onData,\n    onTrackInfo,\n    onAudioTimingInfo,\n    onVideoTimingInfo,\n    onVideoSegmentTimingInfo,\n    onAudioSegmentTimingInfo,\n    onId3,\n    onCaptions,\n    onDone,\n    onEndedTimeline,\n    onTransmuxerLog,\n    isEndOfTimeline\n  } = options;\n  const transmuxedData = {\n    buffer: []\n  };\n  let waitForEndedTimelineEvent = isEndOfTimeline;\n  const handleMessage = event => {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith\n    });\n  }\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux\n    });\n  }\n  if (bytes.byteLength) {\n    const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\nconst dequeue = transmuxer => {\n  transmuxer.currentTransmux = null;\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\nconst processAction = (transmuxer, action) => {\n  transmuxer.postMessage({\n    action\n  });\n  dequeue(transmuxer);\n};\nconst enqueueAction = (action, transmuxer) => {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\nconst reset = transmuxer => {\n  enqueueAction('reset', transmuxer);\n};\nconst endTimeline = transmuxer => {\n  enqueueAction('endTimeline', transmuxer);\n};\nconst transmux = options => {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n  options.transmuxer.transmuxQueue.push(options);\n};\nconst createTransmuxer = options => {\n  const transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  const term = transmuxer.terminate;\n  transmuxer.terminate = () => {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n  transmuxer.postMessage({\n    action: 'init',\n    options\n  });\n  return transmuxer;\n};\nvar segmentTransmuxer = {\n  reset,\n  endTimeline,\n  transmux,\n  createTransmuxer\n};\nconst workerCallback = function (options) {\n  const transmuxer = options.transmuxer;\n  const endAction = options.endAction || options.action;\n  const callback = options.callback;\n  const message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n  const listenForEndEvent = event => {\n    if (event.data.action !== endAction) {\n      return;\n    }\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n    callback(event.data);\n  };\n  transmuxer.addEventListener('message', listenForEndEvent);\n  if (options.data) {\n    const isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\nconst REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nconst abortAll = activeXhrs => {\n  activeXhrs.forEach(xhr => {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\nconst getRequestStats = request => {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\nconst getProgressStats = progressEvent => {\n  const request = progressEvent.target;\n  const roundTripTime = Date.now() - request.requestTime;\n  const stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\nconst handleErrors = (error, request) => {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleKeyResponse = (segment, objects, finishProcessingFn) => (error, request) => {\n  const response = request.response;\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  if (response.byteLength !== 16) {\n    return finishProcessingFn({\n      status: request.status,\n      message: 'Invalid HLS key at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    }, segment);\n  }\n  const view = new DataView(response);\n  const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n  for (let i = 0; i < objects.length; i++) {\n    objects[i].bytes = bytes;\n  }\n  return finishProcessingFn(null, segment);\n};\nconst parseInitSegment = (segment, callback) => {\n  const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    const uri = segment.map.resolvedUri || segment.map.uri;\n    return callback({\n      internal: true,\n      message: `Found unsupported ${type || 'unknown'} container for initialization segment at URL: ${uri}`,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: ({\n      tracks,\n      data\n    }) => {\n      // transfer bytes back to us\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n        segment.map.tracks[track.type] = track;\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleInitSegmentResponse = ({\n  segment,\n  finishProcessingFn\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n  // until the key request is done to decrypt.\n\n  if (segment.map.key) {\n    segment.map.encryptedBytes = bytes;\n    return finishProcessingFn(null, segment);\n  }\n  segment.map.bytes = bytes;\n  parseInitSegment(segment, function (parseError) {\n    if (parseError) {\n      parseError.xhr = request;\n      parseError.status = request.status;\n      return finishProcessingFn(parseError, segment);\n    }\n    finishProcessingFn(null, segment);\n  });\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\nconst handleSegmentResponse = ({\n  segment,\n  finishProcessingFn,\n  responseType\n}) => (error, request) => {\n  const errorObj = handleErrors(error, request);\n  if (errorObj) {\n    return finishProcessingFn(errorObj, segment);\n  }\n  const newBytes =\n  // although responseText \"should\" exist, this guard serves to prevent an error being\n  // thrown for two primary cases:\n  // 1. the mime type override stops working, or is not implemented for a specific\n  //    browser\n  // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n  responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n  segment.stats = getRequestStats(request);\n  if (segment.key) {\n    segment.encryptedBytes = new Uint8Array(newBytes);\n  } else {\n    segment.bytes = new Uint8Array(newBytes);\n  }\n  return finishProcessingFn(null, segment);\n};\nconst transmuxAndNotify = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const fmp4Tracks = segment.map && segment.map.tracks || {};\n  const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n  const finish = () => transmux({\n    bytes,\n    transmuxer: segment.transmuxer,\n    audioAppendStart: segment.audioAppendStart,\n    gopsToAlignWith: segment.gopsToAlignWith,\n    remux: isMuxed,\n    onData: result => {\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      dataFn(segment, result);\n    },\n    onTrackInfo: trackInfo => {\n      if (trackInfoFn) {\n        if (isMuxed) {\n          trackInfo.isMuxed = true;\n        }\n        trackInfoFn(segment, trackInfo);\n      }\n    },\n    onAudioTimingInfo: audioTimingInfo => {\n      // we only want the first start value we encounter\n      if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n        audioStartFn(audioTimingInfo.start);\n        audioStartFn = null;\n      } // we want to continually update the end time\n\n      if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n        audioEndFn(audioTimingInfo.end);\n      }\n    },\n    onVideoTimingInfo: videoTimingInfo => {\n      // we only want the first start value we encounter\n      if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n        videoStartFn(videoTimingInfo.start);\n        videoStartFn = null;\n      } // we want to continually update the end time\n\n      if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n        videoEndFn(videoTimingInfo.end);\n      }\n    },\n    onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n      videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n    },\n    onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n      audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n    },\n    onId3: (id3Frames, dispatchType) => {\n      id3Fn(segment, id3Frames, dispatchType);\n    },\n    onCaptions: captions => {\n      captionsFn(segment, [captions]);\n    },\n    isEndOfTimeline,\n    onEndedTimeline: () => {\n      endedTimelineFn();\n    },\n    onTransmuxerLog,\n    onDone: result => {\n      if (!doneFn) {\n        return;\n      }\n      result.type = result.type === 'combined' ? 'video' : result.type;\n      doneFn(null, segment, result);\n    }\n  }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: data => {\n      segment.bytes = bytes = data.data;\n      const probeResult = data.result;\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed\n        });\n        trackInfoFn = null;\n      }\n      finish();\n    }\n  });\n};\nconst handleSegmentBytes = ({\n  segment,\n  bytes,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only exclude a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    const {\n      tracks\n    } = segment.map;\n    const trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    const finishLoading = (captions, id3Frames) => {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n      if (id3Frames && id3Frames.length) {\n        id3Fn(segment, id3Frames);\n      }\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n      doneFn(null, segment, {});\n    };\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        data,\n        startTime\n      }) => {\n        // transfer bytes back to us\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        }\n        workerCallback({\n          action: 'probeEmsgID3',\n          data: bytesAsUint8Array,\n          transmuxer: segment.transmuxer,\n          offset: startTime,\n          callback: ({\n            emsgData,\n            id3Frames\n          }) => {\n            // transfer bytes back to us\n            bytes = emsgData.buffer;\n            segment.bytes = bytesAsUint8Array = emsgData; // Run through the CaptionParser in case there are captions.\n            // Initialize CaptionParser if it hasn't been yet\n\n            if (!tracks.video || !emsgData.byteLength || !segment.transmuxer) {\n              finishLoading(undefined, id3Frames);\n              return;\n            }\n            workerCallback({\n              action: 'pushMp4Captions',\n              endAction: 'mp4Captions',\n              transmuxer: segment.transmuxer,\n              data: bytesAsUint8Array,\n              timescales: segment.map.timescales,\n              trackIds: [tracks.video.id],\n              callback: message => {\n                // transfer bytes back to us\n                bytes = message.data.buffer;\n                segment.bytes = bytesAsUint8Array = message.data;\n                message.logs.forEach(function (log) {\n                  onTransmuxerLog(merge(log, {\n                    stream: 'mp4CaptionParser'\n                  }));\n                });\n                finishLoading(message.captions, id3Frames);\n              }\n            });\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n  transmuxAndNotify({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  });\n};\nconst decrypt = function ({\n  id,\n  key,\n  encryptedBytes,\n  decryptionWorker\n}, callback) {\n  const decryptionHandler = event => {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      const decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  let keyBytes;\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\nconst decryptSegment = ({\n  decryptionWorker,\n  segment,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker\n  }, decryptedBytes => {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment,\n      bytes: segment.bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\nconst waitForCompletion = ({\n  activeXhrs,\n  decryptionWorker,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  let count = 0;\n  let didError = false;\n  return (error, segment) => {\n    if (didError) {\n      return;\n    }\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n    count += 1;\n    if (count === activeXhrs.length) {\n      const segmentFinish = function () {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker,\n            segment,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n        handleSegmentBytes({\n          segment,\n          bytes: segment.bytes,\n          trackInfoFn,\n          timingInfoFn,\n          videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn,\n          id3Fn,\n          captionsFn,\n          isEndOfTimeline,\n          endedTimelineFn,\n          dataFn,\n          doneFn,\n          onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n      segment.endOfAllRequests = Date.now();\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, decryptedBytes => {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, parseError => {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n            segmentFinish();\n          });\n        });\n      }\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\nconst handleLoadEnd = ({\n  loadendState,\n  abortFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n    abortFn();\n    loadendState.calledAbortFn = true;\n  }\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\nconst handleProgress = ({\n  segment,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn\n}) => event => {\n  const request = event.target;\n  if (request.aborted) {\n    return;\n  }\n  segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n  if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n    segment.stats.firstBytesReceivedAt = Date.now();\n  }\n  return progressFn(event, segment);\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\nconst mediaSegmentRequest = ({\n  xhr,\n  xhrOptions,\n  decryptionWorker,\n  segment,\n  abortFn,\n  progressFn,\n  trackInfoFn,\n  timingInfoFn,\n  videoSegmentTimingInfoFn,\n  audioSegmentTimingInfoFn,\n  id3Fn,\n  captionsFn,\n  isEndOfTimeline,\n  endedTimelineFn,\n  dataFn,\n  doneFn,\n  onTransmuxerLog\n}) => {\n  const activeXhrs = [];\n  const finishProcessingFn = waitForCompletion({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    const objects = [segment.key];\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n    const keyRequestOptions = merge(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n  if (segment.map && !segment.map.bytes) {\n    const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n    if (differentMapKey) {\n      const mapKeyRequestOptions = merge(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n    const initSegmentOptions = merge(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    const initSegmentRequestCallback = handleInitSegmentResponse({\n      segment,\n      finishProcessingFn\n    });\n    const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n  const segmentRequestOptions = merge(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  const segmentRequestCallback = handleSegmentResponse({\n    segment,\n    finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  const loadendState = {};\n  activeXhrs.forEach(activeXhr => {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState,\n      abortFn\n    }));\n  });\n  return () => abortAll(activeXhrs);\n};\n\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\nconst logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nconst getCodecs = function (media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  const mediaAttributes = media.attributes || {};\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\nconst isMaat = (main, media) => {\n  const mediaAttributes = media.attributes || {};\n  return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\nconst isMuxed = (main, media) => {\n  if (!isMaat(main, media)) {\n    return true;\n  }\n  const mediaAttributes = media.attributes || {};\n  const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  for (const groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n  return false;\n};\nconst unwrapCodecList = function (codecList) {\n  const codecs = {};\n  codecList.forEach(({\n    mediaType,\n    type,\n    details\n  }) => {\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n      codecs[mediaType] = null;\n      return;\n    }\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\nconst codecCount = function (codecObj) {\n  let count = 0;\n  if (codecObj.audio) {\n    count++;\n  }\n  if (codecObj.video) {\n    count++;\n  }\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a main playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param main {Object} the m3u8 object for the main playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\nconst codecsForPlaylist = function (main, media) {\n  const mediaAttributes = media.attributes || {};\n  const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(main, media) && !codecInfo.audio) {\n    if (!isMuxed(main, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n  return codecInfo;\n};\nconst logFn = logger('PlaylistSelector');\nconst representationToString = function (representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n  const playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\nconst safeGetComputedStyle = function (el, property) {\n  if (!el) {\n    return '';\n  }\n  const result = window$1.getComputedStyle(el);\n  if (!result) {\n    return '';\n  }\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\nconst stableSort = function (array, sortFn) {\n  const newArray = array.slice();\n  array.sort(function (left, right) {\n    const cmp = sortFn(left, right);\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistBandwidth = function (left, right) {\n  let leftBandwidth;\n  let rightBandwidth;\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\nconst comparePlaylistResolution = function (left, right) {\n  let leftWidth;\n  let rightWidth;\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} main\n *        Object representation of the main manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} playlistController\n *        the current playlistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nlet simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n  // If we end up getting called before `main` is available, exit early\n  if (!main) {\n    return;\n  }\n  const options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions\n  };\n  let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(main)) {\n    playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n  let sortedPlaylistReps = playlists.map(playlist => {\n    let bandwidth;\n    const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth,\n      width,\n      height,\n      playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n  const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n  let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n  const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n  stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n  const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  let resolutionPlusOneList;\n  let resolutionPlusOneSmallest;\n  let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n  }\n  let leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (playlistController.leastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    const leastPixelDiffList = haveResolution.map(rep => {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, (left, right) => {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n  const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  if (chosenRep && chosenRep.playlist) {\n    let type = 'sortedPlaylistReps';\n    if (leastPixelDiffRep) {\n      type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      type = 'enabledPlaylistReps';\n    }\n    logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n    return chosenRep.playlist;\n  }\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\nconst lastBandwidthSelector = function () {\n  const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\nconst movingAverageBandwidthSelector = function (decay) {\n  let average = -1;\n  let lastSystemBandwidth = -1;\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n  return function () {\n    const pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n    return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.main\n *        Object representation of the main manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\nconst minRebufferMaxBandwidthSelector = function (settings) {\n  const {\n    main,\n    currentTime,\n    bandwidth,\n    duration,\n    segmentDuration,\n    timeUntilRebuffer,\n    currentTimeline,\n    syncController\n  } = settings; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n  // api or excluded temporarily due to playback errors.\n\n  let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been excluded or disabled\n    // by the user through the representations api. In this case, ignore exclusion and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n  }\n  const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n    const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    const numRequests = syncPoint ? 1 : 2;\n    const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist,\n      rebufferingImpact\n    };\n  });\n  const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n  stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\nconst lowestBitrateCompatibleVariantSelector = function () {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n  return playlistsWithVideo[0] || null;\n};\n\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\nconst concatSegments = segmentObj => {\n  let offset = 0;\n  let tempBuffer;\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(segment => {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n  return tempBuffer;\n};\n\n/**\n * @file text-tracks.js\n */\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\nconst createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n    const track = tech.textTracks().getTrackById(instreamId);\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      let label = captionStream;\n      let language = captionStream;\n      let def = false;\n      const captionService = captionServices[instreamId];\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService.default;\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        default: def,\n        label,\n        language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\nconst addCaptionData = function ({\n  inbandTextTracks,\n  captionArray,\n  timestampOffset\n}) {\n  if (!captionArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(caption => {\n    const track = caption.stream; // in CEA 608 captions, video.js/mux.js sends a content array\n    // with positioning data\n\n    if (caption.content) {\n      caption.content.forEach(value => {\n        const cue = new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, value.text);\n        cue.line = value.line;\n        cue.align = 'left';\n        cue.position = value.position;\n        cue.positionAlign = 'line-left';\n        inbandTextTracks[track].addCue(cue);\n      });\n    } else {\n      // otherwise, a text value with combined captions is sent\n      inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n    }\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\nconst deprecateOldCue = function (cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\nconst addMetadata = ({\n  inbandTextTracks,\n  metadataArray,\n  timestampOffset,\n  videoDuration\n}) => {\n  if (!metadataArray) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  metadataArray.forEach(metadata => {\n    const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    } // If we have no frames, we can't create a cue.\n\n    if (!metadata.frames || !metadata.frames.length) {\n      return;\n    }\n    metadata.frames.forEach(frame => {\n      const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n  const cues = metadataTrack.cues;\n  const cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (let i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n  const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n    const timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach((startTime, idx) => {\n    const cueGroup = cuesGroupedByStartTime[startTime];\n    const finiteDuration = isFinite(videoDuration) ? videoDuration : startTime;\n    const nextTime = Number(sortedStartTimes[idx + 1]) || finiteDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(cue => {\n      cue.endTime = nextTime;\n    });\n  });\n}; // object for mapping daterange attributes\n\nconst dateRangeAttr = {\n  id: 'ID',\n  class: 'CLASS',\n  startDate: 'START-DATE',\n  duration: 'DURATION',\n  endDate: 'END-DATE',\n  endOnNext: 'END-ON-NEXT',\n  plannedDuration: 'PLANNED-DURATION',\n  scte35Out: 'SCTE35-OUT',\n  scte35In: 'SCTE35-IN'\n};\nconst dateRangeKeysToOmit = new Set(['id', 'class', 'startDate', 'duration', 'endDate', 'endOnNext', 'startTime', 'endTime', 'processDateRange']);\n/**\n * Add DateRange metadata text track to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} dateRanges parsed media playlist\n * @private\n */\n\nconst addDateRangeMetadata = ({\n  inbandTextTracks,\n  dateRanges\n}) => {\n  const metadataTrack = inbandTextTracks.metadataTrack_;\n  if (!metadataTrack) {\n    return;\n  }\n  const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  dateRanges.forEach(dateRange => {\n    // we generate multiple cues for each date range with different attributes\n    for (const key of Object.keys(dateRange)) {\n      if (dateRangeKeysToOmit.has(key)) {\n        continue;\n      }\n      const cue = new Cue(dateRange.startTime, dateRange.endTime, '');\n      cue.id = dateRange.id;\n      cue.type = 'com.apple.quicktime.HLS';\n      cue.value = {\n        key: dateRangeAttr[key],\n        data: dateRange[key]\n      };\n      if (key === 'scte35Out' || key === 'scte35In') {\n        cue.value.data = new Uint8Array(cue.value.data.match(/[\\da-f]{2}/gi)).buffer;\n      }\n      metadataTrack.addCue(cue);\n    }\n    dateRange.processDateRange();\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\nconst createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  if (!videojs.browser.IS_ANY_SAFARI) {\n    inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n  }\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\nconst removeCuesFromTrack = function (start, end, track) {\n  let i;\n  let cue;\n  if (!track) {\n    return;\n  }\n  if (!track.cues) {\n    return;\n  }\n  i = track.cues.length;\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\nconst removeDuplicateCuesFromTrack = function (track) {\n  const cues = track.cues;\n  if (!cues) {\n    return;\n  }\n  const uniqueCues = {};\n  for (let i = cues.length - 1; i >= 0; i--) {\n    const cue = cues[i];\n    const cueKey = `${cue.startTime}-${cue.endTime}-${cue.text}`;\n    if (uniqueCues[cueKey]) {\n      track.removeCue(cue);\n    } else {\n      uniqueCues[cueKey] = cue;\n    }\n  }\n};\n\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\nconst gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n  const currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  let i;\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\nconst updateGopBuffer = (buffer, gops, replace) => {\n  if (!gops.length) {\n    return buffer;\n  }\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n  const start = gops[0].pts;\n  let i = 0;\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\nconst removeGopBuffer = (buffer, start, end, mapping) => {\n  const startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  const endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  const updatedBuffer = buffer.slice();\n  let i = buffer.length;\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n  let j = i + 1;\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\nconst shallowEqual = function (a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n  const akeys = Object.keys(a).sort();\n  const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n  for (let i = 0; i < akeys.length; i++) {\n    const key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n};\n\n// https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\nconst QUOTA_EXCEEDED_ERR = 22;\n\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nconst getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  const timelineSegments = [];\n  let time = 0;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\nconst MIN_BACK_BUFFER = 1; // in ms\n\nconst CHECK_BUFFER_DELAY = 500;\nconst finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\nconst MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\nconst illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\nconst safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n  const maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\nconst segmentInfoString = segmentInfo => {\n  const {\n    startOfSegment,\n    duration,\n    segment,\n    part,\n    playlist: {\n      mediaSequence: seq,\n      id,\n      segments = []\n    },\n    mediaIndex: index,\n    partIndex,\n    timeline\n  } = segmentInfo;\n  const segmentLen = segments.length - 1;\n  let selection = 'mediaIndex/partIndex increment';\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n  if (segmentInfo.independent) {\n    selection += ` with independent ${segmentInfo.independent}`;\n  }\n  const hasPartIndex = typeof partIndex === 'number';\n  const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n};\nconst timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\nconst timestampOffsetForSegment = ({\n  segmentTimeline,\n  currentTimeline,\n  startOfSegment,\n  buffered,\n  overrideCheck\n}) => {\n  // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\nconst shouldWaitForTimelineChange = ({\n  timelineChangeController,\n  currentTimeline,\n  segmentTimeline,\n  loaderType,\n  audioDisabled\n}) => {\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n  if (loaderType === 'audio') {\n    const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n  if (loaderType === 'main' && audioDisabled) {\n    const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n    return true;\n  }\n  return false;\n};\nconst mediaDuration = timingInfos => {\n  let maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n    if (!typeTimingInfo) {\n      return;\n    }\n    const {\n      start,\n      end\n    } = typeTimingInfo;\n    let duration;\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n  return maxDuration;\n};\nconst segmentTooLong = ({\n  segmentDuration,\n  maxDuration\n}) => {\n  // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\nconst getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n  const segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n  const targetDuration = segmentInfo.playlist.targetDuration;\n  const isSegmentWayTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  const isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration,\n    maxDuration: targetDuration\n  });\n  const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass SegmentLoader extends videojs.EventTarget {\n  constructor(settings, options = {}) {\n    super(); // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n    this.bandwidth = settings.bandwidth;\n    this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    this.roundTrip = NaN;\n    this.resetStats_();\n    this.mediaIndex = null;\n    this.partIndex = null; // private settings\n\n    this.hasPlayed_ = settings.hasPlayed;\n    this.currentTime_ = settings.currentTime;\n    this.seekable_ = settings.seekable;\n    this.seeking_ = settings.seeking;\n    this.duration_ = settings.duration;\n    this.mediaSource_ = settings.mediaSource;\n    this.vhs_ = settings.vhs;\n    this.loaderType_ = settings.loaderType;\n    this.currentMediaInfo_ = void 0;\n    this.startingMediaInfo_ = void 0;\n    this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    this.goalBufferLength_ = settings.goalBufferLength;\n    this.sourceType_ = settings.sourceType;\n    this.sourceUpdater_ = settings.sourceUpdater;\n    this.inbandTextTracks_ = settings.inbandTextTracks;\n    this.state_ = 'INIT';\n    this.timelineChangeController_ = settings.timelineChangeController;\n    this.shouldSaveSegmentTimingInfo_ = true;\n    this.parse708captions_ = settings.parse708captions;\n    this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    this.captionServices_ = settings.captionServices;\n    this.exactManifestTimings = settings.exactManifestTimings;\n    this.addMetadataToTextTrack = settings.addMetadataToTextTrack; // private instance variables\n\n    this.checkBufferTimeout_ = null;\n    this.error_ = void 0;\n    this.currentTimeline_ = -1;\n    this.shouldForceTimestampOffsetAfterResync_ = false;\n    this.pendingSegment_ = null;\n    this.xhrOptions_ = null;\n    this.pendingSegments_ = [];\n    this.audioDisabled_ = false;\n    this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    this.gopBuffer_ = [];\n    this.timeMapping_ = 0;\n    this.safeAppend_ = false;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    this.loadQueue_ = [];\n    this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    this.waitingOnRemove_ = false;\n    this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    this.activeInitSegmentId_ = null;\n    this.initSegments_ = {}; // HLSe playback\n\n    this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    this.keyCache_ = {};\n    this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    this.syncController_ = settings.syncController;\n    this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    this.transmuxer_ = this.createTransmuxer_();\n    this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n    this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    this.mediaSource_.addEventListener('sourceopen', () => {\n      if (!this.isEndOfStream_()) {\n        this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n    this.fetchAtBuffer_ = false;\n    this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n    Object.defineProperty(this, 'state', {\n      get() {\n        return this.state_;\n      },\n      set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(`${this.state_} -> ${newState}`);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n    this.sourceUpdater_.on('ready', () => {\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'main') {\n      this.timelineChangeController_.on('pendingtimelinechange', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n    if (this.loaderType_ === 'audio') {\n      this.timelineChangeController_.on('timelinechange', () => {\n        if (this.hasEnoughInfoToLoad_()) {\n          this.processLoadQueue_();\n        }\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      });\n    }\n  }\n  createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n  resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n    this.resetStats_();\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n    this.off();\n  }\n  setAudio(enable) {\n    this.audioDisabled_ = !enable;\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n\n  abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n      return;\n    }\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n\n  abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  }\n  checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n\n  error(error) {\n    if (typeof error !== 'undefined') {\n      this.logger_('error occurred:', error);\n      this.error_ = error;\n    }\n    this.pendingSegment_ = null;\n    return this.error_;\n  }\n  endOfStream() {\n    this.ended_ = true;\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    const trackInfo = this.getMediaInfo_();\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return createTimeRanges();\n    }\n    if (this.loaderType_ === 'main') {\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n\n  segmentKey(key, set = false) {\n    if (!key) {\n      return null;\n    }\n    const id = segmentKeyId(key);\n    let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n    const result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n\n  load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n\n  playlist(newPlaylist, options = {}) {\n    if (!newPlaylist) {\n      return;\n    }\n    const oldPlaylist = this.playlist_;\n    const segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n    let oldId = null;\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n    this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`);\n    this.syncController_.updateMediaSequenceMap(newPlaylist, this.currentTime_(), this.loaderType_); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // We only want to reset the loader here for LLHLS playback, as resetLoader sets fetchAtBuffer_\n        // to false, resulting in fetching segments at currentTime and causing repeated\n        // same-segment requests on playlist change. This erroneously drives up the playback watcher\n        // stalled segment count, as re-requesting segments at the currentTime or browser cached segments\n        // will not change the buffer.\n        // Reference for LLHLS fixes: https://github.com/videojs/http-streaming/pull/1201\n        const isLLHLS = !newPlaylist.endList && typeof newPlaylist.partTargetDuration === 'number';\n        if (isLLHLS) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          const mediaIndex = this.mediaIndex;\n          this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n\n  pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n\n  paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n\n  resetEverything(done) {\n    this.ended_ = false;\n    this.activeInitSegmentId_ = null;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n\n  resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n\n  resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.shouldForceTimestampOffsetAfterResync_ = true;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n\n  remove(start, end, done = () => {}, force = false) {\n    // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n    let removesRemaining = 1;\n    const removeFinished = () => {\n      removesRemaining--;\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n    for (const track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n\n  monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n\n  monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n\n  isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n    const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n\n  chooseNextRequest_() {\n    const buffered = this.buffered_();\n    const bufferedEnd = lastBufferedEnd(buffered) || 0;\n    const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    const segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_(), this.loaderType_);\n    const next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n      this.logger_(`choose next request. Can not find sync point. Fallback to media Index: ${next.mediaIndex}`);\n    } else if (this.mediaIndex !== null) {\n      const segment = segments[this.mediaIndex];\n      const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      const {\n        segmentIndex,\n        startTime,\n        partIndex\n      } = Playlist.getMediaInfoForTime({\n        exactManifestTimings: this.exactManifestTimings,\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      });\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${bufferedEnd}` : `currentTime ${this.currentTime_()}`;\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = partIndex;\n      this.logger_(`choose next request. Playlist switched and we have a sync point. Media Index: ${next.mediaIndex} `);\n    }\n    const nextSegment = segments[next.mediaIndex];\n    let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // independentSegments applies to every segment in a playlist. If independentSegments appears in a main playlist,\n    // it applies to each segment in each media playlist.\n    // https://datatracker.ietf.org/doc/html/draft-pantos-http-live-streaming-23#section-4.3.5.1\n\n    const hasIndependentSegments = this.vhs_.playlists && this.vhs_.playlists.main && this.vhs_.playlists.main.independentSegments || this.playlist_.independentSegments; // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n    if (!bufferedTime && nextPart && !hasIndependentSegments && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        const lastSegment = segments[next.mediaIndex - 1];\n        const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n    const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n    if (this.shouldForceTimestampOffsetAfterResync_) {\n      this.shouldForceTimestampOffsetAfterResync_ = false;\n      next.forceTimestampOffset = true;\n      this.logger_('choose next request. Force timestamp offset after loader resync');\n    }\n    return this.generateSegmentInfo_(next);\n  }\n  generateSegmentInfo_(options) {\n    const {\n      independent,\n      playlist,\n      mediaIndex,\n      startOfSegment,\n      isSyncRequest,\n      partIndex,\n      forceTimestampOffset,\n      getMediaInfoForTime\n    } = options;\n    const segment = playlist.segments[mediaIndex];\n    const part = typeof partIndex === 'number' && segment.parts[partIndex];\n    const segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest,\n      startOfSegment,\n      // the segment's playlist\n      playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment,\n      part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime,\n      independent\n    };\n    const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck\n    });\n    const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n      // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n\n  timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n\n  earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() ||\n    // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout ||\n    // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n    const currentTime = this.currentTime_();\n    const measuredBandwidth = stats.bandwidth;\n    const segmentDuration = this.pendingSegment_.duration;\n    const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n    const switchCandidate = minRebufferMaxBandwidthSelector({\n      main: this.vhs_.playlists.main,\n      currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n    if (!switchCandidate) {\n      return;\n    }\n    const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  }\n  handleAbort_(segmentInfo) {\n    this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n\n  handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    this.trigger('progress');\n  }\n  handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  }\n  handleCaptions_(simpleSegment, captionData) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n    const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    const captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(caption => {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      const captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(trackName => {\n      const {\n        startTime,\n        endTime,\n        captions\n      } = captionTracks[trackName];\n      const inbandTextTracks = this.inbandTextTracks_;\n      this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n      createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks,\n        timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n    this.addMetadataToTextTrack(dispatchType, id3Frames, this.duration_());\n  }\n  processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(fn => fn());\n    this.metadataQueue_.caption.forEach(fn => fn());\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  }\n  processCallQueue_() {\n    const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(fun => fun());\n  }\n  processLoadQueue_() {\n    const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(fun => fun());\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n\n  hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n    const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n    if (\n    // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  }\n  getMediaInfo_(segmentInfo = this.pendingSegment_) {\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  }\n  getPendingSegmentPlaylist() {\n    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;\n  }\n  hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n    const segmentInfo = this.pendingSegment_;\n    const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n    return true;\n  }\n  handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      const trackInfo = this.getCurrentMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      let firstVideoFrameTimeForData;\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo,\n        firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  }\n  updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n    // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  }\n  getInitSegmentAndUpdateState_({\n    type,\n    initSegment,\n    map,\n    playlist\n  }) {\n    // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n    if (map) {\n      const id = initSegmentId(map);\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n    return null;\n  }\n  handleQuotaExceededError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    const audioBuffered = this.sourceUpdater_.audioBuffered();\n    const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n    const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n    const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n    this.remove(0, timeToRemoveUntil, () => {\n      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n      this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      this.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(() => {\n        this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n        this.quotaExceededErrorRetryTimeout_ = null;\n        this.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  }\n  handleAppendError_({\n    segmentInfo,\n    type,\n    bytes\n  }, error) {\n    // if there's no error, nothing to do\n    if (!error) {\n      return;\n    }\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo,\n        type,\n        bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(`${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  }\n  appendToSourceBuffer_({\n    segmentInfo,\n    type,\n    initSegment,\n    data,\n    bytes\n  }) {\n    // If this is a re-append, bytes were already created and don't need to be recreated\n    if (!bytes) {\n      const segments = [data];\n      let byteLength = data.byteLength;\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments\n      });\n    }\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo,\n      type,\n      bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo,\n      type,\n      bytes\n    }));\n  }\n  handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n    const segment = this.pendingSegment_.segment;\n    const timingInfoProperty = `${type}TimingInfo`;\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  }\n  appendData_(segmentInfo, result) {\n    const {\n      type,\n      data\n    } = result;\n    if (!data || !data.byteLength) {\n      return;\n    }\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n    const initSegment = this.getInitSegmentAndUpdateState_({\n      type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n\n  loadSegment_(segmentInfo) {\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(() => {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        const options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n        _extends(segmentInfo, this.generateSegmentInfo_(options));\n        this.isPendingTimestampOffset_ = false;\n        this.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  }\n  updateTransmuxerAndRequestSegment_(segmentInfo) {\n    // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n    const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    const isWalkingForward = this.mediaIndex !== null;\n    const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n    // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(`Requesting ${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline,\n      endedTimelineFn: () => {\n        this.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: ({\n        message,\n        level,\n        stream\n      }) => {\n        this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n\n  trimBackBuffer_(segmentInfo) {\n    const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n\n  createSimplifiedSegmentObj_(segmentInfo) {\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n    return simpleSegment;\n  }\n  saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  }\n  saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  }\n  handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n    this.trigger('timeout');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to exclude the current playlist\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  }\n  setTimeMapping_(timeline) {\n    const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  }\n  updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  }\n  shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n    return false;\n  }\n  trueSegmentStart_({\n    currentStart,\n    playlist,\n    mediaIndex,\n    firstVideoFrameTimeForData,\n    currentVideoTimestampOffset,\n    useVideoTimingInfo,\n    videoTimingInfo,\n    audioTimingInfo\n  }) {\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n    const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n    return videoTimingInfo.start;\n  }\n  waitForAppendsToComplete_(segmentInfo) {\n    const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n    const {\n      hasAudio,\n      hasVideo,\n      isMuxed\n    } = trackInfo;\n    const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  }\n  checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n    segmentInfo.waitingOnAppends--;\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  }\n  checkForIllegalMediaSwitch(trackInfo) {\n    const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        playlistExclusionDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n    return false;\n  }\n  updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null ||\n    // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' ||\n    // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset ||\n    // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n    let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  }\n  getSegmentStartTimeForTimestampOffsetCalculation_({\n    videoTimingInfo,\n    audioTimingInfo,\n    timingInfo\n  }) {\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n    return timingInfo.start;\n  }\n  updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    const trackInfo = this.getMediaInfo_();\n    const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n    // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n\n  handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n    const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n        return;\n      }\n    }\n    this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n      this.resetEverything();\n      return;\n    }\n    const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n    this.trigger('appended');\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n\n  recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n      return;\n    }\n    const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n\n  addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n    const segment = segmentInfo.segment;\n    const start = segment.start;\n    const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    const Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    const value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      programDateTime: segment.programDateTime,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start,\n      end\n    };\n    const data = JSON.stringify(value);\n    const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  }\n}\nfunction noop() {}\nconst toTitleCase = function (string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n  return string.replace(/./, w => w.toUpperCase());\n};\n\n/**\n * @file source-updater.js\n */\nconst bufferTypes = ['video', 'audio'];\nconst updating = (type, sourceUpdater) => {\n  const sourceBuffer = sourceUpdater[`${type}Buffer`];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\nconst nextQueueIndexOfType = (type, queue) => {\n  for (let i = 0; i < queue.length; i++) {\n    const queueEntry = queue[i];\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n  return null;\n};\nconst shiftQueue = (type, sourceUpdater) => {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n  let queueIndex = 0;\n  let queueEntry = sourceUpdater.queue[queueIndex];\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n    return;\n  }\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n    return;\n  }\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\nconst cleanupBuffer = (type, sourceUpdater) => {\n  const buffer = sourceUpdater[`${type}Buffer`];\n  const titleType = toTitleCase(type);\n  if (!buffer) {\n    return;\n  }\n  buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n  buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[`${type}Buffer`] = null;\n};\nconst inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\nconst actions = {\n  appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n    try {\n      sourceBuffer.appendBuffer(bytes);\n    } catch (e) {\n      sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n      sourceUpdater.queuePending[type] = null;\n      onError(e);\n    }\n  },\n  remove: (start, end) => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n    try {\n      sourceBuffer.remove(start, end);\n    } catch (e) {\n      sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n    }\n  },\n  timestampOffset: offset => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n    sourceBuffer.timestampOffset = offset;\n  },\n  callback: callback => (type, sourceUpdater) => {\n    callback();\n  },\n  endOfStream: error => sourceUpdater => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n    try {\n      sourceUpdater.mediaSource.endOfStream(error);\n    } catch (e) {\n      videojs.log.warn('Failed to call media source endOfStream', e);\n    }\n  },\n  duration: duration => sourceUpdater => {\n    sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n    try {\n      sourceUpdater.mediaSource.duration = duration;\n    } catch (e) {\n      videojs.log.warn('Failed to set media source duration', e);\n    }\n  },\n  abort: () => (type, sourceUpdater) => {\n    if (sourceUpdater.mediaSource.readyState !== 'open') {\n      return;\n    }\n    const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n    try {\n      sourceBuffer.abort();\n    } catch (e) {\n      videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n    }\n  },\n  addSourceBuffer: (type, codec) => sourceUpdater => {\n    const titleType = toTitleCase(type);\n    const mime = getMimeForCodec(codec);\n    sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n    const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n    sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = codec;\n    sourceUpdater[`${type}Buffer`] = sourceBuffer;\n  },\n  removeSourceBuffer: type => sourceUpdater => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    }\n    sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n    try {\n      sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n    } catch (e) {\n      videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n    }\n  },\n  changeType: codec => (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n    // or the media source does not contain this source buffer.\n\n    if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n      return;\n    } // do not update codec if we don't need to.\n\n    if (sourceUpdater.codecs[type] === codec) {\n      return;\n    }\n    sourceUpdater.logger_(`changing ${type}Buffer codec from ${sourceUpdater.codecs[type]} to ${codec}`); // check if change to the provided type is supported\n\n    try {\n      sourceBuffer.changeType(mime);\n      sourceUpdater.codecs[type] = codec;\n    } catch (e) {\n      videojs.log.warn(`Failed to changeType on ${type}Buffer`, e);\n    }\n  }\n};\nconst pushQueue = ({\n  type,\n  sourceUpdater,\n  action,\n  doneFn,\n  name\n}) => {\n  sourceUpdater.queue.push({\n    type,\n    action,\n    doneFn,\n    name\n  });\n  shiftQueue(type, sourceUpdater);\n};\nconst onUpdateend = (type, sourceUpdater) => e => {\n  // Although there should, in theory, be a pending action for any updateend receieved,\n  // there are some actions that may trigger updateend events without set definitions in\n  // the w3c spec. For instance, setting the duration on the media source may trigger\n  // updateend events on source buffers. This does not appear to be in the spec. As such,\n  // if we encounter an updateend without a corresponding pending action from our queue\n  // for that source buffer type, process the next action.\n  if (sourceUpdater.queuePending[type]) {\n    const doneFn = sourceUpdater.queuePending[type].doneFn;\n    sourceUpdater.queuePending[type] = null;\n    if (doneFn) {\n      // if there's an error, report it\n      doneFn(sourceUpdater[`${type}Error_`]);\n    }\n  }\n  shiftQueue(type, sourceUpdater);\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\nclass SourceUpdater extends videojs.EventTarget {\n  constructor(mediaSource) {\n    super();\n    this.mediaSource = mediaSource;\n    this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n    this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n    this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    this.audioTimestampOffset_ = 0;\n    this.videoTimestampOffset_ = 0;\n    this.queue = [];\n    this.queuePending = {\n      audio: null,\n      video: null\n    };\n    this.delayedAudioAppendQueue_ = [];\n    this.videoAppendQueued_ = false;\n    this.codecs = {};\n    this.onVideoUpdateEnd_ = onUpdateend('video', this);\n    this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n    this.onVideoError_ = e => {\n      // used for debugging\n      this.videoError_ = e;\n    };\n    this.onAudioError_ = e => {\n      // used for debugging\n      this.audioError_ = e;\n    };\n    this.createdSourceBuffers_ = false;\n    this.initializedEme_ = false;\n    this.triggeredReady_ = false;\n  }\n  initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  }\n  hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  }\n  hasInitializedAnyEme() {\n    return this.initializedEme_;\n  }\n  ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  }\n  createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  }\n  triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n\n  addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n\n  abort(type) {\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n\n  removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n\n  canRemoveSourceBuffer() {\n    // As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this.\n    return !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  static canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n\n  canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n\n  changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n\n  addOrChangeSourceBuffers(codecs) {\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n    Object.keys(codecs).forEach(type => {\n      const codec = codecs[type];\n      if (!this.hasCreatedSourceBuffers()) {\n        return this.addSourceBuffer(type, codec);\n      }\n      if (this.canChangeType()) {\n        this.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n\n  appendBuffer(options, doneFn) {\n    const {\n      segmentInfo,\n      type,\n      bytes\n    } = options;\n    this.processedAppend_ = true;\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(`delayed audio append of ${bytes.length} until video append`);\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n    const onError = doneFn;\n    pushQueue({\n      type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn,\n      name: 'appendBuffer'\n    });\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n      const queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(que => {\n        this.appendBuffer.apply(this, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n\n  audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return createTimeRanges();\n    }\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n\n  videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return createTimeRanges();\n    }\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n\n  buffered() {\n    const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n\n  setDuration(duration, doneFn = noop) {\n    // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n\n  endOfStream(error = null, doneFn = noop) {\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeAudio(start, end, done = noop) {\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n\n  removeVideo(start, end, done = noop) {\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n\n  updating() {\n    // the audio/video source buffer is updating\n    if (updating('audio', this) || updating('video', this)) {\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer &&\n    // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n\n  videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer &&\n    // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n\n  videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    bufferTypes.forEach(type => {\n      this.abort(type);\n      if (this.canRemoveSourceBuffer()) {\n        this.removeSourceBuffer(type);\n      } else {\n        this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n    this.off();\n  }\n}\nconst uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\nconst bufferToHexString = buffer => {\n  const uInt8Buffer = new Uint8Array(buffer);\n  return Array.from(uInt8Buffer).map(byte => byte.toString(16).padStart(2, '0')).join('');\n};\n\n/**\n * @file vtt-segment-loader.js\n */\nconst VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\nclass NoVttJsError extends Error {\n  constructor() {\n    super('Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.');\n  }\n}\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nclass VTTSegmentLoader extends SegmentLoader {\n  constructor(settings, options = {}) {\n    super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    this.mediaSource_ = null;\n    this.subtitlesTrack_ = null;\n    this.loaderType_ = 'subtitle';\n    this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks;\n    this.loadVttJs = settings.loadVttJs; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    this.shouldSaveSegmentTimingInfo_ = false;\n  }\n  createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n  buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return createTimeRanges();\n    }\n    const cues = this.subtitlesTrack_.cues;\n    const start = cues[0].startTime;\n    const end = cues[cues.length - 1].startTime;\n    return createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n\n  initSegmentForMap(map, set = false) {\n    if (!map) {\n      return null;\n    }\n    const id = initSegmentId(map);\n    let storedMap = this.initSegments_[id];\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      const combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n\n  couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n\n  init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n\n  track(track) {\n    if (typeof track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n    this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n\n  remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n\n  fillBuffer_() {\n    // see if we need to begin loading immediately\n    const segmentInfo = this.chooseNextRequest_();\n    if (!segmentInfo) {\n      return;\n    }\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      const checkTimestampOffset = () => {\n        this.state = 'READY';\n        if (!this.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          this.monitorBuffer_();\n        }\n      };\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n\n  timestampOffsetForSegment_() {\n    return null;\n  }\n  chooseNextRequest_() {\n    return this.skipEmptySegments_(super.chooseNextRequest_());\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n\n  skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n    return segmentInfo;\n  }\n  stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n\n  segmentRequestFinished_(error, simpleSegment, result) {\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n      this.stopForError(error);\n      return;\n    }\n    const segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    const segment = segmentInfo.segment;\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, load it and wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && typeof this.loadVttJs === 'function') {\n      this.state = 'WAITING_ON_VTTJS'; // should be fine to call multiple times\n      // script will be loaded once but multiple listeners will be added to the queue, which is expected.\n\n      this.loadVttJs().then(() => this.segmentRequestFinished_(error, simpleSegment, result), () => this.stopForError({\n        message: 'Error loading vtt.js'\n      }));\n      return;\n    }\n    segment.requested = true;\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(cue => {\n      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  }\n  handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  }\n  updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @throws NoVttJsError\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n\n  parseVTTCues_(segmentInfo) {\n    let decoder;\n    let decodeBytesToString = false;\n    if (typeof window$1.WebVTT !== 'function') {\n      // caller is responsible for exception handling.\n      throw new NoVttJsError();\n    }\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n    const parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n    parser.ontimestampmap = map => {\n      segmentInfo.timestampmap = map;\n    };\n    parser.onparsingerror = error => {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n    if (segmentInfo.segment.map) {\n      let mapData = segmentInfo.segment.map.bytes;\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n      parser.parse(mapData);\n    }\n    let segmentData = segmentInfo.bytes;\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n\n  updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    const segment = segmentInfo.segment;\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n    const {\n      MPEGTS,\n      LOCAL\n    } = segmentInfo.timestampmap;\n    /**\n     * From the spec:\n     * The MPEGTS media timestamp MUST use a 90KHz timescale,\n     * even when non-WebVTT Media Segments use a different timescale.\n     */\n\n    const mpegTsInSeconds = MPEGTS / ONE_SECOND_IN_TS;\n    const diff = mpegTsInSeconds - LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(cue => {\n      const duration = cue.endTime - cue.startTime;\n      const startTime = MPEGTS === 0 ? cue.startTime + diff : this.handleRollover_(cue.startTime + diff, mappingObj.time);\n      cue.startTime = Math.max(startTime, 0);\n      cue.endTime = Math.max(startTime + duration, 0);\n    });\n    if (!playlist.syncInfo) {\n      const firstStart = segmentInfo.cues[0].startTime;\n      const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  }\n  /**\n   * MPEG-TS PES timestamps are limited to 2^33.\n   * Once they reach 2^33, they roll over to 0.\n   * mux.js handles PES timestamp rollover for the following scenarios:\n   * [forward rollover(right)] ->\n   *    PES timestamps monotonically increase, and once they reach 2^33, they roll over to 0\n   * [backward rollover(left)] -->\n   *    we seek back to position before rollover.\n   *\n   * According to the HLS SPEC:\n   * When synchronizing WebVTT with PES timestamps, clients SHOULD account\n   * for cases where the 33-bit PES timestamps have wrapped and the WebVTT\n   * cue times have not.  When the PES timestamp wraps, the WebVTT Segment\n   * SHOULD have a X-TIMESTAMP-MAP header that maps the current WebVTT\n   * time to the new (low valued) PES timestamp.\n   *\n   * So we want to handle rollover here and align VTT Cue start/end time to the player's time.\n   */\n\n  handleRollover_(value, reference) {\n    if (reference === null) {\n      return value;\n    }\n    let valueIn90khz = value * ONE_SECOND_IN_TS;\n    const referenceIn90khz = reference * ONE_SECOND_IN_TS;\n    let offset;\n    if (referenceIn90khz < valueIn90khz) {\n      // - 2^33\n      offset = -8589934592;\n    } else {\n      // + 2^33\n      offset = 8589934592;\n    } // distance(value - reference) > 2^32\n\n    while (Math.abs(valueIn90khz - referenceIn90khz) > 4294967296) {\n      valueIn90khz += offset;\n    }\n    return valueIn90khz / ONE_SECOND_IN_TS;\n  }\n}\n\n/**\n * @file ad-cue-tags.js\n */\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\nconst findAdCue = function (track, mediaTime) {\n  const cues = track.cues;\n  for (let i = 0; i < cues.length; i++) {\n    const cue = cues[i];\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n  return null;\n};\nconst updateAdCues = function (media, track, offset = 0) {\n  if (!media.segments) {\n    return;\n  }\n  let mediaTime = offset;\n  let cue;\n  for (let i = 0; i < media.segments.length; i++) {\n    const segment = media.segments[i];\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n    mediaTime += segment.duration;\n  }\n};\n\n/**\n * @file sync-controller.js\n */\n// synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\nconst MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nconst syncPointStrategies = [\n// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (duration !== Infinity) {\n      const syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}, {\n  name: 'MediaSequence',\n  /**\n   * run media sequence strategy\n   *\n   * @param {SyncController} syncController\n   * @param {Object} playlist\n   * @param {number} duration\n   * @param {number} currentTimeline\n   * @param {number} currentTime\n   * @param {string} type\n   */\n  run: (syncController, playlist, duration, currentTimeline, currentTime, type) => {\n    if (!type) {\n      return null;\n    }\n    const mediaSequenceMap = syncController.getMediaSequenceMap(type);\n    if (!mediaSequenceMap || mediaSequenceMap.size === 0) {\n      return null;\n    }\n    if (playlist.mediaSequence === undefined || !Array.isArray(playlist.segments) || !playlist.segments.length) {\n      return null;\n    }\n    let currentMediaSequence = playlist.mediaSequence;\n    let segmentIndex = 0;\n    for (const segment of playlist.segments) {\n      const range = mediaSequenceMap.get(currentMediaSequence);\n      if (!range) {\n        // unexpected case\n        // we expect this playlist to be the same playlist in the map\n        // just break from the loop and move forward to the next strategy\n        break;\n      }\n      if (currentTime >= range.start && currentTime < range.end) {\n        // we found segment\n        if (Array.isArray(segment.parts) && segment.parts.length) {\n          let currentPartStart = range.start;\n          let partIndex = 0;\n          for (const part of segment.parts) {\n            const start = currentPartStart;\n            const end = start + part.duration;\n            if (currentTime >= start && currentTime < end) {\n              return {\n                time: range.start,\n                segmentIndex,\n                partIndex\n              };\n            }\n            partIndex++;\n            currentPartStart = end;\n          }\n        } // no parts found, return sync point for segment\n\n        return {\n          time: range.start,\n          segmentIndex,\n          partIndex: null\n        };\n      }\n      segmentIndex++;\n      currentMediaSequence++;\n    } // we didn't find any segments for provided current time\n\n    return null;\n  }\n},\n// Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n    let syncPoint = null;\n    let lastDistance = null;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n      const segmentTime = segment.dateTimeObject.getTime() / 1000;\n      let start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (let z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n      const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    let lastDistance = null;\n    currentTime = currentTime || 0;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      const partAndSegment = partsAndSegments[index];\n      const segment = partAndSegment.segment;\n      const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    let syncPoint = null;\n    currentTime = currentTime || 0;\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      let lastDistance = null;\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const discontinuitySync = syncController.discontinuities[discontinuity];\n        if (discontinuitySync) {\n          const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n    return syncPoint;\n  }\n},\n// Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n    if (playlist.syncInfo) {\n      const syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n    return null;\n  }\n}];\nclass SyncController extends videojs.EventTarget {\n  constructor(options = {}) {\n    super(); // ...for synching across variants\n\n    this.timelines = [];\n    this.discontinuities = [];\n    this.timelineToDatetimeMappings = {};\n    /**\n     * @type {Map<string, Map<number, { start: number, end: number }>>}\n     * @private\n     */\n\n    this.mediaSequenceStorage_ = new Map();\n    this.logger_ = logger('SyncController');\n  }\n  /**\n   * Get media sequence map by type\n   *\n   * @param {string} type - segment loader type\n   * @return {Map<number, { start: number, end: number }> | undefined}\n   */\n\n  getMediaSequenceMap(type) {\n    return this.mediaSequenceStorage_.get(type);\n  }\n  /**\n   * Update Media Sequence Map -> <MediaSequence, Range>\n   *\n   * @param {Object} playlist - parsed playlist\n   * @param {number} currentTime - current player's time\n   * @param {string} type - segment loader type\n   * @return {void}\n   */\n\n  updateMediaSequenceMap(playlist, currentTime, type) {\n    // we should not process this playlist if it does not have mediaSequence or segments\n    if (playlist.mediaSequence === undefined || !Array.isArray(playlist.segments) || !playlist.segments.length) {\n      return;\n    }\n    const currentMap = this.getMediaSequenceMap(type);\n    const result = new Map();\n    let currentMediaSequence = playlist.mediaSequence;\n    let currentBaseTime;\n    if (!currentMap) {\n      // first playlist setup:\n      currentBaseTime = 0;\n    } else if (currentMap.has(playlist.mediaSequence)) {\n      // further playlists setup:\n      currentBaseTime = currentMap.get(playlist.mediaSequence).start;\n    } else {\n      // it seems like we have a gap between playlists, use current time as a fallback:\n      this.logger_(`MediaSequence sync for ${type} segment loader - received a gap between playlists.\nFallback base time to: ${currentTime}.\nReceived media sequence: ${currentMediaSequence}.\nCurrent map: `, currentMap);\n      currentBaseTime = currentTime;\n    }\n    this.logger_(`MediaSequence sync for ${type} segment loader.\nReceived media sequence: ${currentMediaSequence}.\nbase time is ${currentBaseTime}\nCurrent map: `, currentMap);\n    playlist.segments.forEach(segment => {\n      const start = currentBaseTime;\n      const end = start + segment.duration;\n      const range = {\n        start,\n        end\n      };\n      result.set(currentMediaSequence, range);\n      currentMediaSequence++;\n      currentBaseTime = end;\n    });\n    this.mediaSequenceStorage_.set(type, result);\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @param {number} currentTime\n   *        Current player's time\n   * @param {string} type\n   *        Segment loader type\n   * @return {Object}\n   *          A sync-point object\n   */\n\n  getSyncPoint(playlist, duration, currentTimeline, currentTime, type) {\n    // Always use VOD sync point for VOD\n    if (duration !== Infinity) {\n      const vodSyncPointStrategy = syncPointStrategies.find(({\n        name\n      }) => name === 'VOD');\n      return vodSyncPointStrategy.run(this, playlist, duration);\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime, type);\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // If we have exact match just return it instead of finding the nearest distance\n\n    for (const syncPointInfo of syncPoints) {\n      const {\n        syncPoint,\n        strategy\n      } = syncPointInfo;\n      const {\n        segmentIndex,\n        time\n      } = syncPoint;\n      if (segmentIndex < 0) {\n        continue;\n      }\n      const selectedSegment = playlist.segments[segmentIndex];\n      const start = time;\n      const end = start + selectedSegment.duration;\n      this.logger_(`Strategy: ${strategy}. Current time: ${currentTime}. selected segment: ${segmentIndex}. Time: [${start} -> ${end}]}`);\n      if (currentTime >= start && currentTime < end) {\n        this.logger_('Found sync point with exact match: ', syncPoint);\n        return syncPoint;\n      }\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n\n  getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0, 'main'); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n    const syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @param {number} currentTime\n   *        Current player's time\n   * @param {string} type\n   *        Segment loader type\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n\n  runStrategies_(playlist, duration, currentTimeline, currentTime, type) {\n    const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (let i = 0; i < syncPointStrategies.length; i++) {\n      const strategy = syncPointStrategies[i];\n      const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime, type);\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint\n        });\n      }\n    }\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n\n  selectSyncPoint_(syncPoints, target) {\n    let bestSyncPoint = syncPoints[0].syncPoint;\n    let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    let bestStrategy = syncPoints[0].strategy;\n    for (let i = 1; i < syncPoints.length; i++) {\n      const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n    this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n\n  saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n    for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n      const lastRemovedSegment = oldPlaylist.segments[i];\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n\n  setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      const firstSegment = playlist.segments[0];\n      const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n\n  saveSegmentTimingInfo({\n    segmentInfo,\n    shouldSaveTimelineMapping\n  }) {\n    const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    const segment = segmentInfo.segment;\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n    const dateTime = segment.dateTimeObject;\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  }\n  timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].time;\n  }\n  mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n\n  calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    const segment = segmentInfo.segment;\n    const part = segmentInfo.part;\n    let mappingObj = this.timelines[segmentInfo.timeline];\n    let start;\n    let end;\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n      }\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n\n  saveDiscontinuitySyncInfo_(segmentInfo) {\n    const playlist = segmentInfo.playlist;\n    const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n        const segmentIndex = playlist.discontinuityStarts[i];\n        const discontinuity = playlist.discontinuitySequence + i + 1;\n        const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        const accuracy = Math.abs(mediaIndexDiff);\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          let time;\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n          this.discontinuities[discontinuity] = {\n            time,\n            accuracy\n          };\n        }\n      }\n    }\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.off();\n  }\n}\n\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\nclass TimelineChangeController extends videojs.EventTarget {\n  constructor() {\n    super();\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n  }\n  clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  }\n  pendingTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n    return this.pendingTimelineChanges_[type];\n  }\n  lastTimelineChange({\n    type,\n    from,\n    to\n  }) {\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type,\n        from,\n        to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n    return this.lastTimelineChanges_[type];\n  }\n  dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  }\n}\n\n/* rollup-plugin-worker-factory start for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\nconst workerCode = transform(getWorkerString(function () {\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n  const precompute = function () {\n    const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    const encTable = tables[0];\n    const decTable = tables[1];\n    const sbox = encTable[4];\n    const sboxInv = decTable[4];\n    let i;\n    let x;\n    let xInv;\n    const d = [];\n    const th = [];\n    let x2;\n    let x4;\n    let x8;\n    let s;\n    let tEnc;\n    let tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n    return tables;\n  };\n  let aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  class AES {\n    constructor(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      let i;\n      let j;\n      let tmp;\n      const sbox = this._tables[0][4];\n      const decTable = this._tables[1];\n      const keyLen = key.length;\n      let rcon = 1;\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n      const encKey = key.slice(0);\n      const decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n    decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      let a = encrypted0 ^ key[0];\n      let b = encrypted3 ^ key[1];\n      let c = encrypted2 ^ key[2];\n      let d = encrypted1 ^ key[3];\n      let a2;\n      let b2;\n      let c2; // key.length === 2 ?\n\n      const nInnerRounds = key.length / 4 - 2;\n      let i;\n      let kIndex = 4;\n      const table = this._tables[1]; // load up the tables\n\n      const table0 = table[0];\n      const table1 = table[1];\n      const table2 = table[2];\n      const table3 = table[3];\n      const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    }\n  }\n  /**\n   * @file async-stream.js\n   */\n\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n  class AsyncStream extends Stream {\n    constructor() {\n      super(Stream);\n      this.jobs = [];\n      this.delay = 1;\n      this.timeout_ = null;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n    processJob_() {\n      this.jobs.shift()();\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n\n    push(job) {\n      this.jobs.push(job);\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    }\n  }\n  /**\n   * @file decrypter.js\n   *\n   * An asynchronous implementation of AES-128 CBC decryption with\n   * PKCS#7 padding.\n   */\n\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n  const ntoh = function (word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n  const decrypt = function (encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    const decrypted = new Uint8Array(encrypted.byteLength);\n    const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    let init0;\n    let init1;\n    let init2;\n    let init3;\n    let encrypted0;\n    let encrypted1;\n    let encrypted2;\n    let encrypted3; // iteration variable\n\n    let wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n  class Decrypter {\n    constructor(encrypted, key, initVector, done) {\n      const step = Decrypter.STEP;\n      const encrypted32 = new Int32Array(encrypted.buffer);\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      let i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n    static get STEP() {\n      // 4 * 8000;\n      return 32000;\n    }\n    /**\n     * @private\n     */\n\n    decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        const bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n  self.onmessage = function (event) {\n    const data = event.data;\n    const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\n\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/home/runner/work/http-streaming/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nconst audioTrackKind_ = properties => {\n  let kind = properties.default ? 'main' : 'alternative';\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\nconst stopLoaders = (segmentLoader, mediaType) => {\n  segmentLoader.abort();\n  segmentLoader.pause();\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\nconst startLoaders = (playlistLoader, mediaType) => {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\nconst onGroupChanged = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n  if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup || activeGroup.isMainPlaylist) {\n    // there is no group active or active group is a main playlist and won't change\n    return;\n  }\n  if (!activeGroup.playlistLoader) {\n    if (previousActiveLoader) {\n      // The previous group had a playlist loader but the new active group does not\n      // this means we are switching from demuxed to muxed audio. In this case we want to\n      // do a destructive reset of the main segment loader and not restart the audio\n      // loaders.\n      mainSegmentLoader.resetEverything();\n    }\n    return;\n  } // Non-destructive resync\n\n  segmentLoader.resyncLoader();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onGroupChanging = (type, settings) => () => {\n  const {\n    segmentLoaders: {\n      [type]: segmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  mediaType.lastGroup_ = null;\n  segmentLoader.abort();\n  segmentLoader.pause();\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\nconst onTrackChanged = (type, settings) => () => {\n  const {\n    mainPlaylistLoader,\n    segmentLoaders: {\n      [type]: segmentLoader,\n      main: mainSegmentLoader\n    },\n    mediaTypes: {\n      [type]: mediaType\n    }\n  } = settings;\n  const activeTrack = mediaType.activeTrack();\n  const activeGroup = mediaType.getActiveGroup();\n  const previousActiveLoader = mediaType.activePlaylistLoader;\n  const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n  if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n    return;\n  }\n  mediaType.lastGroup_ = activeGroup;\n  mediaType.lastTrack_ = activeTrack;\n  stopLoaders(segmentLoader, mediaType);\n  if (!activeGroup) {\n    // there is no group active so we do not want to restart loaders\n    return;\n  }\n  if (activeGroup.isMainPlaylist) {\n    // track did not change, do nothing\n    if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n      return;\n    }\n    const pc = settings.vhs.playlistController_;\n    const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n    if (pc.media() === newPlaylist) {\n      return;\n    }\n    mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n    mainPlaylistLoader.pause();\n    mainSegmentLoader.resetEverything();\n    pc.fastQualityChange_(newPlaylist);\n    return;\n  }\n  if (type === 'AUDIO') {\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no\n      // playlist loader for the audio group), we want to do a destructive reset of the\n      // main segment loader and not restart the audio loaders\n      mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n      // it should be stopped\n\n      mainSegmentLoader.resetEverything();\n      return;\n    } // although the segment loader is an audio segment loader, call the setAudio\n    // function to ensure it is prepared to re-append the init segment (or handle other\n    // config changes)\n\n    segmentLoader.setAudio(true);\n    mainSegmentLoader.setAudio(false);\n  }\n  if (previousActiveLoader === activeGroup.playlistLoader) {\n    // Nothing has actually changed. This can happen because track change events can fire\n    // multiple times for a \"single\" change. One for enabling the new active track, and\n    // one for disabling the track that was active\n    startLoaders(activeGroup.playlistLoader, mediaType);\n    return;\n  }\n  if (segmentLoader.track) {\n    // For WebVTT, set the new text track in the segmentloader\n    segmentLoader.track(activeTrack);\n  } // destructive reset\n\n  segmentLoader.resetEverything();\n  startLoaders(activeGroup.playlistLoader, mediaType);\n};\nconst onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is excluded) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: mediaType\n      },\n      excludePlaylist\n    } = settings; // switch back to default audio track\n\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.activeGroup();\n    const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n    const defaultTrack = mediaType.tracks[id];\n    if (activeTrack === defaultTrack) {\n      // Default track encountered an error. All we can do now is exclude the current\n      // rendition and hope another will switch audio groups\n      excludePlaylist({\n        error: {\n          message: 'Problem encountered loading the default audio track.'\n        }\n      });\n      return;\n    }\n    videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n    for (const trackId in mediaType.tracks) {\n      mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n    }\n    mediaType.onTrackChanged();\n  },\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n    const track = mediaType.activeTrack();\n    if (track) {\n      track.mode = 'disabled';\n    }\n    mediaType.onTrackChanged();\n  }\n};\nconst setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: (type, playlistLoader, settings) => {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: (type, playlistLoader, settings) => {\n    const {\n      tech,\n      requestOptions,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    playlistLoader.on('loadedmetadata', () => {\n      const media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', () => {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nconst initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': (type, settings) => {\n    const {\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks,\n          logger_\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          default: {\n            default: true\n          }\n        }\n      };\n      if (audioOnlyMain) {\n        mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n      }\n    }\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (audioOnlyMain) {\n          logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n          properties.isMainPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            default: properties.default,\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': (type, settings) => {\n    const {\n      tech,\n      vhs,\n      sourceType,\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      requestOptions,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      },\n      mainPlaylistLoader\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        if (!vhs.options_.useForcedSubtitles && mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n        let properties = mediaGroups[type][groupId][variantLabel];\n        let playlistLoader;\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n          if (!playlists.length) {\n            return;\n          }\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader(\n          // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n        properties = merge({\n          id: variantLabel,\n          playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            default: properties.default && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': (type, settings) => {\n    const {\n      tech,\n      main: {\n        mediaGroups\n      },\n      mediaTypes: {\n        [type]: {\n          groups,\n          tracks\n        }\n      }\n    } = settings;\n    for (const groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n      for (const variantLabel in mediaGroups[type][groupId]) {\n        const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          default: properties.default && properties.autoselect\n        };\n        if (captionServices[newProps.instreamId]) {\n          newProps = merge(newProps, captionServices[newProps.instreamId]);\n        }\n        if (newProps.default === undefined) {\n          delete newProps.default;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n        groups[groupId].push(merge({\n          id: variantLabel\n        }, properties));\n        if (typeof tracks[variantLabel] === 'undefined') {\n          const track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            default: newProps.default,\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\nconst groupMatch = (list, media) => {\n  for (let i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nconst activeGroup = (type, settings) => track => {\n  const {\n    mainPlaylistLoader,\n    mediaTypes: {\n      [type]: {\n        groups\n      }\n    }\n  } = settings;\n  const media = mainPlaylistLoader.media();\n  if (!media) {\n    return null;\n  }\n  let variants = null; // set to variants to main media active group\n\n  if (media.attributes[type]) {\n    variants = groups[media.attributes[type]];\n  }\n  const groupKeys = Object.keys(groups);\n  if (!variants) {\n    // find the mainPlaylistLoader media\n    // that is in a media group if we are dealing\n    // with audio only\n    if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n      for (let i = 0; i < groupKeys.length; i++) {\n        const groupPropertyList = groups[groupKeys[i]];\n        if (groupMatch(groupPropertyList, media)) {\n          variants = groupPropertyList;\n          break;\n        }\n      } // use the main group if it exists\n    } else if (groups.main) {\n      variants = groups.main; // only one group, use that one\n    } else if (groupKeys.length === 1) {\n      variants = groups[groupKeys[0]];\n    }\n  }\n  if (typeof track === 'undefined') {\n    return variants;\n  }\n  if (track === null || !variants) {\n    // An active track was specified so a corresponding group is expected. track === null\n    // means no track is currently active so there is no corresponding group\n    return null;\n  }\n  return variants.filter(props => props.id === track.id)[0] || null;\n};\nconst activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].enabled) {\n        return tracks[id];\n      }\n    }\n    return null;\n  },\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: (type, settings) => () => {\n    const {\n      mediaTypes: {\n        [type]: {\n          tracks\n        }\n      }\n    } = settings;\n    for (const id in tracks) {\n      if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n        return tracks[id];\n      }\n    }\n    return null;\n  }\n};\nconst getActiveGroup = (type, {\n  mediaTypes\n}) => () => {\n  const activeTrack_ = mediaTypes[type].activeTrack();\n  if (!activeTrack_) {\n    return null;\n  }\n  return mediaTypes[type].activeGroup(activeTrack_);\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the main manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.mainPlaylistLoader\n *        PlaylistLoader for the main source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.main\n *        The parsed main manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.excludePlaylist\n *        Excludes the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nconst setupMediaGroups = settings => {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    initialize[type](type, settings);\n  });\n  const {\n    mediaTypes,\n    mainPlaylistLoader,\n    tech,\n    vhs,\n    segmentLoaders: {\n      ['AUDIO']: audioSegmentLoader,\n      main: mainSegmentLoader\n    }\n  } = settings; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(type => {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  const audioGroup = mediaTypes.AUDIO.activeGroup();\n  if (audioGroup) {\n    const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n  mainPlaylistLoader.on('mediachange', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n  });\n  mainPlaylistLoader.on('mediachanging', () => {\n    ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n  }); // custom audio track change event handler for usage event\n\n  const onAudioTrackChanged = () => {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n  };\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', () => {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n  for (const id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\nconst createMediaTypes = () => {\n  const mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(`MediaGroups[${type}]`)\n    };\n  });\n  return mediaTypes;\n};\n\n/**\n * A utility class for setting properties and maintaining the state of the content steering manifest.\n *\n * Content Steering manifest format:\n * VERSION: number (required) currently only version 1 is supported.\n * TTL: number in seconds (optional) until the next content steering manifest reload.\n * RELOAD-URI: string (optional) uri to fetch the next content steering manifest.\n * SERVICE-LOCATION-PRIORITY or PATHWAY-PRIORITY a non empty array of unique string values.\n * PATHWAY-CLONES: array (optional) (HLS only) pathway clone objects to copy from other playlists.\n */\n\nclass SteeringManifest {\n  constructor() {\n    this.priority_ = [];\n    this.pathwayClones_ = new Map();\n  }\n  set version(number) {\n    // Only version 1 is currently supported for both DASH and HLS.\n    if (number === 1) {\n      this.version_ = number;\n    }\n  }\n  set ttl(seconds) {\n    // TTL = time-to-live, default = 300 seconds.\n    this.ttl_ = seconds || 300;\n  }\n  set reloadUri(uri) {\n    if (uri) {\n      // reload URI can be relative to the previous reloadUri.\n      this.reloadUri_ = resolveUrl(this.reloadUri_, uri);\n    }\n  }\n  set priority(array) {\n    // priority must be non-empty and unique values.\n    if (array && array.length) {\n      this.priority_ = array;\n    }\n  }\n  set pathwayClones(array) {\n    // pathwayClones must be non-empty.\n    if (array && array.length) {\n      this.pathwayClones_ = new Map(array.map(clone => [clone.ID, clone]));\n    }\n  }\n  get version() {\n    return this.version_;\n  }\n  get ttl() {\n    return this.ttl_;\n  }\n  get reloadUri() {\n    return this.reloadUri_;\n  }\n  get priority() {\n    return this.priority_;\n  }\n  get pathwayClones() {\n    return this.pathwayClones_;\n  }\n}\n/**\n * This class represents a content steering manifest and associated state. See both HLS and DASH specifications.\n * HLS: https://developer.apple.com/streaming/HLSContentSteeringSpecification.pdf and\n * https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/ section 4.4.6.6.\n * DASH: https://dashif.org/docs/DASH-IF-CTS-00XX-Content-Steering-Community-Review.pdf\n *\n * @param {function} xhr for making a network request from the browser.\n * @param {function} bandwidth for fetching the current bandwidth from the main segment loader.\n */\n\nclass ContentSteeringController extends videojs.EventTarget {\n  constructor(xhr, bandwidth) {\n    super();\n    this.currentPathway = null;\n    this.defaultPathway = null;\n    this.queryBeforeStart = false;\n    this.availablePathways_ = new Set();\n    this.steeringManifest = new SteeringManifest();\n    this.proxyServerUrl_ = null;\n    this.manifestType_ = null;\n    this.ttlTimeout_ = null;\n    this.request_ = null;\n    this.currentPathwayClones = new Map();\n    this.nextPathwayClones = new Map();\n    this.excludedSteeringManifestURLs = new Set();\n    this.logger_ = logger('Content Steering');\n    this.xhr_ = xhr;\n    this.getBandwidth_ = bandwidth;\n  }\n  /**\n   * Assigns the content steering tag properties to the steering controller\n   *\n   * @param {string} baseUrl the baseURL from the main manifest for resolving the steering manifest url\n   * @param {Object} steeringTag the content steering tag from the main manifest\n   */\n\n  assignTagProperties(baseUrl, steeringTag) {\n    this.manifestType_ = steeringTag.serverUri ? 'HLS' : 'DASH'; // serverUri is HLS serverURL is DASH\n\n    const steeringUri = steeringTag.serverUri || steeringTag.serverURL;\n    if (!steeringUri) {\n      this.logger_(`steering manifest URL is ${steeringUri}, cannot request steering manifest.`);\n      this.trigger('error');\n      return;\n    } // Content steering manifests can be encoded as a data URI. We can decode, parse and return early if that's the case.\n\n    if (steeringUri.startsWith('data:')) {\n      this.decodeDataUriManifest_(steeringUri.substring(steeringUri.indexOf(',') + 1));\n      return;\n    } // reloadUri is the resolution of the main manifest URL and steering URL.\n\n    this.steeringManifest.reloadUri = resolveUrl(baseUrl, steeringUri); // pathwayId is HLS defaultServiceLocation is DASH\n\n    this.defaultPathway = steeringTag.pathwayId || steeringTag.defaultServiceLocation; // currently only DASH supports the following properties on <ContentSteering> tags.\n\n    this.queryBeforeStart = steeringTag.queryBeforeStart;\n    this.proxyServerUrl_ = steeringTag.proxyServerURL; // trigger a steering event if we have a pathway from the content steering tag.\n    // this tells VHS which segment pathway to start with.\n    // If queryBeforeStart is true we need to wait for the steering manifest response.\n\n    if (this.defaultPathway && !this.queryBeforeStart) {\n      this.trigger('content-steering');\n    }\n  }\n  /**\n   * Requests the content steering manifest and parse the response. This should only be called after\n   * assignTagProperties was called with a content steering tag.\n   *\n   * @param {string} initialUri The optional uri to make the request with.\n   *    If set, the request should be made with exactly what is passed in this variable.\n   *    This scenario should only happen once on initalization.\n   */\n\n  requestSteeringManifest(initial) {\n    const reloadUri = this.steeringManifest.reloadUri;\n    if (!reloadUri) {\n      return;\n    } // We currently don't support passing MPD query parameters directly to the content steering URL as this requires\n    // ExtUrlQueryInfo tag support. See the DASH content steering spec section 8.1.\n    // This request URI accounts for manifest URIs that have been excluded.\n\n    const uri = initial ? reloadUri : this.getRequestURI(reloadUri); // If there are no valid manifest URIs, we should stop content steering.\n\n    if (!uri) {\n      this.logger_('No valid content steering manifest URIs. Stopping content steering.');\n      this.trigger('error');\n      this.dispose();\n      return;\n    }\n    this.request_ = this.xhr_({\n      uri\n    }, (error, errorInfo) => {\n      if (error) {\n        // If the client receives HTTP 410 Gone in response to a manifest request,\n        // it MUST NOT issue another request for that URI for the remainder of the\n        // playback session. It MAY continue to use the most-recently obtained set\n        // of Pathways.\n        if (errorInfo.status === 410) {\n          this.logger_(`manifest request 410 ${error}.`);\n          this.logger_(`There will be no more content steering requests to ${uri} this session.`);\n          this.excludedSteeringManifestURLs.add(uri);\n          return;\n        } // If the client receives HTTP 429 Too Many Requests with a Retry-After\n        // header in response to a manifest request, it SHOULD wait until the time\n        // specified by the Retry-After header to reissue the request.\n\n        if (errorInfo.status === 429) {\n          const retrySeconds = errorInfo.responseHeaders['retry-after'];\n          this.logger_(`manifest request 429 ${error}.`);\n          this.logger_(`content steering will retry in ${retrySeconds} seconds.`);\n          this.startTTLTimeout_(parseInt(retrySeconds, 10));\n          return;\n        } // If the Steering Manifest cannot be loaded and parsed correctly, the\n        // client SHOULD continue to use the previous values and attempt to reload\n        // it after waiting for the previously-specified TTL (or 5 minutes if\n        // none).\n\n        this.logger_(`manifest failed to load ${error}.`);\n        this.startTTLTimeout_();\n        return;\n      }\n      const steeringManifestJson = JSON.parse(this.request_.responseText);\n      this.assignSteeringProperties_(steeringManifestJson);\n      this.startTTLTimeout_();\n    });\n  }\n  /**\n   * Set the proxy server URL and add the steering manifest url as a URI encoded parameter.\n   *\n   * @param {string} steeringUrl the steering manifest url\n   * @return the steering manifest url to a proxy server with all parameters set\n   */\n\n  setProxyServerUrl_(steeringUrl) {\n    const steeringUrlObject = new window$1.URL(steeringUrl);\n    const proxyServerUrlObject = new window$1.URL(this.proxyServerUrl_);\n    proxyServerUrlObject.searchParams.set('url', encodeURI(steeringUrlObject.toString()));\n    return this.setSteeringParams_(proxyServerUrlObject.toString());\n  }\n  /**\n   * Decodes and parses the data uri encoded steering manifest\n   *\n   * @param {string} dataUri the data uri to be decoded and parsed.\n   */\n\n  decodeDataUriManifest_(dataUri) {\n    const steeringManifestJson = JSON.parse(window$1.atob(dataUri));\n    this.assignSteeringProperties_(steeringManifestJson);\n  }\n  /**\n   * Set the HLS or DASH content steering manifest request query parameters. For example:\n   * _HLS_pathway=\"<CURRENT-PATHWAY-ID>\" and _HLS_throughput=<THROUGHPUT>\n   * _DASH_pathway and _DASH_throughput\n   *\n   * @param {string} uri to add content steering server parameters to.\n   * @return a new uri as a string with the added steering query parameters.\n   */\n\n  setSteeringParams_(url) {\n    const urlObject = new window$1.URL(url);\n    const path = this.getPathway();\n    const networkThroughput = this.getBandwidth_();\n    if (path) {\n      const pathwayKey = `_${this.manifestType_}_pathway`;\n      urlObject.searchParams.set(pathwayKey, path);\n    }\n    if (networkThroughput) {\n      const throughputKey = `_${this.manifestType_}_throughput`;\n      urlObject.searchParams.set(throughputKey, networkThroughput);\n    }\n    return urlObject.toString();\n  }\n  /**\n   * Assigns the current steering manifest properties and to the SteeringManifest object\n   *\n   * @param {Object} steeringJson the raw JSON steering manifest\n   */\n\n  assignSteeringProperties_(steeringJson) {\n    this.steeringManifest.version = steeringJson.VERSION;\n    if (!this.steeringManifest.version) {\n      this.logger_(`manifest version is ${steeringJson.VERSION}, which is not supported.`);\n      this.trigger('error');\n      return;\n    }\n    this.steeringManifest.ttl = steeringJson.TTL;\n    this.steeringManifest.reloadUri = steeringJson['RELOAD-URI']; // HLS = PATHWAY-PRIORITY required. DASH = SERVICE-LOCATION-PRIORITY optional\n\n    this.steeringManifest.priority = steeringJson['PATHWAY-PRIORITY'] || steeringJson['SERVICE-LOCATION-PRIORITY']; // Pathway clones to be created/updated in HLS.\n    // See section 7.2 https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n\n    this.steeringManifest.pathwayClones = steeringJson['PATHWAY-CLONES'];\n    this.nextPathwayClones = this.steeringManifest.pathwayClones; // 1. apply first pathway from the array.\n    // 2. if first pathway doesn't exist in manifest, try next pathway.\n    //    a. if all pathways are exhausted, ignore the steering manifest priority.\n    // 3. if segments fail from an established pathway, try all variants/renditions, then exclude the failed pathway.\n    //    a. exclude a pathway for a minimum of the last TTL duration. Meaning, from the next steering response,\n    //       the excluded pathway will be ignored.\n    //       See excludePathway usage in excludePlaylist().\n    // If there are no available pathways, we need to stop content steering.\n\n    if (!this.availablePathways_.size) {\n      this.logger_('There are no available pathways for content steering. Ending content steering.');\n      this.trigger('error');\n      this.dispose();\n    }\n    const chooseNextPathway = pathwaysByPriority => {\n      for (const path of pathwaysByPriority) {\n        if (this.availablePathways_.has(path)) {\n          return path;\n        }\n      } // If no pathway matches, ignore the manifest and choose the first available.\n\n      return [...this.availablePathways_][0];\n    };\n    const nextPathway = chooseNextPathway(this.steeringManifest.priority);\n    if (this.currentPathway !== nextPathway) {\n      this.currentPathway = nextPathway;\n      this.trigger('content-steering');\n    }\n  }\n  /**\n   * Returns the pathway to use for steering decisions\n   *\n   * @return {string} returns the current pathway or the default\n   */\n\n  getPathway() {\n    return this.currentPathway || this.defaultPathway;\n  }\n  /**\n   * Chooses the manifest request URI based on proxy URIs and server URLs.\n   * Also accounts for exclusion on certain manifest URIs.\n   *\n   * @param {string} reloadUri the base uri before parameters\n   *\n   * @return {string} the final URI for the request to the manifest server.\n   */\n\n  getRequestURI(reloadUri) {\n    if (!reloadUri) {\n      return null;\n    }\n    const isExcluded = uri => this.excludedSteeringManifestURLs.has(uri);\n    if (this.proxyServerUrl_) {\n      const proxyURI = this.setProxyServerUrl_(reloadUri);\n      if (!isExcluded(proxyURI)) {\n        return proxyURI;\n      }\n    }\n    const steeringURI = this.setSteeringParams_(reloadUri);\n    if (!isExcluded(steeringURI)) {\n      return steeringURI;\n    } // Return nothing if all valid manifest URIs are excluded.\n\n    return null;\n  }\n  /**\n   * Start the timeout for re-requesting the steering manifest at the TTL interval.\n   *\n   * @param {number} ttl time in seconds of the timeout. Defaults to the\n   *        ttl interval in the steering manifest\n   */\n\n  startTTLTimeout_(ttl = this.steeringManifest.ttl) {\n    // 300 (5 minutes) is the default value.\n    const ttlMS = ttl * 1000;\n    this.ttlTimeout_ = window$1.setTimeout(() => {\n      this.requestSteeringManifest();\n    }, ttlMS);\n  }\n  /**\n   * Clear the TTL timeout if necessary.\n   */\n\n  clearTTLTimeout_() {\n    window$1.clearTimeout(this.ttlTimeout_);\n    this.ttlTimeout_ = null;\n  }\n  /**\n   * aborts any current steering xhr and sets the current request object to null\n   */\n\n  abort() {\n    if (this.request_) {\n      this.request_.abort();\n    }\n    this.request_ = null;\n  }\n  /**\n   * aborts steering requests clears the ttl timeout and resets all properties.\n   */\n\n  dispose() {\n    this.off('content-steering');\n    this.off('error');\n    this.abort();\n    this.clearTTLTimeout_();\n    this.currentPathway = null;\n    this.defaultPathway = null;\n    this.queryBeforeStart = null;\n    this.proxyServerUrl_ = null;\n    this.manifestType_ = null;\n    this.ttlTimeout_ = null;\n    this.request_ = null;\n    this.excludedSteeringManifestURLs = new Set();\n    this.availablePathways_ = new Set();\n    this.steeringManifest = new SteeringManifest();\n  }\n  /**\n   * adds a pathway to the available pathways set\n   *\n   * @param {string} pathway the pathway string to add\n   */\n\n  addAvailablePathway(pathway) {\n    if (pathway) {\n      this.availablePathways_.add(pathway);\n    }\n  }\n  /**\n   * Clears all pathways from the available pathways set\n   */\n\n  clearAvailablePathways() {\n    this.availablePathways_.clear();\n  }\n  /**\n   * Removes a pathway from the available pathways set.\n   */\n\n  excludePathway(pathway) {\n    return this.availablePathways_.delete(pathway);\n  }\n  /**\n   * Checks the refreshed DASH manifest content steering tag for changes.\n   *\n   * @param {string} baseURL new steering tag on DASH manifest refresh\n   * @param {Object} newTag the new tag to check for changes\n   * @return a true or false whether the new tag has different values\n   */\n\n  didDASHTagChange(baseURL, newTag) {\n    return !newTag && this.steeringManifest.reloadUri || newTag && (resolveUrl(baseURL, newTag.serverURL) !== this.steeringManifest.reloadUri || newTag.defaultServiceLocation !== this.defaultPathway || newTag.queryBeforeStart !== this.queryBeforeStart || newTag.proxyServerURL !== this.proxyServerUrl_);\n  }\n  getAvailablePathways() {\n    return this.availablePathways_;\n  }\n}\n\n/**\n * @file playlist-controller.js\n */\nconst ABORT_EARLY_EXCLUSION_SECONDS = 10;\nlet Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nconst loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\nconst sumLoaderStat = function (stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\nconst shouldSwitchToMedia = function ({\n  currentPlaylist,\n  buffered,\n  currentTime,\n  nextPlaylist,\n  bufferLowWaterLine,\n  bufferHighWaterLine,\n  duration,\n  bufferBasedABR,\n  log\n}) {\n  // we have no other playlist to switch to\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n  const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n  if (!currentPlaylist) {\n    log(`${sharedLogLine} as current playlist is not set`);\n    return true;\n  } // no need to switch if playlist is the same\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n  const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n      return false;\n    }\n    log(`${sharedLogLine} as current playlist is live`);\n    return true;\n  }\n  const forwardBuffer = timeAheadOf(buffered, currentTime);\n  const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n    return true;\n  }\n  const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n    if (bufferBasedABR) {\n      logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n    }\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n  if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n    if (bufferBasedABR) {\n      logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n    }\n    log(logLine);\n    return true;\n  }\n  log(`not ${sharedLogLine} as no switching criteria met`);\n  return false;\n};\n/**\n * the main playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a main playlist and a series of audio playlists\n * if they are available\n *\n * @class PlaylistController\n * @extends videojs.EventTarget\n */\n\nclass PlaylistController extends videojs.EventTarget {\n  constructor(options) {\n    super();\n    const {\n      src,\n      withCredentials,\n      tech,\n      bandwidth,\n      externVhs,\n      useCueTags,\n      playlistExclusionDuration,\n      enableLowInitialPlaylist,\n      sourceType,\n      cacheEncryptionKeys,\n      bufferBasedABR,\n      leastPixelDiffSelector,\n      captionServices\n    } = options;\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n    let {\n      maxPlaylistRetries\n    } = options;\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n    Vhs$1 = externVhs;\n    this.bufferBasedABR = Boolean(bufferBasedABR);\n    this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n    this.withCredentials = withCredentials;\n    this.tech_ = tech;\n    this.vhs_ = tech.vhs;\n    this.sourceType_ = sourceType;\n    this.useCueTags_ = useCueTags;\n    this.playlistExclusionDuration = playlistExclusionDuration;\n    this.maxPlaylistRetries = maxPlaylistRetries;\n    this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n    if (this.useCueTags_) {\n      this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n      this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n    this.requestOptions_ = {\n      withCredentials,\n      maxPlaylistRetries,\n      timeout: null\n    };\n    this.on('error', this.pauseLoading);\n    this.mediaTypes_ = createMediaTypes();\n    this.mediaSource = new window$1.MediaSource();\n    this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n    this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n    this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n    this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n    this.seekable_ = createTimeRanges();\n    this.hasPlayed_ = false;\n    this.syncController_ = new SyncController(options);\n    this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    this.decrypter_ = new Decrypter();\n    this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n    this.inbandTextTracks_ = {};\n    this.timelineChangeController_ = new TimelineChangeController();\n    this.keyStatusMap_ = new Map();\n    const segmentLoaderSettings = {\n      vhs: this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices,\n      mediaSource: this.mediaSource,\n      currentTime: this.tech_.currentTime.bind(this.tech_),\n      seekable: () => this.seekable(),\n      seeking: () => this.tech_.seeking(),\n      duration: () => this.duration(),\n      hasPlayed: () => this.hasPlayed_,\n      goalBufferLength: () => this.goalBufferLength(),\n      bandwidth,\n      syncController: this.syncController_,\n      decrypter: this.decrypter_,\n      sourceType: this.sourceType_,\n      inbandTextTracks: this.inbandTextTracks_,\n      cacheEncryptionKeys,\n      sourceUpdater: this.sourceUpdater_,\n      timelineChangeController: this.timelineChangeController_,\n      exactManifestTimings: options.exactManifestTimings,\n      addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n      addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this)\n    })) : new PlaylistLoader(src, this.vhs_, merge(this.requestOptions_, {\n      addDateRangesToTextTrack: this.addDateRangesToTextTrack_.bind(this)\n    }));\n    this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n    this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      segmentMetadataTrack: this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: this.tech_.featuresNativeTextTracks,\n      loadVttJs: () => new Promise((resolve, reject) => {\n        function onLoad() {\n          tech.off('vttjserror', onError);\n          resolve();\n        }\n        function onError() {\n          tech.off('vttjsloaded', onLoad);\n          reject();\n        }\n        tech.one('vttjsloaded', onLoad);\n        tech.one('vttjserror', onError); // safe to call multiple times, script will be loaded only once:\n\n        tech.addWebVttScript_();\n      })\n    }), options);\n    const getBandwidth = () => {\n      return this.mainSegmentLoader_.bandwidth;\n    };\n    this.contentSteeringController_ = new ContentSteeringController(this.vhs_.xhr, getBandwidth);\n    this.setupSegmentLoaderListeners_();\n    if (this.bufferBasedABR) {\n      this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n      this.tech_.on('pause', () => this.stopABRTimer_());\n      this.tech_.on('play', () => this.startABRTimer_());\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n    loaderStats.forEach(stat => {\n      this[stat + '_'] = sumLoaderStat.bind(this, stat);\n    });\n    this.logger_ = logger('pc');\n    this.triggeredFmp4Usage = false;\n    if (this.tech_.preload() === 'none') {\n      this.loadOnPlay_ = () => {\n        this.loadOnPlay_ = null;\n        this.mainPlaylistLoader_.load();\n      };\n      this.tech_.one('play', this.loadOnPlay_);\n    } else {\n      this.mainPlaylistLoader_.load();\n    }\n    this.timeToLoadedData__ = -1;\n    this.mainAppendsToLoadedData__ = -1;\n    this.audioAppendsToLoadedData__ = -1;\n    const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    this.tech_.one(event, () => {\n      const timeToLoadedDataStart = Date.now();\n      this.tech_.one('loadeddata', () => {\n        this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n        this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n  }\n  mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  }\n  audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  }\n  appendsToLoadedData_() {\n    const main = this.mainAppendsToLoadedData_();\n    const audio = this.audioAppendsToLoadedData_();\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n    return main + audio;\n  }\n  timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @param {string} [reason=abr] a reason for why the ABR check is made\n   * @private\n   */\n\n  checkABR_(reason = 'abr') {\n    const nextPlaylist = this.selectPlaylist();\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, reason);\n    }\n  }\n  switchMedia_(playlist, cause, delay) {\n    const oldMedia = this.media();\n    const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    const newId = playlist && (playlist.id || playlist.uri);\n    if (oldId && oldId !== newId) {\n      this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-rendition-change-${cause}`\n      });\n    }\n    this.mainPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * A function that ensures we switch our playlists inside of `mediaTypes`\n   * to match the current `serviceLocation` provided by the contentSteering controller.\n   * We want to check media types of `AUDIO`, `SUBTITLES`, and `CLOSED-CAPTIONS`.\n   *\n   * This should only be called on a DASH playback scenario while using content steering.\n   * This is necessary due to differences in how media in HLS manifests are generally tied to\n   * a video playlist, where in DASH that is not always the case.\n   */\n\n  switchMediaForDASHContentSteering_() {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n      const mediaType = this.mediaTypes_[type];\n      const activeGroup = mediaType ? mediaType.activeGroup() : null;\n      const pathway = this.contentSteeringController_.getPathway();\n      if (activeGroup && pathway) {\n        // activeGroup can be an array or a single group\n        const mediaPlaylists = activeGroup.length ? activeGroup[0].playlists : activeGroup.playlists;\n        const dashMediaPlaylists = mediaPlaylists.filter(p => p.attributes.serviceLocation === pathway); // Switch the current active playlist to the correct CDN\n\n        if (dashMediaPlaylists.length) {\n          this.mediaTypes_[type].activePlaylistLoader.media(dashMediaPlaylists[0]);\n        }\n      }\n    });\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  startABRTimer_() {\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(() => this.checkABR_(), 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n\n  stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n\n  getAudioTrackPlaylists_() {\n    const main = this.main();\n    const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in main\n    // playlist array, use that or an empty array.\n\n    if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n    const AUDIO = main.mediaGroups.AUDIO;\n    const groupKeys = Object.keys(AUDIO);\n    let track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n      for (const label in defaultGroup) {\n        if (defaultGroup[label].default) {\n          track = {\n            label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n    const playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (const group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        const properties = AUDIO[group][track.label];\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (main.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (let i = 0; i < main.playlists.length; i++) {\n            const playlist = main.playlists[i];\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n    return playlists;\n  }\n  /**\n   * Register event handlers on the main playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n  setupMainPlaylistLoaderListeners_() {\n    this.mainPlaylistLoader_.on('loadedmetadata', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n      if (media.endList && this.tech_.preload() !== 'none') {\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n      }\n      setupMediaGroups({\n        sourceType: this.sourceType_,\n        segmentLoaders: {\n          AUDIO: this.audioSegmentLoader_,\n          SUBTITLES: this.subtitleSegmentLoader_,\n          main: this.mainSegmentLoader_\n        },\n        tech: this.tech_,\n        requestOptions: this.requestOptions_,\n        mainPlaylistLoader: this.mainPlaylistLoader_,\n        vhs: this.vhs_,\n        main: this.main(),\n        mediaTypes: this.mediaTypes_,\n        excludePlaylist: this.excludePlaylist.bind(this)\n      });\n      this.triggerPresenceUsage_(this.main(), media);\n      this.setupFirstPlay();\n      if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        this.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n          this.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.mainPlaylistLoader_.on('loadedplaylist', () => {\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      let updatedPlaylist = this.mainPlaylistLoader_.media();\n      if (!updatedPlaylist) {\n        // Add content steering listeners on first load and init.\n        this.attachContentSteeringListeners_();\n        this.initContentSteeringController_(); // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n\n        this.excludeUnsupportedVariants_();\n        let selectedMedia;\n        if (this.enableLowInitialPlaylist) {\n          selectedMedia = this.selectInitialPlaylist();\n        }\n        if (!selectedMedia) {\n          selectedMedia = this.selectPlaylist();\n        }\n        if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n        this.initialMedia_ = selectedMedia;\n        this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n        const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n        if (!haveJsonSource) {\n          return;\n        }\n        updatedPlaylist = this.initialMedia_;\n      }\n      this.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.mainPlaylistLoader_.on('error', () => {\n      const error = this.mainPlaylistLoader_.error;\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainPlaylistLoader_.on('mediachanging', () => {\n      this.mainSegmentLoader_.abort();\n      this.mainSegmentLoader_.pause();\n    });\n    this.mainPlaylistLoader_.on('mediachange', () => {\n      const media = this.mainPlaylistLoader_.media();\n      const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n        this.requestOptions_.timeout = 0;\n      } else {\n        this.requestOptions_.timeout = requestTimeout;\n      }\n      if (this.sourceType_ === 'dash') {\n        // we don't want to re-request the same hls playlist right after it was changed\n        this.mainPlaylistLoader_.load();\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n      this.mainSegmentLoader_.pause();\n      this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n      if (this.waitingForFastQualityPlaylistReceived_) {\n        this.runFastQualitySwitch_();\n      } else {\n        this.mainSegmentLoader_.load();\n      }\n      this.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.mainPlaylistLoader_.on('playlistunchanged', () => {\n      const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n      const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // exclude it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        this.excludePlaylist({\n          error: {\n            message: 'Playlist no longer updating.',\n            reason: 'playlist-unchanged'\n          }\n        }); // useful for monitoring QoS\n\n        this.tech_.trigger('playliststuck');\n      }\n    });\n    this.mainPlaylistLoader_.on('renditiondisabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n    });\n    this.mainPlaylistLoader_.on('renditionenabled', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n\n  handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    if (this.waitingForFastQualityPlaylistReceived_) {\n      this.runFastQualitySwitch_();\n    }\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n\n  triggerPresenceUsage_(main, media) {\n    const mediaGroups = main.mediaGroups || {};\n    let defaultDemuxed = true;\n    const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n    for (const mediaGroup in mediaGroups.AUDIO) {\n      for (const label in mediaGroups.AUDIO[mediaGroup]) {\n        const properties = mediaGroups.AUDIO[mediaGroup][label];\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n    }\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n    }\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n    }\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n    }\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n    }\n  }\n  shouldSwitchToMedia_(nextPlaylist) {\n    const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n    const currentTime = this.tech_.currentTime();\n    const bufferLowWaterLine = this.bufferLowWaterLine();\n    const bufferHighWaterLine = this.bufferHighWaterLine();\n    const buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered,\n      currentTime,\n      currentPlaylist,\n      nextPlaylist,\n      bufferLowWaterLine,\n      bufferHighWaterLine,\n      duration: this.duration(),\n      bufferBasedABR: this.bufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n\n  setupSegmentLoaderListeners_() {\n    this.mainSegmentLoader_.on('bandwidthupdate', () => {\n      // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n      // useful to check to see if a rendition switch should be made.\n      this.checkABR_('bandwidthupdate');\n      this.tech_.trigger('bandwidthupdate');\n    });\n    this.mainSegmentLoader_.on('timeout', () => {\n      if (this.bufferBasedABR) {\n        // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n        // Here the only consideration is that for buffer based ABR there's no guarantee\n        // of an immediate switch (since the bandwidth is averaged with a timeout\n        // bandwidth value of 1), so force a load on the segment loader to keep it going.\n        this.mainSegmentLoader_.load();\n      }\n    }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n    // based ABR.\n\n    if (!this.bufferBasedABR) {\n      this.mainSegmentLoader_.on('progress', () => {\n        this.trigger('progress');\n      });\n    }\n    this.mainSegmentLoader_.on('error', () => {\n      const error = this.mainSegmentLoader_.error();\n      this.excludePlaylist({\n        playlistToExclude: error.playlist,\n        error\n      });\n    });\n    this.mainSegmentLoader_.on('appenderror', () => {\n      this.error = this.mainSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', () => {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', () => {\n      this.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', () => {\n      this.error = this.audioSegmentLoader_.error_;\n      this.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', () => {\n      this.logger_('main segment loader ended');\n      this.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', event => {\n      // never try to early abort with the new ABR algorithm\n      if (this.bufferBasedABR) {\n        return;\n      }\n      this.delegateLoaders_('all', ['abort']);\n      this.excludePlaylist({\n        error: {\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n        },\n        playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n      });\n    });\n    const updateCodecs = () => {\n      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return this.tryToCreateSourceBuffers_();\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', () => {\n      if (!this.triggeredFmp4Usage) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n        this.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', () => {\n      this.logger_('audioSegmentLoader ended');\n      this.onEndOfStream();\n    });\n  }\n  mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n\n  load() {\n    this.mainSegmentLoader_.load();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n\n  fastQualityChange_(media = this.selectPlaylist()) {\n    if (media && media === this.mainPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n    this.switchMedia_(media, 'fast-quality'); // we would like to avoid race condition when we call fastQuality,\n    // reset everything and start loading segments from prev segments instead of new because new playlist is not received yet\n\n    this.waitingForFastQualityPlaylistReceived_ = true;\n  }\n  runFastQualitySwitch_() {\n    this.waitingForFastQualityPlaylistReceived_ = false; // Delete all buffered data to allow an immediate quality switch, then seek to give\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n    // ahead was roughly the minimum that will accomplish this across a variety of content\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.resetEverything(() => {\n      this.tech_.setCurrentTime(this.tech_.currentTime());\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n\n  play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n    if (this.hasPlayed_) {\n      this.load();\n    }\n    const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n\n  setupFirstPlay() {\n    const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream and/or has a start time\n\n    if (!media.endList || media.start) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the\n        // live or start point\n        return false;\n      }\n      const seekableEnd = seekable.end(0);\n      let startPoint = seekableEnd;\n      if (media.start) {\n        const offset = media.start.timeOffset;\n        if (offset < 0) {\n          startPoint = Math.max(seekableEnd + offset, seekable.start(0));\n        } else {\n          startPoint = Math.min(seekableEnd, offset);\n        }\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(startPoint);\n    }\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, e => {});\n      }\n    }\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n\n  handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n    const cues = this.inbandTextTracks_.metadataTrack_.cues;\n    if (!cues || !cues.length) {\n      return;\n    }\n    const duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n\n  handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n\n  onEndOfStream() {\n    let isEndOfStream = this.mainSegmentLoader_.ended_;\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n    if (!isEndOfStream) {\n      return;\n    }\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n\n  stuckAtPlaylistEnd_(playlist) {\n    const seekable = this.seekable();\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n    const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n    const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n    const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Exclude a playlist for a set amount of time, making it unavailable for selection by\n   * the rendition selection algorithm, then force a new playlist (rendition) selection.\n   *\n   * @param {Object=} playlistToExclude\n   *                  the playlist to exclude, defaults to the currently selected playlist\n   * @param {Object=} error\n   *                  an optional error\n   * @param {number=} playlistExclusionDuration\n   *                  an optional number of seconds to exclude the playlist\n   */\n\n  excludePlaylist({\n    playlistToExclude = this.mainPlaylistLoader_.media(),\n    error = {},\n    playlistExclusionDuration\n  }) {\n    // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // excluded instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n    playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n    playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the main OR while we were disposing of the tech\n\n    if (!playlistToExclude) {\n      this.error = error;\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n      return;\n    }\n    playlistToExclude.playlistErrors_++;\n    const playlists = this.mainPlaylistLoader_.main.playlists;\n    const enabledPlaylists = playlists.filter(isEnabled);\n    const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n    // forever\n\n    if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n      videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.mainPlaylistLoader_.load(isFinalRendition);\n    }\n    if (isFinalRendition) {\n      // If we're content steering, try other pathways.\n      if (this.main().contentSteering) {\n        const pathway = this.pathwayAttribute_(playlistToExclude); // Ignore at least 1 steering manifest refresh.\n\n        const reIncludeDelay = this.contentSteeringController_.steeringManifest.ttl * 1000;\n        this.contentSteeringController_.excludePathway(pathway);\n        this.excludeThenChangePathway_();\n        setTimeout(() => {\n          this.contentSteeringController_.addAvailablePathway(pathway);\n        }, reIncludeDelay);\n        return;\n      } // Since we're on the final non-excluded playlist, and we're about to exclude\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // exclusion list. This allows other playlists to be attempted in case any have been\n      // fixed.\n\n      let reincluded = false;\n      playlists.forEach(playlist => {\n        // skip current playlist which is about to be excluded\n        if (playlist === playlistToExclude) {\n          return;\n        }\n        const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Exclude this playlist\n\n    let excludeUntil;\n    if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n    }\n    playlistToExclude.excludeUntil = excludeUntil;\n    if (error.reason) {\n      playlistToExclude.lastExcludeReason_ = error.reason;\n    }\n    this.tech_.trigger('excludeplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-excluded'\n    }); // TODO: only load a new playlist if we're excluding the current playlist\n    // If this function was called with a playlist that's not the current active playlist\n    // (e.g., media().id !== playlistToExclude.id),\n    // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n    const nextPlaylist = this.selectPlaylist();\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n    const logFn = error.internal ? this.logger_ : videojs.log.warn;\n    const errorMessage = error.message ? ' ' + error.message : '';\n    logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n    if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n\n  pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n\n  delegateLoaders_(filter, fnNames) {\n    const loaders = [];\n    const dontFilterPlaylist = filter === 'all';\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.mainPlaylistLoader_);\n    }\n    const mediaTypes = [];\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n    mediaTypes.forEach(mediaType => {\n      const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(name => {\n      const loader = this[`${name}SegmentLoader_`];\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(loader => fnNames.forEach(fnName => {\n      if (typeof loader[fnName] === 'function') {\n        loader[fnName]();\n      }\n    }));\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n\n  setCurrentTime(currentTime) {\n    const buffered = findRange(this.tech_.buffered(), currentTime);\n    if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n    if (!this.mainPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n    this.mainSegmentLoader_.pause();\n    this.mainSegmentLoader_.resetEverything();\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.pause();\n      this.audioSegmentLoader_.resetEverything();\n    }\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.pause();\n      this.subtitleSegmentLoader_.resetEverything();\n    } // start segment loader loading in case they are paused\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n\n  duration() {\n    if (!this.mainPlaylistLoader_) {\n      return 0;\n    }\n    const media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n\n  seekable() {\n    return this.seekable_;\n  }\n  onSyncInfoUpdate_() {\n    let audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.mainPlaylistLoader_) {\n      return;\n    }\n    let media = this.mainPlaylistLoader_.media();\n    if (!media) {\n      return;\n    }\n    let expired = this.syncController_.getExpiredTime(media, this.duration());\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n    const main = this.mainPlaylistLoader_.main;\n    const mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n    if (mainSeekable.length === 0) {\n      return;\n    }\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n      if (expired === null) {\n        return;\n      }\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n    let oldEnd;\n    let oldStart;\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n    this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n\n  updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n    if (isLive) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n      return;\n    }\n    const buffered = this.tech_.buffered();\n    let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the PlaylistController and everything\n   * that it controls\n   */\n\n  dispose() {\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.mainPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n    this.contentSteeringController_.dispose();\n    this.keyStatusMap_.clear();\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      const groups = this.mediaTypes_[type].groups;\n      for (const id in groups) {\n        groups[id].forEach(group => {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the main playlist object if we have one\n   *\n   * @return {Object} the main playlist object that we parsed\n   */\n\n  main() {\n    return this.mainPlaylistLoader_.main;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n\n  media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.mainPlaylistLoader_.media() || this.initialMedia_;\n  }\n  areMediaTypesKnown_() {\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n    return true;\n  }\n  getCodecsOrExclude_() {\n    const media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    };\n    const playlist = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media(); // set \"main\" media equal to video\n\n    media.video = media.main;\n    const playlistCodecs = codecsForPlaylist(this.main(), playlist);\n    const codecs = {};\n    const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n    if (media.main.isMuxed) {\n      codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n    }\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n    if (!codecs.audio && !codecs.video) {\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          message: 'Could not determine codecs for playlist.'\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n    const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    const unsupportedCodecs = {};\n    let unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n    if (usingAudioLoader && unsupportedAudio && playlist.attributes.AUDIO) {\n      const audioGroup = playlist.attributes.AUDIO;\n      this.main().playlists.forEach(variant => {\n        const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n        if (variantAudioGroup === audioGroup && variant !== playlist) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n    } // if we have any unsupported codecs exclude this playlist.\n\n    if (Object.keys(unsupportedCodecs).length) {\n      const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n        if (acc) {\n          acc += ', ';\n        }\n        acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n        return acc;\n      }, '') + '.';\n      this.excludePlaylist({\n        playlistToExclude: playlist,\n        error: {\n          internal: true,\n          message\n        },\n        playlistExclusionDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      const switchMessages = [];\n      ['video', 'audio'].forEach(type => {\n        const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n        }\n      });\n      if (switchMessages.length) {\n        this.excludePlaylist({\n          playlistToExclude: playlist,\n          error: {\n            message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n            internal: true\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n\n  tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n    const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n\n  excludeUnsupportedVariants_() {\n    const playlists = this.main().playlists;\n    const ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n      ids.push(variant.id);\n      const codecs = codecsForPlaylist(this.main, variant);\n      const unsupported = [];\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(`audio codec ${codecs.audio}`);\n      }\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(`video codec ${codecs.video}`);\n      }\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(`text codec ${codecs.text}`);\n      }\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n      }\n    });\n  }\n  /**\n   * Exclude playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current main playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n\n  excludeIncompatibleVariants_(codecString) {\n    const ids = [];\n    const playlists = this.main().playlists;\n    const codecs = unwrapCodecList(parseCodecs(codecString));\n    const codecCount_ = codecCount(codecs);\n    const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n      ids.push(variant.id);\n      const exclusionReasons = []; // get codecs from the playlist for this variant\n\n      const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n      const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n      if (variantCodecCount !== codecCount_) {\n        exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n      if (!this.sourceUpdater_.canChangeType()) {\n        const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n        } // the audio codec cannot change\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n        }\n      }\n      if (exclusionReasons.length) {\n        variant.excludeUntil = Infinity;\n        this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n      }\n    });\n  }\n  updateAdCues_(media) {\n    let offset = 0;\n    const seekable = this.seekable();\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n\n  goalBufferLength() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.GOAL_BUFFER_LENGTH;\n    const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n\n  bufferLowWaterLine() {\n    const currentTime = this.tech_.currentTime();\n    const initial = Config.BUFFER_LOW_WATER_LINE;\n    const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n  }\n  bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  }\n  addDateRangesToTextTrack_(dateRanges) {\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, 'com.apple.streaming', this.tech_);\n    addDateRangeMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      dateRanges\n    });\n  }\n  addMetadataToTextTrack(dispatchType, metadataArray, videoDuration) {\n    const timestampOffset = this.sourceUpdater_.videoBuffer ? this.sourceUpdater_.videoTimestampOffset() : this.sourceUpdater_.audioTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray,\n      timestampOffset,\n      videoDuration\n    });\n  }\n  /**\n   * Utility for getting the pathway or service location from an HLS or DASH playlist.\n   *\n   * @param {Object} playlist for getting pathway from.\n   * @return the pathway attribute of a playlist\n   */\n\n  pathwayAttribute_(playlist) {\n    return playlist.attributes['PATHWAY-ID'] || playlist.attributes.serviceLocation;\n  }\n  /**\n   * Initialize available pathways and apply the tag properties.\n   */\n\n  initContentSteeringController_() {\n    const main = this.main();\n    if (!main.contentSteering) {\n      return;\n    }\n    for (const playlist of main.playlists) {\n      this.contentSteeringController_.addAvailablePathway(this.pathwayAttribute_(playlist));\n    }\n    this.contentSteeringController_.assignTagProperties(main.uri, main.contentSteering); // request the steering manifest immediately if queryBeforeStart is set.\n\n    if (this.contentSteeringController_.queryBeforeStart) {\n      // When queryBeforeStart is true, initial request should omit steering parameters.\n      this.contentSteeringController_.requestSteeringManifest(true);\n      return;\n    } // otherwise start content steering after playback starts\n\n    this.tech_.one('canplay', () => {\n      this.contentSteeringController_.requestSteeringManifest();\n    });\n  }\n  /**\n   * Reset the content steering controller and re-init.\n   */\n\n  resetContentSteeringController_() {\n    this.contentSteeringController_.clearAvailablePathways();\n    this.contentSteeringController_.dispose();\n    this.initContentSteeringController_();\n  }\n  /**\n   * Attaches the listeners for content steering.\n   */\n\n  attachContentSteeringListeners_() {\n    this.contentSteeringController_.on('content-steering', this.excludeThenChangePathway_.bind(this));\n    if (this.sourceType_ === 'dash') {\n      this.mainPlaylistLoader_.on('loadedplaylist', () => {\n        const main = this.main(); // check if steering tag or pathways changed.\n\n        const didDashTagChange = this.contentSteeringController_.didDASHTagChange(main.uri, main.contentSteering);\n        const didPathwaysChange = () => {\n          const availablePathways = this.contentSteeringController_.getAvailablePathways();\n          const newPathways = [];\n          for (const playlist of main.playlists) {\n            const serviceLocation = playlist.attributes.serviceLocation;\n            if (serviceLocation) {\n              newPathways.push(serviceLocation);\n              if (!availablePathways.has(serviceLocation)) {\n                return true;\n              }\n            }\n          } // If we have no new serviceLocations and previously had availablePathways\n\n          if (!newPathways.length && availablePathways.size) {\n            return true;\n          }\n          return false;\n        };\n        if (didDashTagChange || didPathwaysChange()) {\n          this.resetContentSteeringController_();\n        }\n      });\n    }\n  }\n  /**\n   * Simple exclude and change playlist logic for content steering.\n   */\n\n  excludeThenChangePathway_() {\n    const currentPathway = this.contentSteeringController_.getPathway();\n    if (!currentPathway) {\n      return;\n    }\n    this.handlePathwayClones_();\n    const main = this.main();\n    const playlists = main.playlists;\n    const ids = new Set();\n    let didEnablePlaylists = false;\n    Object.keys(playlists).forEach(key => {\n      const variant = playlists[key];\n      const pathwayId = this.pathwayAttribute_(variant);\n      const differentPathwayId = pathwayId && currentPathway !== pathwayId;\n      const steeringExclusion = variant.excludeUntil === Infinity && variant.lastExcludeReason_ === 'content-steering';\n      if (steeringExclusion && !differentPathwayId) {\n        delete variant.excludeUntil;\n        delete variant.lastExcludeReason_;\n        didEnablePlaylists = true;\n      }\n      const noExcludeUntil = !variant.excludeUntil && variant.excludeUntil !== Infinity;\n      const shouldExclude = !ids.has(variant.id) && differentPathwayId && noExcludeUntil;\n      if (!shouldExclude) {\n        return;\n      }\n      ids.add(variant.id);\n      variant.excludeUntil = Infinity;\n      variant.lastExcludeReason_ = 'content-steering'; // TODO: kind of spammy, maybe move this.\n\n      this.logger_(`excluding ${variant.id} for ${variant.lastExcludeReason_}`);\n    });\n    if (this.contentSteeringController_.manifestType_ === 'DASH') {\n      Object.keys(this.mediaTypes_).forEach(key => {\n        const type = this.mediaTypes_[key];\n        if (type.activePlaylistLoader) {\n          const currentPlaylist = type.activePlaylistLoader.media_; // Check if the current media playlist matches the current CDN\n\n          if (currentPlaylist && currentPlaylist.attributes.serviceLocation !== currentPathway) {\n            didEnablePlaylists = true;\n          }\n        }\n      });\n    }\n    if (didEnablePlaylists) {\n      this.changeSegmentPathway_();\n    }\n  }\n  /**\n   * Add, update, or delete playlists and media groups for\n   * the pathway clones for HLS Content Steering.\n   *\n   * See https://datatracker.ietf.org/doc/draft-pantos-hls-rfc8216bis/\n   *\n   * NOTE: Pathway cloning does not currently support the `PER_VARIANT_URIS` and\n   * `PER_RENDITION_URIS` as we do not handle `STABLE-VARIANT-ID` or\n   * `STABLE-RENDITION-ID` values.\n   */\n\n  handlePathwayClones_() {\n    const main = this.main();\n    const playlists = main.playlists;\n    const currentPathwayClones = this.contentSteeringController_.currentPathwayClones;\n    const nextPathwayClones = this.contentSteeringController_.nextPathwayClones;\n    const hasClones = currentPathwayClones && currentPathwayClones.size || nextPathwayClones && nextPathwayClones.size;\n    if (!hasClones) {\n      return;\n    }\n    for (const [id, clone] of currentPathwayClones.entries()) {\n      const newClone = nextPathwayClones.get(id); // Delete the old pathway clone.\n\n      if (!newClone) {\n        this.mainPlaylistLoader_.updateOrDeleteClone(clone);\n        this.contentSteeringController_.excludePathway(id);\n      }\n    }\n    for (const [id, clone] of nextPathwayClones.entries()) {\n      const oldClone = currentPathwayClones.get(id); // Create a new pathway if it is a new pathway clone object.\n\n      if (!oldClone) {\n        const playlistsToClone = playlists.filter(p => {\n          return p.attributes['PATHWAY-ID'] === clone['BASE-ID'];\n        });\n        playlistsToClone.forEach(p => {\n          this.mainPlaylistLoader_.addClonePathway(clone, p);\n        });\n        this.contentSteeringController_.addAvailablePathway(id);\n        continue;\n      } // There have not been changes to the pathway clone object, so skip.\n\n      if (this.equalPathwayClones_(oldClone, clone)) {\n        continue;\n      } // Update a preexisting cloned pathway.\n      // True is set for the update flag.\n\n      this.mainPlaylistLoader_.updateOrDeleteClone(clone, true);\n      this.contentSteeringController_.addAvailablePathway(id);\n    } // Deep copy contents of next to current pathways.\n\n    this.contentSteeringController_.currentPathwayClones = new Map(JSON.parse(JSON.stringify([...nextPathwayClones])));\n  }\n  /**\n   * Determines whether two pathway clone objects are equivalent.\n   *\n   * @param {Object} a The first pathway clone object.\n   * @param {Object} b The second pathway clone object.\n   * @return {boolean} True if the pathway clone objects are equal, false otherwise.\n   */\n\n  equalPathwayClones_(a, b) {\n    if (a['BASE-ID'] !== b['BASE-ID'] || a.ID !== b.ID || a['URI-REPLACEMENT'].HOST !== b['URI-REPLACEMENT'].HOST) {\n      return false;\n    }\n    const aParams = a['URI-REPLACEMENT'].PARAMS;\n    const bParams = b['URI-REPLACEMENT'].PARAMS; // We need to iterate through both lists of params because one could be\n    // missing a parameter that the other has.\n\n    for (const p in aParams) {\n      if (aParams[p] !== bParams[p]) {\n        return false;\n      }\n    }\n    for (const p in bParams) {\n      if (aParams[p] !== bParams[p]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Changes the current playlists for audio, video and subtitles after a new pathway\n   * is chosen from content steering.\n   */\n\n  changeSegmentPathway_() {\n    const nextPlaylist = this.selectPlaylist();\n    this.pauseLoading(); // Switch audio and text track playlists if necessary in DASH\n\n    if (this.contentSteeringController_.manifestType_ === 'DASH') {\n      this.switchMediaForDASHContentSteering_();\n    }\n    this.switchMedia_(nextPlaylist, 'content-steering');\n  }\n  /**\n   * Iterates through playlists and check their keyId set and compare with the\n   * keyStatusMap, only enable playlists that have a usable key. If the playlist\n   * has no keyId leave it enabled by default.\n   */\n\n  excludeNonUsablePlaylistsByKeyId_() {\n    if (!this.mainPlaylistLoader_ || !this.mainPlaylistLoader_.main) {\n      return;\n    }\n    let nonUsableKeyStatusCount = 0;\n    const NON_USABLE = 'non-usable';\n    this.mainPlaylistLoader_.main.playlists.forEach(playlist => {\n      const keyIdSet = this.mainPlaylistLoader_.getKeyIdSet(playlist); // If the playlist doesn't have keyIDs lets not exclude it.\n\n      if (!keyIdSet || !keyIdSet.size) {\n        return;\n      }\n      keyIdSet.forEach(key => {\n        const USABLE = 'usable';\n        const hasUsableKeyStatus = this.keyStatusMap_.has(key) && this.keyStatusMap_.get(key) === USABLE;\n        const nonUsableExclusion = playlist.lastExcludeReason_ === NON_USABLE && playlist.excludeUntil === Infinity;\n        if (!hasUsableKeyStatus) {\n          // Only exclude playlists that haven't already been excluded as non-usable.\n          if (playlist.excludeUntil !== Infinity && playlist.lastExcludeReason_ !== NON_USABLE) {\n            playlist.excludeUntil = Infinity;\n            playlist.lastExcludeReason_ = NON_USABLE;\n            this.logger_(`excluding playlist ${playlist.id} because the key ID ${key} doesn't exist in the keyStatusMap or is not ${USABLE}`);\n          } // count all nonUsableKeyStatus\n\n          nonUsableKeyStatusCount++;\n        } else if (hasUsableKeyStatus && nonUsableExclusion) {\n          delete playlist.excludeUntil;\n          delete playlist.lastExcludeReason_;\n          this.logger_(`enabling playlist ${playlist.id} because key ID ${key} is ${USABLE}`);\n        }\n      });\n    }); // If for whatever reason every playlist has a non usable key status. Lets try re-including the SD renditions as a failsafe.\n\n    if (nonUsableKeyStatusCount >= this.mainPlaylistLoader_.main.playlists.length) {\n      this.mainPlaylistLoader_.main.playlists.forEach(playlist => {\n        const isNonHD = playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height < 720;\n        const excludedForNonUsableKey = playlist.excludeUntil === Infinity && playlist.lastExcludeReason_ === NON_USABLE;\n        if (isNonHD && excludedForNonUsableKey) {\n          // Only delete the excludeUntil so we don't try and re-exclude these playlists.\n          delete playlist.excludeUntil;\n          videojs.log.warn(`enabling non-HD playlist ${playlist.id} because all playlists were excluded due to ${NON_USABLE} key IDs`);\n        }\n      });\n    }\n  }\n  /**\n   * Adds a keystatus to the keystatus map, tries to convert to string if necessary.\n   *\n   * @param {any} keyId the keyId to add a status for\n   * @param {string} status the status of the keyId\n   */\n\n  addKeyStatus_(keyId, status) {\n    const isString = typeof keyId === 'string';\n    const keyIdHexString = isString ? keyId : bufferToHexString(keyId);\n    const formattedKeyIdString = keyIdHexString.slice(0, 32).toLowerCase();\n    this.logger_(`KeyStatus '${status}' with key ID ${formattedKeyIdString} added to the keyStatusMap`);\n    this.keyStatusMap_.set(formattedKeyIdString, status);\n  }\n  /**\n   * Utility function for adding key status to the keyStatusMap and filtering usable encrypted playlists.\n   *\n   * @param {any} keyId the keyId from the keystatuschange event\n   * @param {string} status the key status string\n   */\n\n  updatePlaylistByKeyStatus(keyId, status) {\n    this.addKeyStatus_(keyId, status);\n    if (!this.waitingForFastQualityPlaylistReceived_) {\n      this.excludeNonUsableThenChangePlaylist_();\n    } // Listen to loadedplaylist with a single listener and check for new contentProtection elements when a playlist is updated.\n\n    this.mainPlaylistLoader_.off('loadedplaylist', this.excludeNonUsableThenChangePlaylist_.bind(this));\n    this.mainPlaylistLoader_.on('loadedplaylist', this.excludeNonUsableThenChangePlaylist_.bind(this));\n  }\n  excludeNonUsableThenChangePlaylist_() {\n    this.excludeNonUsablePlaylistsByKeyId_();\n    this.fastQualityChange_();\n  }\n}\n\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The main playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\nconst enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n  const playlist = loader.main.playlists[playlistID];\n  const incompatible = isIncompatible(playlist);\n  const currentlyEnabled = isEnabled(playlist);\n  if (typeof enable === 'undefined') {\n    return currentlyEnabled;\n  }\n  if (enable) {\n    delete playlist.disabled;\n  } else {\n    playlist.disabled = true;\n  }\n  if (enable !== currentlyEnabled && !incompatible) {\n    // Ensure the outside world knows about our changes\n    changePlaylistFn();\n    if (enable) {\n      loader.trigger('renditionenabled');\n    } else {\n      loader.trigger('renditiondisabled');\n    }\n  }\n  return enable;\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\nclass Representation {\n  constructor(vhsHandler, playlist, id) {\n    const {\n      playlistController_: pc\n    } = vhsHandler;\n    const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n    if (playlist.attributes) {\n      const resolution = playlist.attributes.RESOLUTION;\n      this.width = resolution && resolution.width;\n      this.height = resolution && resolution.height;\n      this.bandwidth = playlist.attributes.BANDWIDTH;\n      this.frameRate = playlist.attributes['FRAME-RATE'];\n    }\n    this.codecs = codecsForPlaylist(pc.main(), playlist);\n    this.playlist = playlist; // The id is simply the ordinality of the media playlist\n    // within the main playlist\n\n    this.id = id; // Partially-apply the enableFunction to create a playlist-\n    // specific variant\n\n    this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n  }\n}\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\nconst renditionSelectionMixin = function (vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = () => {\n    const main = vhsHandler.playlistController_.main();\n    const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n    if (!playlists) {\n      return [];\n    }\n    return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n  };\n};\n\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\nconst timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nclass PlaybackWatcher {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  constructor(options) {\n    this.playlistController_ = options.playlistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n    const playHandler = () => this.monitorCurrentTime_();\n    const canPlayHandler = () => this.monitorCurrentTime_();\n    const waitingHandler = () => this.techWaiting_();\n    const cancelTimerHandler = () => this.resetTimeUpdate_();\n    const pc = this.playlistController_;\n    const loaderTypes = ['main', 'subtitle', 'audio'];\n    const loaderChecks = {};\n    loaderTypes.forEach(type => {\n      loaderChecks[type] = {\n        reset: () => this.resetSegmentDownloads_(type),\n        updateend: () => this.checkSegmentDownloads_(type)\n      };\n      pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    const setSeekingHandlers = fn => {\n      ['main', 'audio'].forEach(type => {\n        pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n      });\n    };\n    this.seekingAppendCheck_ = () => {\n      if (this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n    this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n    this.watchForBadSeeking_ = () => {\n      this.clearSeekingAppendCheck_();\n      setSeekingHandlers('on');\n    };\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = () => {\n      this.clearSeekingAppendCheck_();\n      this.logger_('dispose');\n      this.tech_.off('waiting', waitingHandler);\n      this.tech_.off(timerCancelEvents, cancelTimerHandler);\n      this.tech_.off('canplay', canPlayHandler);\n      this.tech_.off('play', playHandler);\n      this.tech_.off('seeking', this.watchForBadSeeking_);\n      this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n      loaderTypes.forEach(type => {\n        pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n        pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n        this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      }\n      this.resetTimeUpdate_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n  monitorCurrentTime_() {\n    this.checkCurrentTime_();\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n\n  resetSegmentDownloads_(type) {\n    const loader = this.playlistController_[`${type}SegmentLoader_`];\n    if (this[`${type}StalledDownloads_`] > 0) {\n      this.logger_(`resetting possible stalled download count for ${type} loader`);\n    }\n    this[`${type}StalledDownloads_`] = 0;\n    this[`${type}Buffered_`] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We exclude the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n\n  checkSegmentDownloads_(type) {\n    const pc = this.playlistController_;\n    const loader = pc[`${type}SegmentLoader_`];\n    const buffered = loader.buffered_();\n    const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n    this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n    this[`${type}StalledDownloads_`]++;\n    this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[`${type}StalledDownloads_`] < 10) {\n      return;\n    }\n    this.logger_(`${type} loader stalled download exclusion`);\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: `vhs-${type}-download-exclusion`\n    });\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n    pc.excludePlaylist({\n      error: {\n        message: `Excessive ${type} segment downloading detected.`\n      },\n      playlistExclusionDuration: Infinity\n    });\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n\n  checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n   *\n   * @private\n   */\n\n  resetTimeUpdate_() {\n    this.consecutiveUpdates = 0;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n\n  fixesBadSeeks_() {\n    const seeking = this.tech_.seeking();\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    let seekTo;\n    if (isAfterSeekableRange) {\n      const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + (\n      // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    const sourceUpdater = this.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    const media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    const bufferedToCheck = [audioBuffered, videoBuffered];\n    for (let i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n      const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n    const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n\n  waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n    const currentTime = this.tech_.currentTime();\n    const buffered = this.tech_.buffered();\n    const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n\n  techWaiting_() {\n    const seekable = this.seekable();\n    const currentTime = this.tech_.currentTime();\n    if (this.tech_.seeking()) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      const livePoint = seekable.end(seekable.length - 1);\n      this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      return true;\n    }\n    const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n    const buffered = this.tech_.buffered();\n    const videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime\n    });\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.resetTimeUpdate_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      return true;\n    }\n    const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n      this.resetTimeUpdate_();\n      this.skipTheGap_(currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n    return false;\n  }\n  afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n    let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    const isLive = !playlist.endList;\n    const isLLHLS = typeof playlist.partTargetDuration === 'number';\n    if (isLive && (isLLHLS || allowSeeksWithinUnsafeLiveWindow)) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n    return false;\n  }\n  beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length &&\n    // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n    return false;\n  }\n  videoUnderflow_({\n    videoBuffered,\n    audioBuffered,\n    currentTime\n  }) {\n    // audio only content will not have video underflow :)\n    if (!videoBuffered) {\n      return;\n    }\n    let gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      const videoRange = findRange(videoBuffered, currentTime);\n      const audioRange = findRange(audioBuffered, currentTime);\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n    } else {\n      const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n    if (gap) {\n      this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n      return true;\n    }\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n\n  skipTheGap_(scheduledCurrentTime) {\n    const buffered = this.tech_.buffered();\n    const currentTime = this.tech_.currentTime();\n    const nextRange = findNextRange(buffered, currentTime);\n    this.resetTimeUpdate_();\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n  }\n  gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    const gaps = findGaps(buffered);\n    for (let i = 0; i < gaps.length; i++) {\n      const start = gaps.start(i);\n      const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start,\n          end\n        };\n      }\n    }\n    return null;\n  }\n}\nconst defaultOptions = {\n  errorInterval: 30,\n  getSource(next) {\n    const tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    const sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nconst initPlugin = function (player, options) {\n  let lastCalled = 0;\n  let seekTo = 0;\n  const localOptions = merge(defaultOptions, options);\n  player.ready(() => {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  const loadedMetadataHandler = function () {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n  const setSource = function (sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n  const errorHandler = function () {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      return;\n    }\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n  const cleanupEvents = function () {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n  const reinitPlugin = function (newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\nconst reloadSourceOnError = function (options) {\n  initPlugin(this, options);\n};\nvar version$4 = \"3.10.0\";\nvar version$3 = \"7.0.2\";\nvar version$2 = \"1.3.0\";\nvar version$1 = \"7.1.0\";\nvar version = \"4.0.1\";\n\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the VHS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/main/LICENSE\n */\nconst Vhs = {\n  PlaylistLoader,\n  Playlist,\n  utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector,\n  movingAverageBandwidthSelector,\n  comparePlaylistBandwidth,\n  comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(prop => {\n  Object.defineProperty(Vhs, prop, {\n    get() {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      return Config[prop];\n    },\n    set(value) {\n      videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n        return;\n      }\n      Config[prop] = value;\n    }\n  });\n});\nconst LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nconst handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n  const newPlaylist = playlistLoader.media();\n  let selectedIndex = -1;\n  for (let i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\nconst handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n  vhs.representations().forEach(rep => {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // VHS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\nconst emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n  let codecs = {};\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n  const videoContentType = getMimeForCodec(codecs.video);\n  const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  const keySystemContentTypes = {};\n  for (const keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n  return merge(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\nconst getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n  return playlists.reduce((keySystemsArr, playlist) => {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n    const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n      const keySystemOptions = playlist.contentProtection[keySystem];\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n      return keySystemsObj;\n    }, {});\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the main playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\nconst waitForKeySessionCreation = ({\n  player,\n  sourceKeySystems,\n  audioMedia,\n  mainPlaylists\n}) => {\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n  const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  const initializationFinishedPromises = [];\n  const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but\n  // the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(keySystemsOptions => {\n    keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise((resolve, reject) => {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, err => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([\n  // If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises),\n  // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\nconst setupEmeOptions = ({\n  player,\n  sourceKeySystems,\n  media,\n  audioMedia\n}) => {\n  const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n  if (!sourceOptions) {\n    return false;\n  }\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n  return true;\n};\nconst getVhsLocalStorage = () => {\n  if (!window$1.localStorage) {\n    return null;\n  }\n  const storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n  if (!storedObject) {\n    return null;\n  }\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\nconst updateVhsLocalStorage = options => {\n  if (!window$1.localStorage) {\n    return false;\n  }\n  let objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? merge(objectToStore, options) : options;\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\nconst expandDataUri = dataUri => {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n  return dataUri;\n};\n/**\n * Adds a request hook to an xhr object\n *\n * @param {Object} xhr object to add the onRequest hook to\n * @param {function} callback hook function for an xhr request\n */\n\nconst addOnRequestHook = (xhr, callback) => {\n  if (!xhr._requestCallbackSet) {\n    xhr._requestCallbackSet = new Set();\n  }\n  xhr._requestCallbackSet.add(callback);\n};\n/**\n * Adds a response hook to an xhr object\n *\n * @param {Object} xhr object to add the onResponse hook to\n * @param {function} callback hook function for an xhr response\n */\n\nconst addOnResponseHook = (xhr, callback) => {\n  if (!xhr._responseCallbackSet) {\n    xhr._responseCallbackSet = new Set();\n  }\n  xhr._responseCallbackSet.add(callback);\n};\n/**\n * Removes a request hook on an xhr object, deletes the onRequest set if empty.\n *\n * @param {Object} xhr object to remove the onRequest hook from\n * @param {function} callback hook function to remove\n */\n\nconst removeOnRequestHook = (xhr, callback) => {\n  if (!xhr._requestCallbackSet) {\n    return;\n  }\n  xhr._requestCallbackSet.delete(callback);\n  if (!xhr._requestCallbackSet.size) {\n    delete xhr._requestCallbackSet;\n  }\n};\n/**\n * Removes a response hook on an xhr object, deletes the onResponse set if empty.\n *\n * @param {Object} xhr object to remove the onResponse hook from\n * @param {function} callback hook function to remove\n */\n\nconst removeOnResponseHook = (xhr, callback) => {\n  if (!xhr._responseCallbackSet) {\n    return;\n  }\n  xhr._responseCallbackSet.delete(callback);\n  if (!xhr._responseCallbackSet.size) {\n    delete xhr._responseCallbackSet;\n  }\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n  const video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n  const canPlay = [\n  // Apple santioned\n  'application/vnd.apple.mpegurl',\n  // Apple sanctioned for backwards compatibility\n  'audio/mpegurl',\n  // Very common\n  'audio/x-mpegurl',\n  // Very common\n  'application/x-mpegurl',\n  // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\nVhs.supportsTypeNatively = type => {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n  return false;\n};\n/**\n * VHS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\nVhs.isSupported = function () {\n  return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n/**\n * A global function for setting an onRequest hook\n *\n * @param {function} callback for request modifiction\n */\n\nVhs.xhr.onRequest = function (callback) {\n  addOnRequestHook(Vhs.xhr, callback);\n};\n/**\n * A global function for setting an onResponse hook\n *\n * @param {callback} callback for response data retrieval\n */\n\nVhs.xhr.onResponse = function (callback) {\n  addOnResponseHook(Vhs.xhr, callback);\n};\n/**\n * Deletes a global onRequest callback if it exists\n *\n * @param {function} callback to delete from the global set\n */\n\nVhs.xhr.offRequest = function (callback) {\n  removeOnRequestHook(Vhs.xhr, callback);\n};\n/**\n * Deletes a global onResponse callback if it exists\n *\n * @param {function} callback to delete from the global set\n */\n\nVhs.xhr.offResponse = function (callback) {\n  removeOnResponseHook(Vhs.xhr, callback);\n};\nconst Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of VHS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nclass VhsHandler extends Component {\n  constructor(source, tech, options) {\n    super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n    if (typeof options.initialBandwidth === 'number') {\n      this.options_.bandwidth = options.initialBandwidth;\n    }\n    this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n    // so, get it from Video.js via the `playerId`\n\n    if (tech.options_ && tech.options_.playerId) {\n      const _player = videojs.getPlayer(tech.options_.playerId);\n      this.player_ = _player;\n    }\n    this.tech_ = tech;\n    this.source_ = source;\n    this.stats = {};\n    this.ignoreNextSeekingEvent_ = false;\n    this.setOptions_();\n    if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native VHS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n    this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n      const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n      if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n        this.playlistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        this.playlistController_.checkABR_();\n      }\n    });\n    this.on(this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n    this.on(this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have pc loaded.\n      if (this.tech_.error() && this.playlistController_) {\n        this.playlistController_.pauseLoading();\n      }\n    });\n    this.on(this.tech_, 'play', this.play);\n  }\n  /**\n   * Set VHS options based on options from configuration, as well as partial\n   * options to be passed at a later time.\n   *\n   * @param {Object} options A partial chunk of config options\n   */\n\n  setOptions_(options = {}) {\n    this.options_ = merge(this.options_, options); // defaults\n\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useForcedSubtitles = this.options_.useForcedSubtitles || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n    this.options_.llhls = this.options_.llhls === false ? false : true;\n    this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n    if (typeof this.options_.playlistExclusionDuration !== 'number') {\n      this.options_.playlistExclusionDuration = 60;\n    }\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        const storedObject = getVhsLocalStorage();\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n        }\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useForcedSubtitles', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n      if (typeof this.source_[option] !== 'undefined') {\n        this.options_[option] = this.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  } // alias for public method to set options\n\n  setOptions(options = {}) {\n    this.setOptions_(options);\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n\n  src(src, type) {\n    // do nothing if the src is falsey\n    if (!src) {\n      return;\n    }\n    this.setOptions_(); // add main playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = time => {\n      this.tech_.setCurrentTime(time);\n    };\n    this.playlistController_ = new PlaylistController(this.options_);\n    const playbackWatcherOptions = merge({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: () => this.seekable(),\n      media: () => this.playlistController_.media(),\n      playlistController: this.playlistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.playlistController_.on('error', () => {\n      const player = videojs.players[this.tech_.options_.playerId];\n      let error = this.playlistController_.error;\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n      player.error(error);\n    });\n    const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.playlistController_.mainPlaylistLoader_;\n    this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get() {\n          return this.playlistController_.selectPlaylist;\n        },\n        set(selectPlaylist) {\n          this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get() {\n          return this.playlistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set(throughput) {\n          this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get() {\n          let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n          const networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          const tenMbpsAsBitsPerSecond = 10e6;\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n          return playerBandwidthEst;\n        },\n        set(bandwidth) {\n          this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.playlistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get() {\n          const invBandwidth = 1 / (this.bandwidth || 1);\n          let invThroughput;\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n          const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: () => this.bandwidth || 0,\n        enumerable: true\n      },\n      mediaRequests: {\n        get: () => this.playlistController_.mediaRequests_() || 0,\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: () => this.playlistController_.mediaTransferDuration_() || 0,\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n        enumerable: true\n      },\n      mediaAppends: {\n        get: () => this.playlistController_.mediaAppends_() || 0,\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: () => this.playlistController_.appendsToLoadedData_() || 0,\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: () => this.playlistController_.timeToLoadedData_() || 0,\n        enumerable: true\n      },\n      buffered: {\n        get: () => timeRangesToArray(this.tech_.buffered()),\n        enumerable: true\n      },\n      currentTime: {\n        get: () => this.tech_.currentTime(),\n        enumerable: true\n      },\n      currentSource: {\n        get: () => this.tech_.currentSource_,\n        enumerable: true\n      },\n      currentTech: {\n        get: () => this.tech_.name_,\n        enumerable: true\n      },\n      duration: {\n        get: () => this.tech_.duration(),\n        enumerable: true\n      },\n      main: {\n        get: () => this.playlists.main,\n        enumerable: true\n      },\n      playerDimensions: {\n        get: () => this.tech_.currentDimensions(),\n        enumerable: true\n      },\n      seekable: {\n        get: () => timeRangesToArray(this.tech_.seekable()),\n        enumerable: true\n      },\n      timestamp: {\n        get: () => Date.now(),\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: () => this.tech_.getVideoPlaybackQuality(),\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n    this.tech_.on('bandwidthupdate', () => {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: this.bandwidth,\n          throughput: Math.round(this.throughput)\n        });\n      }\n    });\n    this.playlistController_.on('selectedinitialmedia', () => {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(this);\n    });\n    this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n      this.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.playlistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.playlistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.playlistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  }\n  createKeySessions_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.main.playlists\n    }).then(() => {\n      this.logger_('created EME key session');\n      this.playlistController_.sourceUpdater_.initializedEme();\n    }).catch(err => {\n      this.logger_('error while creating EME key session', err);\n      this.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  }\n  handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n\n  setupEme_() {\n    const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    const didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', e => {\n      this.playlistController_.updatePlaylistByKeyStatus(e.keyId, e.status);\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_);\n    if (!didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.playlistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n\n  setupQualityLevels_() {\n    const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n    this.qualityLevels_ = player.qualityLevels();\n    this.playlistController_.on('selectedinitialmedia', () => {\n      handleVhsLoadedMetadata(this.qualityLevels_, this);\n    });\n    this.playlists.on('mediachange', () => {\n      handleVhsMediaChange(this.qualityLevels_, this.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n\n  static version() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n\n  version() {\n    return this.constructor.version();\n  }\n  canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n\n  play() {\n    this.playlistController_.play();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  setCurrentTime(currentTime) {\n    this.playlistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  duration() {\n    return this.playlistController_.duration();\n  }\n  /**\n   * a wrapper around the function in PlaylistController\n   */\n\n  seekable() {\n    return this.playlistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n\n  dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n    if (this.playlistController_) {\n      this.playlistController_.dispose();\n    }\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    }\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n    super.dispose();\n  }\n  convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.playlistController_.media(),\n      time,\n      callback\n    });\n  } // the player must be playing before calling this\n\n  seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n    return seekToProgramTime({\n      programTime,\n      playlist: this.playlistController_.media(),\n      retryCount,\n      pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback\n    });\n  }\n  /**\n   * Adds the onRequest, onResponse, offRequest and offResponse functions\n   * to the VhsHandler xhr Object.\n   */\n\n  setupXhrHooks_() {\n    /**\n     * A player function for setting an onRequest hook\n     *\n     * @param {function} callback for request modifiction\n     */\n    this.xhr.onRequest = callback => {\n      addOnRequestHook(this.xhr, callback);\n    };\n    /**\n     * A player function for setting an onResponse hook\n     *\n     * @param {callback} callback for response data retrieval\n     */\n\n    this.xhr.onResponse = callback => {\n      addOnResponseHook(this.xhr, callback);\n    };\n    /**\n     * Deletes a player onRequest callback if it exists\n     *\n     * @param {function} callback to delete from the player set\n     */\n\n    this.xhr.offRequest = callback => {\n      removeOnRequestHook(this.xhr, callback);\n    };\n    /**\n     * Deletes a player onResponse callback if it exists\n     *\n     * @param {function} callback to delete from the player set\n     */\n\n    this.xhr.offResponse = callback => {\n      removeOnResponseHook(this.xhr, callback);\n    }; // Trigger an event on the player to notify the user that vhs is ready to set xhr hooks.\n    // This allows hooks to be set before the source is set to vhs when handleSource is called.\n\n    this.player_.trigger('xhr-hooks-ready');\n  }\n}\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\nconst VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource(srcObj, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource(source, tech, options = {}) {\n    const localOptions = merge(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.setupXhrHooks_();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType(type, options) {\n    const simpleType = simpleTypeFromSourceType(type);\n    if (!simpleType) {\n      return '';\n    }\n    const overrideNative = VhsSourceHandler.getOverrideNative(options);\n    const supportsTypeNatively = Vhs.supportsTypeNatively(simpleType);\n    const canUseMsePlayback = !supportsTypeNatively || overrideNative;\n    return canUseMsePlayback ? 'maybe' : '';\n  },\n  getOverrideNative(options = {}) {\n    const {\n      vhs = {}\n    } = options;\n    const defaultOverrideNative = !(videojs.browser.IS_ANY_SAFARI || videojs.browser.IS_IOS);\n    const {\n      overrideNative = defaultOverrideNative\n    } = vhs;\n    return overrideNative;\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nconst supportsNativeMediaSources = () => {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\nvideojs.VhsHandler = VhsHandler;\nvideojs.VhsSourceHandler = VhsSourceHandler;\nvideojs.Vhs = Vhs;\nif (!videojs.use) {\n  videojs.registerComponent('Vhs', Vhs);\n}\nvideojs.options.vhs = videojs.options.vhs || {};\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport { videojs as default };\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar document = require('global/document');\n\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0].trim();\n    var v = kv[1].trim();\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    try {\n      cue.line = settings.get(\"line\", \"auto\");\n    } catch (e) {}\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    // Safari still uses the old middle value and won't accept center\n    try {\n      cue.align = settings.get(\"align\", \"center\");\n    } catch (e) {\n      cue.align = settings.get(\"align\", \"middle\");\n    }\n    try {\n      cue.position = settings.get(\"position\", \"auto\");\n    } catch (e) {\n      cue.position = settings.get(\"position\", {\n        start: 0,\n        left: 0,\n        center: 50,\n        middle: 50,\n        end: 100,\n        right: 100\n      }, cue.align);\n    }\n\n\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      center: \"center\",\n      middle: \"center\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\n// When evaluating this file as part of a Webpack bundle for server\n// side rendering, `document` is an empty object.\nvar TEXTAREA_ELEMENT = document.createElement && document.createElement(\"textarea\");\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\n// 5.1 default text color\n// 5.2 default text background color is equivalent to text color with bg_ prefix\nvar DEFAULT_COLOR_CLASS = {\n  white: 'rgba(255,255,255,1)',\n  lime: 'rgba(0,255,0,1)',\n  cyan: 'rgba(0,255,255,1)',\n  red: 'rgba(255,0,0,1)',\n  yellow: 'rgba(255,255,0,1)',\n  magenta: 'rgba(255,0,255,1)',\n  blue: 'rgba(0,0,255,1)',\n  black: 'rgba(0,0,0,1)'\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  function unescape(s) {\n    TEXTAREA_ELEMENT.innerHTML = s;\n    s = TEXTAREA_ELEMENT.textContent;\n    TEXTAREA_ELEMENT.textContent = \"\";\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        var classes = m[2].split('.');\n\n        classes.forEach(function(cl) {\n          var bgColor = /^bg_/.test(cl);\n          // slice out `bg_` if it's a background color\n          var colorName = bgColor ? cl.slice(3) : cl;\n\n          if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n            var propName = bgColor ? 'background-color' : 'color';\n            var propValue = DEFAULT_COLOR_CLASS[colorName];\n\n            node.style[propName] = propValue;\n          }\n        });\n\n        node.className = classes.join(' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except middle instead of center on Safari.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n  case \"line-left\":\n    textPos = cue.position;\n    break;\n  case \"center\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n  case \"line-right\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"center\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          // Safari still uses the old middle value and won't accept center\n          try {\n            self.cue.align = \"center\";\n          } catch (e) {\n            self.cue.align = \"middle\";\n          }\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"center\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1,\n  \"auto\": 1,\n  \"line-left\": 1,\n  \"line-right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = \"auto\";\n  var _positionAlign = \"auto\";\n  var _size = 100;\n  var _align = \"center\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n        } else {\n          _lineAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n        } else {\n          _positionAlign = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          console.warn(\"Scroll: an invalid or illegal string was specified.\");\n        } else {\n          _scroll = setting;\n        }\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nmodule.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (module.exports = _isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports)();\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var defineProperty = require(\"./defineProperty.js\");\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nmodule.exports = _objectSpread2, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["DeleteOutlined","props","ref","React","AntdIcon","_extends","icon","DeleteOutlinedSvg","PlusOutlined","PlusOutlinedSvg","UploadOutlined","UploadOutlinedSvg","window","require","module","exports","callback","decodeResponseBody","err","response","responseBody","statusCode","cause","TextDecoder","charset","contentTypeHeader","toLowerCase","split","reduce","contentType","_contentType$split","type","value","trim","getCharset","headers","decode","e","String","fromCharCode","apply","Uint8Array","isFunction","createXHR","httpHandler","parseHeaders","result","forEach","row","index","indexOf","key","slice","Array","isArray","push","initParams","uri","options","params","_createXHR","Error","called","body","getBody","undefined","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","parse","errorFunc","evt","clearTimeout","timeoutTimer","failureResponse","loadFunc","aborted","status","useXDR","method","url","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","hasOwnProperty","obj","i","isEmpty","beforeSend","send","array","iterator","length","forEachArray","toUpperCase","freeze","object","oc","Object","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE","SVG","XML","XMLNS","assign","target","source","TypeError","prototype","call","find","list","predicate","ac","item","conventions","dom","entities","sax","DOMImplementation","ParseError","XMLReader","normalizeLineEndings","input","replace","DOMParser","this","locator","DOMHandler","cdata","position","node","lineNumber","columnNumber","_locator","l","systemId","_toString","chars","start","substr","java","lang","appendElement","hander","currentElement","appendChild","doc","parseFromString","mimeType","domBuilder","errorHandler","defaultNSMap","xmlns","test","entityMap","HTML_ENTITIES","XML_ENTITIES","setDocumentLocator","errorImpl","isCallback","Function","build","fn","msg","buildErrorHandler","xml","normalize","error","startDocument","createDocument","documentURI","startElement","namespaceURI","localName","qName","attrs","el","createElementNS","len","getURI","getValue","attr","getQName","createAttributeNS","getLocator","nodeValue","setAttributeNode","endElement","current","tagName","parentNode","startPrefixMapping","prefix","endPrefixMapping","processingInstruction","ins","createProcessingInstruction","ignorableWhitespace","ch","characters","arguments","charNode","createCDATASection","createTextNode","skippedEntity","name","endDocument","comment","comm","createComment","startCDATA","endCDATA","startDTD","publicId","impl","implementation","createDocumentType","dt","doctype","warning","console","warn","fatalError","notEmptyString","orderedSetReducer","element","toOrderedSet","filter","splitOnASCIIWhitespace","keys","copy","src","dest","p","Class","Super","pt","t","constructor","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","HIERARCHY_REQUEST_ERR","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","NOT_FOUND_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","INUSE_ATTRIBUTE_ERR","NOT_SUPPORTED_ERR","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","DOMException","message","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ownerDocument","ls","__set__","$$length","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","ns","_nsMap","_onAddAttribute","_removeNamedNode","lastIndex","Node","_xmlEncoder","c","charCodeAt","_visitNode","firstChild","nextSibling","Document","remove","_onUpdateChild","newChild","cs","childNodes","child","_removeChild","previous","previousSibling","next","lastChild","isDocTypeNode","nodeType","isElementNode","isTextNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","assertPreInsertionValidity1to5","parent","hasValidParentNodeType","hasInsertableNodeType","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","_insertBefore","_inDocumentAssertion","cp","removeChild","newFirst","newLast","pre","Element","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","buf","refNode","lookupPrefix","visibleNamespaces","namespace","serializeToString","join","needNamespaceDefine","addSerializedAttribute","qualifiedName","attributes","prefixedNodeName","defaultNS","ai","nsi","pubid","sysid","sub","internalSubset","importNode","deep","node2","cloneNode","n","v","attrs2","_ownerElement","toString","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","version","root","insertBefore","refChild","replaceChild","oldChild","hasChildNodes","appendData","isSupported","hasAttributes","map","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","id","rtv","getAttribute","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","matches","nodeClassNamesSet","every","createElement","createDocumentFragment","createAttribute","specified","createEntityReference","pl","hasAttribute","getAttributeNode","setAttribute","removeAttribute","removeAttributeNode","_appendSingleChild","setAttributeNodeNS","removeAttributeNS","old","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagName","getElementsByTagNameNS","substringData","offset","count","substring","text","insertData","replaceData","deleteData","splitText","newText","newNode","defineProperty","getTextContent","get","set","amp","apos","gt","lt","quot","Aacute","aacute","Abreve","abreve","acd","acE","Acirc","acirc","acute","Acy","acy","AElig","aelig","af","Afr","afr","Agrave","agrave","alefsym","aleph","Alpha","alpha","Amacr","amacr","amalg","AMP","And","and","andand","andd","andslope","andv","ang","ange","angle","angmsd","angmsdaa","angmsdab","angmsdac","angmsdad","angmsdae","angmsdaf","angmsdag","angmsdah","angrt","angrtvb","angrtvbd","angsph","angst","angzarr","Aogon","aogon","Aopf","aopf","ap","apacir","apE","ape","apid","ApplyFunction","approx","approxeq","Aring","aring","Ascr","ascr","Assign","ast","asymp","asympeq","Atilde","atilde","Auml","auml","awconint","awint","backcong","backepsilon","backprime","backsim","backsimeq","Backslash","Barv","barvee","Barwed","barwed","barwedge","bbrk","bbrktbrk","bcong","Bcy","bcy","bdquo","becaus","Because","because","bemptyv","bepsi","bernou","Bernoullis","Beta","beta","beth","between","Bfr","bfr","bigcap","bigcirc","bigcup","bigodot","bigoplus","bigotimes","bigsqcup","bigstar","bigtriangledown","bigtriangleup","biguplus","bigvee","bigwedge","bkarow","blacklozenge","blacksquare","blacktriangle","blacktriangledown","blacktriangleleft","blacktriangleright","blank","blk12","blk14","blk34","block","bne","bnequiv","bNot","bnot","Bopf","bopf","bot","bottom","bowtie","boxbox","boxDL","boxDl","boxdL","boxdl","boxDR","boxDr","boxdR","boxdr","boxH","boxh","boxHD","boxHd","boxhD","boxhd","boxHU","boxHu","boxhU","boxhu","boxminus","boxplus","boxtimes","boxUL","boxUl","boxuL","boxul","boxUR","boxUr","boxuR","boxur","boxV","boxv","boxVH","boxVh","boxvH","boxvh","boxVL","boxVl","boxvL","boxvl","boxVR","boxVr","boxvR","boxvr","bprime","Breve","breve","brvbar","Bscr","bscr","bsemi","bsim","bsime","bsol","bsolb","bsolhsub","bull","bullet","bump","bumpE","bumpe","Bumpeq","bumpeq","Cacute","cacute","Cap","cap","capand","capbrcup","capcap","capcup","capdot","CapitalDifferentialD","caps","caret","caron","Cayleys","ccaps","Ccaron","ccaron","Ccedil","ccedil","Ccirc","ccirc","Cconint","ccups","ccupssm","Cdot","cdot","cedil","Cedilla","cemptyv","cent","CenterDot","centerdot","Cfr","cfr","CHcy","chcy","check","checkmark","Chi","chi","cir","circ","circeq","circlearrowleft","circlearrowright","circledast","circledcirc","circleddash","CircleDot","circledR","circledS","CircleMinus","CirclePlus","CircleTimes","cirE","cire","cirfnint","cirmid","cirscir","ClockwiseContourIntegral","CloseCurlyDoubleQuote","CloseCurlyQuote","clubs","clubsuit","Colon","colon","Colone","colone","coloneq","comma","commat","comp","compfn","complement","complexes","cong","congdot","Congruent","Conint","conint","ContourIntegral","Copf","copf","coprod","Coproduct","COPY","copysr","CounterClockwiseContourIntegral","crarr","Cross","cross","Cscr","cscr","csub","csube","csup","csupe","ctdot","cudarrl","cudarrr","cuepr","cuesc","cularr","cularrp","Cup","cup","cupbrcap","CupCap","cupcap","cupcup","cupdot","cupor","cups","curarr","curarrm","curlyeqprec","curlyeqsucc","curlyvee","curlywedge","curren","curvearrowleft","curvearrowright","cuvee","cuwed","cwconint","cwint","cylcty","Dagger","dagger","daleth","Darr","dArr","darr","dash","Dashv","dashv","dbkarow","dblac","Dcaron","dcaron","Dcy","dcy","DD","dd","ddagger","ddarr","DDotrahd","ddotseq","deg","Del","Delta","delta","demptyv","dfisht","Dfr","dfr","dHar","dharl","dharr","DiacriticalAcute","DiacriticalDot","DiacriticalDoubleAcute","DiacriticalGrave","DiacriticalTilde","diam","Diamond","diamond","diamondsuit","diams","die","DifferentialD","digamma","disin","div","divide","divideontimes","divonx","DJcy","djcy","dlcorn","dlcrop","dollar","Dopf","dopf","Dot","dot","DotDot","doteq","doteqdot","DotEqual","dotminus","dotplus","dotsquare","doublebarwedge","DoubleContourIntegral","DoubleDot","DoubleDownArrow","DoubleLeftArrow","DoubleLeftRightArrow","DoubleLeftTee","DoubleLongLeftArrow","DoubleLongLeftRightArrow","DoubleLongRightArrow","DoubleRightArrow","DoubleRightTee","DoubleUpArrow","DoubleUpDownArrow","DoubleVerticalBar","DownArrow","Downarrow","downarrow","DownArrowBar","DownArrowUpArrow","DownBreve","downdownarrows","downharpoonleft","downharpoonright","DownLeftRightVector","DownLeftTeeVector","DownLeftVector","DownLeftVectorBar","DownRightTeeVector","DownRightVector","DownRightVectorBar","DownTee","DownTeeArrow","drbkarow","drcorn","drcrop","Dscr","dscr","DScy","dscy","dsol","Dstrok","dstrok","dtdot","dtri","dtrif","duarr","duhar","dwangle","DZcy","dzcy","dzigrarr","Eacute","eacute","easter","Ecaron","ecaron","ecir","Ecirc","ecirc","ecolon","Ecy","ecy","eDDot","Edot","eDot","edot","ee","efDot","Efr","efr","eg","Egrave","egrave","egs","egsdot","elinters","ell","els","elsdot","Emacr","emacr","empty","emptyset","EmptySmallSquare","emptyv","EmptyVerySmallSquare","emsp","emsp13","emsp14","ENG","eng","ensp","Eogon","eogon","Eopf","eopf","epar","eparsl","eplus","epsi","Epsilon","epsilon","epsiv","eqcirc","eqcolon","eqsim","eqslantgtr","eqslantless","Equal","equals","EqualTilde","equest","Equilibrium","equiv","equivDD","eqvparsl","erarr","erDot","Escr","escr","esdot","Esim","esim","Eta","eta","ETH","eth","Euml","euml","euro","excl","exist","Exists","expectation","ExponentialE","exponentiale","fallingdotseq","Fcy","fcy","female","ffilig","fflig","ffllig","Ffr","ffr","filig","FilledSmallSquare","FilledVerySmallSquare","fjlig","flat","fllig","fltns","fnof","Fopf","fopf","ForAll","forall","fork","forkv","Fouriertrf","fpartint","frac12","frac13","frac14","frac15","frac16","frac18","frac23","frac25","frac34","frac35","frac38","frac45","frac56","frac58","frac78","frasl","frown","Fscr","fscr","gacute","Gamma","gamma","Gammad","gammad","gap","Gbreve","gbreve","Gcedil","Gcirc","gcirc","Gcy","gcy","Gdot","gdot","gE","ge","gEl","gel","geq","geqq","geqslant","ges","gescc","gesdot","gesdoto","gesdotol","gesl","gesles","Gfr","gfr","Gg","gg","ggg","gimel","GJcy","gjcy","gl","gla","glE","glj","gnap","gnapprox","gnE","gne","gneq","gneqq","gnsim","Gopf","gopf","grave","GreaterEqual","GreaterEqualLess","GreaterFullEqual","GreaterGreater","GreaterLess","GreaterSlantEqual","GreaterTilde","Gscr","gscr","gsim","gsime","gsiml","Gt","GT","gtcc","gtcir","gtdot","gtlPar","gtquest","gtrapprox","gtrarr","gtrdot","gtreqless","gtreqqless","gtrless","gtrsim","gvertneqq","gvnE","Hacek","hairsp","half","hamilt","HARDcy","hardcy","hArr","harr","harrcir","harrw","Hat","hbar","Hcirc","hcirc","hearts","heartsuit","hellip","hercon","Hfr","hfr","HilbertSpace","hksearow","hkswarow","hoarr","homtht","hookleftarrow","hookrightarrow","Hopf","hopf","horbar","HorizontalLine","Hscr","hscr","hslash","Hstrok","hstrok","HumpDownHump","HumpEqual","hybull","hyphen","Iacute","iacute","ic","Icirc","icirc","Icy","icy","Idot","IEcy","iecy","iexcl","iff","Ifr","ifr","Igrave","igrave","ii","iiiint","iiint","iinfin","iiota","IJlig","ijlig","Im","Imacr","imacr","image","ImaginaryI","imagline","imagpart","imath","imof","imped","Implies","in","incare","infin","infintie","inodot","Int","int","intcal","integers","Integral","intercal","Intersection","intlarhk","intprod","InvisibleComma","InvisibleTimes","IOcy","iocy","Iogon","iogon","Iopf","iopf","Iota","iota","iprod","iquest","Iscr","iscr","isin","isindot","isinE","isins","isinsv","isinv","it","Itilde","itilde","Iukcy","iukcy","Iuml","iuml","Jcirc","jcirc","Jcy","jcy","Jfr","jfr","jmath","Jopf","jopf","Jscr","jscr","Jsercy","jsercy","Jukcy","jukcy","Kappa","kappa","kappav","Kcedil","kcedil","Kcy","kcy","Kfr","kfr","kgreen","KHcy","khcy","KJcy","kjcy","Kopf","kopf","Kscr","kscr","lAarr","Lacute","lacute","laemptyv","lagran","Lambda","lambda","Lang","langd","langle","lap","Laplacetrf","laquo","Larr","lArr","larr","larrb","larrbfs","larrfs","larrhk","larrlp","larrpl","larrsim","larrtl","lat","lAtail","latail","late","lates","lBarr","lbarr","lbbrk","lbrace","lbrack","lbrke","lbrksld","lbrkslu","Lcaron","lcaron","Lcedil","lcedil","lceil","lcub","Lcy","lcy","ldca","ldquo","ldquor","ldrdhar","ldrushar","ldsh","lE","le","LeftAngleBracket","LeftArrow","Leftarrow","leftarrow","LeftArrowBar","LeftArrowRightArrow","leftarrowtail","LeftCeiling","LeftDoubleBracket","LeftDownTeeVector","LeftDownVector","LeftDownVectorBar","LeftFloor","leftharpoondown","leftharpoonup","leftleftarrows","LeftRightArrow","Leftrightarrow","leftrightarrow","leftrightarrows","leftrightharpoons","leftrightsquigarrow","LeftRightVector","LeftTee","LeftTeeArrow","LeftTeeVector","leftthreetimes","LeftTriangle","LeftTriangleBar","LeftTriangleEqual","LeftUpDownVector","LeftUpTeeVector","LeftUpVector","LeftUpVectorBar","LeftVector","LeftVectorBar","lEg","leg","leq","leqq","leqslant","les","lescc","lesdot","lesdoto","lesdotor","lesg","lesges","lessapprox","lessdot","lesseqgtr","lesseqqgtr","LessEqualGreater","LessFullEqual","LessGreater","lessgtr","LessLess","lesssim","LessSlantEqual","LessTilde","lfisht","lfloor","Lfr","lfr","lg","lgE","lHar","lhard","lharu","lharul","lhblk","LJcy","ljcy","Ll","ll","llarr","llcorner","Lleftarrow","llhard","lltri","Lmidot","lmidot","lmoust","lmoustache","lnap","lnapprox","lnE","lne","lneq","lneqq","lnsim","loang","loarr","lobrk","LongLeftArrow","Longleftarrow","longleftarrow","LongLeftRightArrow","Longleftrightarrow","longleftrightarrow","longmapsto","LongRightArrow","Longrightarrow","longrightarrow","looparrowleft","looparrowright","lopar","Lopf","lopf","loplus","lotimes","lowast","lowbar","LowerLeftArrow","LowerRightArrow","loz","lozenge","lozf","lpar","lparlt","lrarr","lrcorner","lrhar","lrhard","lrm","lrtri","lsaquo","Lscr","lscr","Lsh","lsh","lsim","lsime","lsimg","lsqb","lsquo","lsquor","Lstrok","lstrok","Lt","LT","ltcc","ltcir","ltdot","lthree","ltimes","ltlarr","ltquest","ltri","ltrie","ltrif","ltrPar","lurdshar","luruhar","lvertneqq","lvnE","macr","male","malt","maltese","Map","mapsto","mapstodown","mapstoleft","mapstoup","marker","mcomma","Mcy","mcy","mdash","mDDot","measuredangle","MediumSpace","Mellintrf","Mfr","mfr","mho","micro","mid","midast","midcir","middot","minus","minusb","minusd","minusdu","MinusPlus","mlcp","mldr","mnplus","models","Mopf","mopf","mp","Mscr","mscr","mstpos","Mu","mu","multimap","mumap","nabla","Nacute","nacute","nang","nap","napE","napid","napos","napprox","natur","natural","naturals","nbsp","nbump","nbumpe","ncap","Ncaron","ncaron","Ncedil","ncedil","ncong","ncongdot","ncup","Ncy","ncy","ndash","ne","nearhk","neArr","nearr","nearrow","nedot","NegativeMediumSpace","NegativeThickSpace","NegativeThinSpace","NegativeVeryThinSpace","nequiv","nesear","nesim","NestedGreaterGreater","NestedLessLess","NewLine","nexist","nexists","Nfr","nfr","ngE","nge","ngeq","ngeqq","ngeqslant","nges","nGg","ngsim","nGt","ngt","ngtr","nGtv","nhArr","nharr","nhpar","ni","nis","nisd","niv","NJcy","njcy","nlArr","nlarr","nldr","nlE","nle","nLeftarrow","nleftarrow","nLeftrightarrow","nleftrightarrow","nleq","nleqq","nleqslant","nles","nless","nLl","nlsim","nLt","nlt","nltri","nltrie","nLtv","nmid","NoBreak","NonBreakingSpace","Nopf","nopf","Not","not","NotCongruent","NotCupCap","NotDoubleVerticalBar","NotElement","NotEqual","NotEqualTilde","NotExists","NotGreater","NotGreaterEqual","NotGreaterFullEqual","NotGreaterGreater","NotGreaterLess","NotGreaterSlantEqual","NotGreaterTilde","NotHumpDownHump","NotHumpEqual","notin","notindot","notinE","notinva","notinvb","notinvc","NotLeftTriangle","NotLeftTriangleBar","NotLeftTriangleEqual","NotLess","NotLessEqual","NotLessGreater","NotLessLess","NotLessSlantEqual","NotLessTilde","NotNestedGreaterGreater","NotNestedLessLess","notni","notniva","notnivb","notnivc","NotPrecedes","NotPrecedesEqual","NotPrecedesSlantEqual","NotReverseElement","NotRightTriangle","NotRightTriangleBar","NotRightTriangleEqual","NotSquareSubset","NotSquareSubsetEqual","NotSquareSuperset","NotSquareSupersetEqual","NotSubset","NotSubsetEqual","NotSucceeds","NotSucceedsEqual","NotSucceedsSlantEqual","NotSucceedsTilde","NotSuperset","NotSupersetEqual","NotTilde","NotTildeEqual","NotTildeFullEqual","NotTildeTilde","NotVerticalBar","npar","nparallel","nparsl","npart","npolint","npr","nprcue","npre","nprec","npreceq","nrArr","nrarr","nrarrc","nrarrw","nRightarrow","nrightarrow","nrtri","nrtrie","nsc","nsccue","nsce","Nscr","nscr","nshortmid","nshortparallel","nsim","nsime","nsimeq","nsmid","nspar","nsqsube","nsqsupe","nsub","nsubE","nsube","nsubset","nsubseteq","nsubseteqq","nsucc","nsucceq","nsup","nsupE","nsupe","nsupset","nsupseteq","nsupseteqq","ntgl","Ntilde","ntilde","ntlg","ntriangleleft","ntrianglelefteq","ntriangleright","ntrianglerighteq","Nu","nu","num","numero","numsp","nvap","nVDash","nVdash","nvDash","nvdash","nvge","nvgt","nvHarr","nvinfin","nvlArr","nvle","nvlt","nvltrie","nvrArr","nvrtrie","nvsim","nwarhk","nwArr","nwarr","nwarrow","nwnear","Oacute","oacute","oast","ocir","Ocirc","ocirc","Ocy","ocy","odash","Odblac","odblac","odiv","odot","odsold","OElig","oelig","ofcir","Ofr","ofr","ogon","Ograve","ograve","ogt","ohbar","ohm","oint","olarr","olcir","olcross","oline","olt","Omacr","omacr","Omega","omega","Omicron","omicron","omid","ominus","Oopf","oopf","opar","OpenCurlyDoubleQuote","OpenCurlyQuote","operp","oplus","Or","or","orarr","ord","order","orderof","ordf","ordm","origof","oror","orslope","orv","oS","Oscr","oscr","Oslash","oslash","osol","Otilde","otilde","Otimes","otimes","otimesas","Ouml","ouml","ovbar","OverBar","OverBrace","OverBracket","OverParenthesis","par","para","parallel","parsim","parsl","part","PartialD","Pcy","pcy","percnt","period","permil","perp","pertenk","Pfr","pfr","Phi","phi","phiv","phmmat","phone","Pi","pi","pitchfork","piv","planck","planckh","plankv","plus","plusacir","plusb","pluscir","plusdo","plusdu","pluse","PlusMinus","plusmn","plussim","plustwo","pm","Poincareplane","pointint","Popf","popf","pound","Pr","pr","prap","prcue","prE","prec","precapprox","preccurlyeq","Precedes","PrecedesEqual","PrecedesSlantEqual","PrecedesTilde","preceq","precnapprox","precneqq","precnsim","precsim","Prime","prime","primes","prnap","prnE","prnsim","prod","Product","profalar","profline","profsurf","prop","Proportion","Proportional","propto","prsim","prurel","Pscr","pscr","Psi","psi","puncsp","Qfr","qfr","qint","Qopf","qopf","qprime","Qscr","qscr","quaternions","quatint","quest","questeq","QUOT","rAarr","race","Racute","racute","radic","raemptyv","Rang","rang","rangd","range","rangle","raquo","Rarr","rArr","rarr","rarrap","rarrb","rarrbfs","rarrc","rarrfs","rarrhk","rarrlp","rarrpl","rarrsim","Rarrtl","rarrtl","rarrw","rAtail","ratail","ratio","rationals","RBarr","rBarr","rbarr","rbbrk","rbrace","rbrack","rbrke","rbrksld","rbrkslu","Rcaron","rcaron","Rcedil","rcedil","rceil","rcub","Rcy","rcy","rdca","rdldhar","rdquo","rdquor","rdsh","Re","real","realine","realpart","reals","rect","REG","reg","ReverseElement","ReverseEquilibrium","ReverseUpEquilibrium","rfisht","rfloor","Rfr","rfr","rHar","rhard","rharu","rharul","Rho","rho","rhov","RightAngleBracket","RightArrow","Rightarrow","rightarrow","RightArrowBar","RightArrowLeftArrow","rightarrowtail","RightCeiling","RightDoubleBracket","RightDownTeeVector","RightDownVector","RightDownVectorBar","RightFloor","rightharpoondown","rightharpoonup","rightleftarrows","rightleftharpoons","rightrightarrows","rightsquigarrow","RightTee","RightTeeArrow","RightTeeVector","rightthreetimes","RightTriangle","RightTriangleBar","RightTriangleEqual","RightUpDownVector","RightUpTeeVector","RightUpVector","RightUpVectorBar","RightVector","RightVectorBar","ring","risingdotseq","rlarr","rlhar","rlm","rmoust","rmoustache","rnmid","roang","roarr","robrk","ropar","Ropf","ropf","roplus","rotimes","RoundImplies","rpar","rpargt","rppolint","rrarr","Rrightarrow","rsaquo","Rscr","rscr","Rsh","rsh","rsqb","rsquo","rsquor","rthree","rtimes","rtri","rtrie","rtrif","rtriltri","RuleDelayed","ruluhar","rx","Sacute","sacute","sbquo","Sc","sc","scap","Scaron","scaron","sccue","scE","sce","Scedil","scedil","Scirc","scirc","scnap","scnE","scnsim","scpolint","scsim","Scy","scy","sdot","sdotb","sdote","searhk","seArr","searr","searrow","sect","semi","seswar","setminus","setmn","sext","Sfr","sfr","sfrown","sharp","SHCHcy","shchcy","SHcy","shcy","ShortDownArrow","ShortLeftArrow","shortmid","shortparallel","ShortRightArrow","ShortUpArrow","shy","Sigma","sigma","sigmaf","sigmav","sim","simdot","sime","simeq","simg","simgE","siml","simlE","simne","simplus","simrarr","slarr","SmallCircle","smallsetminus","smashp","smeparsl","smid","smile","smt","smte","smtes","SOFTcy","softcy","sol","solb","solbar","Sopf","sopf","spades","spadesuit","spar","sqcap","sqcaps","sqcup","sqcups","Sqrt","sqsub","sqsube","sqsubset","sqsubseteq","sqsup","sqsupe","sqsupset","sqsupseteq","squ","Square","square","SquareIntersection","SquareSubset","SquareSubsetEqual","SquareSuperset","SquareSupersetEqual","SquareUnion","squarf","squf","srarr","Sscr","sscr","ssetmn","ssmile","sstarf","Star","star","starf","straightepsilon","straightphi","strns","Sub","subdot","subE","sube","subedot","submult","subnE","subne","subplus","subrarr","Subset","subset","subseteq","subseteqq","SubsetEqual","subsetneq","subsetneqq","subsim","subsub","subsup","succ","succapprox","succcurlyeq","Succeeds","SucceedsEqual","SucceedsSlantEqual","SucceedsTilde","succeq","succnapprox","succneqq","succnsim","succsim","SuchThat","Sum","sum","sung","Sup","sup","sup1","sup2","sup3","supdot","supdsub","supE","supe","supedot","Superset","SupersetEqual","suphsol","suphsub","suplarr","supmult","supnE","supne","supplus","Supset","supset","supseteq","supseteqq","supsetneq","supsetneqq","supsim","supsub","supsup","swarhk","swArr","swarr","swarrow","swnwar","szlig","Tab","Tau","tau","tbrk","Tcaron","tcaron","Tcedil","tcedil","Tcy","tcy","tdot","telrec","Tfr","tfr","there4","Therefore","therefore","Theta","theta","thetasym","thetav","thickapprox","thicksim","ThickSpace","thinsp","ThinSpace","thkap","thksim","THORN","thorn","Tilde","tilde","TildeEqual","TildeFullEqual","TildeTilde","times","timesb","timesbar","timesd","tint","toea","top","topbot","topcir","Topf","topf","topfork","tosa","tprime","TRADE","trade","triangle","triangledown","triangleleft","trianglelefteq","triangleq","triangleright","trianglerighteq","tridot","trie","triminus","TripleDot","triplus","trisb","tritime","trpezium","Tscr","tscr","TScy","tscy","TSHcy","tshcy","Tstrok","tstrok","twixt","twoheadleftarrow","twoheadrightarrow","Uacute","uacute","Uarr","uArr","uarr","Uarrocir","Ubrcy","ubrcy","Ubreve","ubreve","Ucirc","ucirc","Ucy","ucy","udarr","Udblac","udblac","udhar","ufisht","Ufr","ufr","Ugrave","ugrave","uHar","uharl","uharr","uhblk","ulcorn","ulcorner","ulcrop","ultri","Umacr","umacr","uml","UnderBar","UnderBrace","UnderBracket","UnderParenthesis","Union","UnionPlus","Uogon","uogon","Uopf","uopf","UpArrow","Uparrow","uparrow","UpArrowBar","UpArrowDownArrow","UpDownArrow","Updownarrow","updownarrow","UpEquilibrium","upharpoonleft","upharpoonright","uplus","UpperLeftArrow","UpperRightArrow","Upsi","upsi","upsih","Upsilon","upsilon","UpTee","UpTeeArrow","upuparrows","urcorn","urcorner","urcrop","Uring","uring","urtri","Uscr","uscr","utdot","Utilde","utilde","utri","utrif","uuarr","Uuml","uuml","uwangle","vangrt","varepsilon","varkappa","varnothing","varphi","varpi","varpropto","vArr","varr","varrho","varsigma","varsubsetneq","varsubsetneqq","varsupsetneq","varsupsetneqq","vartheta","vartriangleleft","vartriangleright","Vbar","vBar","vBarv","Vcy","vcy","VDash","Vdash","vDash","vdash","Vdashl","Vee","vee","veebar","veeeq","vellip","Verbar","verbar","Vert","vert","VerticalBar","VerticalLine","VerticalSeparator","VerticalTilde","VeryThinSpace","Vfr","vfr","vltri","vnsub","vnsup","Vopf","vopf","vprop","vrtri","Vscr","vscr","vsubnE","vsubne","vsupnE","vsupne","Vvdash","vzigzag","Wcirc","wcirc","wedbar","Wedge","wedge","wedgeq","weierp","Wfr","wfr","Wopf","wopf","wp","wr","wreath","Wscr","wscr","xcap","xcirc","xcup","xdtri","Xfr","xfr","xhArr","xharr","Xi","xi","xlArr","xlarr","xmap","xnis","xodot","Xopf","xopf","xoplus","xotime","xrArr","xrarr","Xscr","xscr","xsqcup","xuplus","xutri","xvee","xwedge","Yacute","yacute","YAcy","yacy","Ycirc","ycirc","Ycy","ycy","yen","Yfr","yfr","YIcy","yicy","Yopf","yopf","Yscr","yscr","YUcy","yucy","Yuml","yuml","Zacute","zacute","Zcaron","zcaron","Zcy","zcy","Zdot","zdot","zeetrf","ZeroWidthSpace","Zeta","zeta","Zfr","zfr","ZHcy","zhcy","zigrarr","Zopf","zopf","Zscr","zscr","zwj","zwnj","nameStartChar","nameChar","RegExp","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","copyLocator","f","parseElementStartPart","currentNSMap","entityReplacer","addAttribute","qname","startIndex","attributeNames","addValue","attrName","s","charAt","setTagName","closed","match","localNSMap","a","nsp","nsPrefix","_copy","parseHtmlSpecialContent","elStartEnd","elEndStart","fixSelfClosed","closeMap","pos","lastIndexOf","parseDCC","end","matchs","exec","lastMatch","endDTD","parseInstruction","ElementAttributes","defaultNSMapCopy","fixedFromCharCode","surrogate1","surrogate2","k","parseInt","appendText","xt","m","lineEnd","linePattern","lineStart","parseStack","tagStart","config","pop","endMatch","locator2","Math","max","getLocalName","isMergeableObject","isNonNullObject","stringValue","$$typeof","REACT_ELEMENT_TYPE","isReactElement","isSpecial","Symbol","for","cloneUnlessOtherwiseSpecified","clone","deepmerge","val","defaultArrayMerge","concat","getKeys","getOwnPropertySymbols","symbol","propertyIsEnumerable","getEnumerableOwnPropertySymbols","propertyIsOnObject","property","_","mergeObject","destination","propertyIsUnsafe","customMerge","getMergeFunction","arrayMerge","sourceIsArray","all","prev","deepmerge_1","doccy","topLevel","global","minDoc","document","win","self","string","alert","confirm","prompt","keyCode","searchInput","hasKeyCode","which","charCode","names","foundNamedKey","search","codes","aliases","isEventKey","event","nameOrCode","title","alias","stdOnEnd","script","cb","ieOnEnd","opts","head","async","setAttributes","safeIsNaN","Number","isNaN","areInputsEqual","newInputs","lastInputs","first","second","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","_i","getUint64","view","DataView","buffer","byteOffset","byteLength","flags","subarray","references","referenceId","getUint32","timescale","earliestPresentationTime","firstOffset","referenceCount","getUint16","referenceType","referencedSize","subsegmentDuration","startsWithSap","sapType","sapDeltaTime","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","ONE_SECOND_IN_TS","seconds","sampleRate","timestamp","timelineStartPts","keepOriginalTimestamps","MAX_UINT32","pow","uint8","dv","getBigUint64","MAX_SAFE_INTEGER","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","bigint","bool","func","number","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","hasElementType","hasMap","hasSet","Set","hasArrayBuffer","ArrayBuffer","isView","equal","b","size","entries","done","has","valueOf","mod","__create","create","__defProp","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","__copyProps","to","from","except","desc","_step","_iterator","_createForOfIteratorHelper","_loop","enumerable","__toESM","isNodeMode","__esModule","__publicField","configurable","writable","__defNormalProp","Player_exports","__export","default","Player","import_react","import_react_fast_compare","import_props","import_utils","_import_react$Compone","_inherits","_super","_createSuper","_this","_classCallCheck","_assertThisInitialized","player","load","progress","isReady","playedSeconds","getCurrentTime","loadedSeconds","getSecondsLoaded","duration","getDuration","played","loaded","prevPlayed","prevLoaded","onProgress","progressTimeout","progressFrequency","progressInterval","mounted","isLoading","_this$props","onReady","playing","volume","muted","setVolume","loadOnReady","play","handleDurationCheck","isPlaying","_this$props2","onStart","onPlay","playbackRate","startOnPlay","setPlaybackRate","seekOnPlay","seekTo","onPause","_this$props3","activePlayer","loop","onEnded","loopOnEnded","_this$props4","onError","durationCheckTimeout","onDurationCalled","onDuration","_createClass","stopOnUnmount","stop","disablePIP","prevProps","_this2","_this$props5","pip","disableDeferredLoading","forceLoad","isMediaStream","pause","enablePIP","mute","unmute","setLoop","amount","keepPlaying","_this3","Player2","_objectSpread","onMount","handlePlayerMount","handleReady","handlePlay","handlePause","handleEnded","onLoaded","handleLoaded","handleError","Component","propTypes","defaultProps","ReactPlayer_exports","createReactPlayer","import_deepmerge","import_memoize_one","import_Player","Preview","lazy","IS_BROWSER","IS_GLOBAL","SUPPORTED_PROPS","UniversalSuspense","Suspense","customPlayers","players","fallback","_a","showPreview","light","wrapper","setState","onClickPreview","getInternalPlayer","fraction","_arr","_toConsumableArray","canPlay","omit","getActivePlayer","getConfig","lazyPlayer","nextProps","nextState","state","playIcon","previewTabIndex","oEmbedUrl","previewAriaLabel","onClick","handleClickPreview","style","width","height","fallback2","Wrapper","getAttributes","wrapperRef","renderPreview","renderActivePlayer","_i2","_arr2","_i3","_arr3","canEnablePIP","src_exports","src_default","import_players","import_ReactPlayer","patterns_exports","AUDIO_EXTENSIONS","DASH_EXTENSIONS","FLV_EXTENSIONS","HLS_EXTENSIONS","MATCH_URL_DAILYMOTION","MATCH_URL_FACEBOOK","MATCH_URL_FACEBOOK_WATCH","MATCH_URL_KALTURA","MATCH_URL_MIXCLOUD","MATCH_URL_MUX","MATCH_URL_SOUNDCLOUD","MATCH_URL_STREAMABLE","MATCH_URL_TWITCH_CHANNEL","MATCH_URL_TWITCH_VIDEO","MATCH_URL_VIDYARD","MATCH_URL_VIMEO","MATCH_URL_WISTIA","MATCH_URL_YOUTUBE","VIDEO_EXTENSIONS","youtube","soundcloud","vimeo","mux","facebook","streamable","wistia","twitch","dailymotion","mixcloud","vidyard","kaltura","file","canPlayFile","_step2","_iterator2","isBlobUrl","players_exports","players_default","import_patterns","pictureInPictureEnabled","supportsWebKitPresentationMode","props_exports","import_prop_types","_import_prop_types$de","controls","playsinline","render","playerVars","embedOptions","onUnstarted","appId","playerId","playerOptions","tracks","forceVideo","forceAudio","forceHLS","forceSafariHLS","forceDisableHls","forceDASH","forceFLV","hlsOptions","hlsVersion","dashVersion","flvVersion","customControls","onBuffer","onBufferEnd","onSeek","onPlaybackRateChange","onPlaybackQualityChange","onEnablePIP","onDisablePIP","noop","visual","buying","liking","download","sharing","show_comments","show_playcount","showinfo","rel","iv_load_policy","modestbranding","api","autopause","byline","portrait","hide_cover","utils_exports","callPlayer","getSDK","parseEndTime","parseStartTime","queryString","randomString","import_load_script","componentImportFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","sent","abrupt","MATCH_START_QUERY","MATCH_END_QUERY","MATCH_START_STAMP","MATCH_NUMERIC","parseTimeParam","pattern","stamp","_array2","_slicedToArray","parseTimeString","random","getGlobal","requests","enableStubOn","sdkGlobal","sdkReady","isLoaded","fetchScript","existingGlobal","Promise","resolve","reject","sdk","request","previousOnReady","_ref2","_len","arrays","_key","omitKeys","output","_keys","_this$player","displayName","_len2","args","_key2","MediaStream","video","notMobile","navigator","userAgent","webkitSupportsPresentationMode","webkitSetPresentationMode","reviver","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","alwaysNormalize","basePartsForNormalise","parseURL","path","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","builtParts","query","fragment","baseURLPath","newPath","parts","reverse","_get","Reflect","bind","receiver","DEFAULT_LOCATION","baseUrl","relativeUrl","href","nativeURL","protocolLess","removeLocation","newUrl","URL","protocol","Stream","listeners","_proto","on","listener","off","splice","trigger","callbacks","_length","dispose","pipe","decodeB64ToUint8Array","b64Text","decodedString","Buffer","LineStream","_Stream","nextNewline","TAB","parseByterange","byterangeString","parseAttributes","ParseStream","_Stream2","_super2","customParsers","tagMappers","line","acc","mapper","mappedLine","newLine","tagType","parseFloat","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","Uint32Array","PRECISE","subkey","clientAttributePattern","isHexaDecimal","isDecimalFloating","_ref","_this4","expression","customType","dataParser","segment","camelCaseKeys","str","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","tag","hb","phb","minTargetDuration","minPartDuration","Parser","_Stream3","_super3","_this5","lineStream","parseStream","lastProgramDateTime","currentMap","uris","currentUri","hasParts","defaultMediaGroups","currentTimeline","allowCache","discontinuityStarts","dateRanges","segments","lastByterangeEnd","lastPartByterangeEnd","dateRangeTags","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","media","TYPE","NAME","mediaGroupType","DEFAULT","autoselect","AUTOSELECT","LANGUAGE","language","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","getTime","reduceRight","programDateTime","targetduration","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","_this6","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","report","required","partInf","partTarget","dateRange","endDate","startDate","plannedDuration","endOnNextYes","endOnNext","class","newDateInSeconds","attribute","dateRangeWithSameId","findIndex","dateRangeToFind","independentSegments","contentSteering","custom","identifier","missing","chunk","addParser","addTagMapper","regexs","mp4","webm","ogg","audio","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","parseCodecs","codecString","codecs","codecType","details","mediaType","isAudioCodec","getMimeForCodec","container","browserSupportsCodec","isTypeSupported","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","isArrayBufferView","toUint8","bytes","BigInt","BYTE_TABLE","bytesToNumber","Uint16Array","_temp","_ref$signed","signed","_ref$le","total","byte","exponent","abs","numberToBytes","_temp2","_ref2$le","x","byteCount","ceil","countBits","byteIndex","stringToBytes","stringIsBytes","unescape","encodeURIComponent","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","DESCRIPTORS","isObject","merge","objects","values","o","flatten","lists","y","errors","urlTypeToSegment","_ref$baseUrl","_ref$source","_ref$range","_ref$indexRange","indexRange","resolvedUri","resolveUrl","ranges","startRange","endRange","parseEndNumber","endNumber","segmentRange","static","_attributes$timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","_attributes$timescale2","_attributes$periodSta","periodStart","_attributes$minimumUp","minimumUpdatePeriod","_attributes$timeShift","timeShiftBufferDepth","Infinity","now","periodStartWC","segmentCount","availableStart","floor","availableEnd","min","parseByDuration","_attributes$timescale4","_segmentRange$type","_attributes$timescale3","_attributes$startNumb","startNumber","time","toSegments","sectionDuration","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","presentationTime","_attributes$number","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","reference","endIndex","SUPPORTED_MEDIA_TYPES","getUniqueTimelineStarts","timelineStarts","keyFunction","sort","getMediaGroupPlaylists","master","mediaGroupPlaylists","properties","group","label","groupKey","labelKey","mediaProperties","updateMediaSequenceForPlaylist","positionManifestOnTimeline","_ref6","oldManifest","newManifest","oldPlaylists","newPlaylists","_ref4","_ref5","oldPlaylist","findPlaylistWithName","firstNewSegment","oldMatchingSegmentIndex","oldSegment","unshift","updateSequenceNumbers","generateSidxKey","byteRangeToString","mergeDiscontiguousPlaylists","playlistsByBaseUrl","cur","allPlaylists","playlistGroup","mergedPlaylists","_acc$name$segments","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","organizeAudioPlaylists","mainPlaylist","isAudioOnly","formattedPlaylists","role","roleLabel","formatted","_ref7","_defineProperty","bandwidth","CODECS","serviceLocation","AUDIO","SUBTITLES","formatAudioPlaylist","organizeVttPlaylists","_ref8","m3u8Attributes","vttPlaylist","formatVttPlaylist","formatVideoPlaylist","_ref9","frameRate","videoOnly","_ref10","audioOnly","_ref11","vttOnly","_ref12","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","getLiveRValue","_attributes$timescale5","_attributes$periodSta2","_attributes$minimumUp2","parseByTimeline","segmentTimeline","_attributes$minimumUp3","_attributes$media","_attributes$timescale6","_attributes$startNumb2","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","constructTemplateUrl","format","identifierReplacement","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","_attributes$initializ2","mapSegment","parseTemplateInfo","Time","presentationTimeOffset","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","segmentUrl","_attributes$initializ3","mediaRange","SegmentURLToSegmentObject","generateSegments","_ref16","segmentAttributes","segmentsFn","segmentInfo","template","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","findChildren","_ref17","getContent","textContent","parseDuration","_match$slice","_match$slice2","year","month","day","hour","minute","parsers","mediaPresentationDuration","suggestedPresentationDelay","parseDivisionValue","parsedValue","parseFn","keySystemsMap","buildBaseUrls","baseUrlElements","baseUrlElement","initialBaseUrl","resolvedBaseUrl","finalBaseUrl","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","toEventStream","eventStream","eventStreamAttributes","eventAttributes","messageData","contentEncoding","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","service","adaptationSetAttributes","adaptationSetBaseUrls","roleAttributes","accessibility","captionServices","channel","_value$split","_value$split2","_value$split3","_value$split4","_value$split4$","opt","_opt$split","_opt$split2","easyReader","aspectRatio","labelVal","keySystem","psshNode","representations","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","inheritBaseUrls","toAdaptationSets","mpdAttributes","mpdBaseUrls","adaptationSets","generateContentSteeringInformation","contentSteeringNodes","eventHandler","infoFromContentSteeringTag","serverURL","queryBeforeStart","stringToMpdXml","manifestString","mpd","parser","parsedManifestInfo","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","_options$eventHandler","periodNodes","locations","periods","priorPeriod","_ref18","priorPeriodAttributes","mpdType","getPeriodStart","contentSteeringInfo","representationInfo","inheritAttributes","_ref14","_mediaGroups","dashPlaylists","_ref14$sidxMapping","previousManifest","_dashPlaylists$0$attr","videoPlaylists","audioPlaylists","vttPlaylists","captions","Boolean","VIDEO","organizedAudioGroup","organizedVttGroup","playlistTimelineStarts","_ref15","_ref13","subs","cc","svcObj","svc","toM3u8","parseUTCTiming","UTCTimingNode","parseUTCTimingScheme","ID3","getId3Offset","returnSize","getId3Size","parseDescriptors","results","headerSize","z","_DESCRIPTORS$z","dependsOnEsId","ocrEsId","descriptors","decodeURIComponent","escape","bytesToString","oti","streamType","bufferSize","maxBitrate","avgBitrate","findBox","paths","complete","normalizePaths","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","Track","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","VideoTrack","AudioTrack","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getvint","removeLength","getLength","valueBytes","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","shift","findNal","dataType","types","nalLimit","nalStart","nalsFound","nalOffset","nalType","CONSTANTS","_isLikely","aac","mp3","docType","mkv","matroska","mov","fmp4","moof","moov","ac3","ts","flac","avi","riff","wav","findH264Nal","findH265Nal","isLikelyTypes","isLikelyFn","browserApi","isLikely","detectContainerForBytes","version$6","hooks_","hooks","removeHook","FullscreenApi","prefixed","apiMap","specApi","history","log$1","createLogger$1","logByType","delimiter","styles","level","log","lvl","levels","lvlRegExp","resultName","window$1","info","LogByTypeFactory","createLogger","subName","subDelimiter","subStyles","resultDelimiter","resultStyles","createNewLogger","newName","newDelimiter","newStyles","debug","fname","historyItem","clear","disable","enable","_len3","_key3","_len4","_key4","each","initial","accum","isPlain","merge$1","_len5","sources","_key5","defineLazyProperty","ANDROID_VERSION","Obj","__proto__","IS_IPOD","IOS_VERSION","IS_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","TOUCH_ENABLED","isReal","maxTouchPoints","UAD","userAgentData","platform","brands","brand","USER_AGENT","major","minor","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","isEl","isInFrame","createQuerier","selector","context","ctx","createEl","content","appendContent","innerText","prependTo","hasClass","classToCheck","throwIfWhitespace","classList","contains","addClass","_element$classList","_len6","classesToAdd","_key6","add","removeClass","_element$classList2","_len7","classesToRemove","_key7","toggleClass","classToToggle","className","toggle","attrValue","knownBooleans","attrVal","includes","blockTextSelection","focus","unblockTextSelection","getBoundingClientRect","computedStyle","findPosition","offsetParent","left","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","translated","transform","boxTarget","box","boxW","offsetY","offsetX","changedTouches","pageX","pageY","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","computedStyleValue","getPropertyValue","copyStyleSheetsToWindow","styleSheet","cssRules","rule","cssText","link","mediaText","videojs$1","Dom","_windowLoaded","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","wait","vjs","setWindowLoaded","_supportsPassive","createStyleElement","setTextContent","DomData","WeakMap","_guid","newGUID","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","delete","_handleMultipleEvents","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","scrollLeft","clientLeft","clientY","scrollTop","clientTop","supportsPassive","passiveEvents","guid","hash","handlersCopy","addEventListener","passive","attachEvent","removeType","elemData","bubbles","targetData","one","EVENT_MAP","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","throttle","last","debounce","immediate","debounced","later","cancel","Fn","EventTarget$2","ael","allowedEvents_","oldTimeout","dispatchEvent","objName","name_","isEvented","eventBusEl_","isValidEventType","validateTarget","fnName","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","_args","_args2","listen","EventedMixin","_len8","_key8","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_len9","_key9","_normalizeListenArgs2","_len10","largs","_key10","_len11","_key11","_normalizeListenArgs3","_len12","_key12","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","el_","StatefulMixin","stateUpdates","changes","stateful","defaultState","handleStateChanged","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","Component$1","ready","player_","isDisposed_","parentComponent_","options_","id_","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","readyQueue_","restoreEl","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","ret","contentEl_","_len13","_key13","currentChild","getChild","iconName","experimentalSvgIcons","xmlnsURL","iconContainer","svgEl","useEl","iconIsSet_","querySelector","component","componentClassName","componentClass","ComponentClass","getComponent","contentEl","childFound","compEl","_this7","children","workingChildren","parentOptions","Tech","some","wchild","isTech","addChild","isReady_","readyQueue","_len14","_key14","_len15","_key15","skipListeners","dimension","widthOrHeight","pxIndex","computedWidthOrHeight","currentDimension","blur","keycode","handleKeyDown","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","_this8","clearTimersOnDispose_","interval","intervalId","_this9","_this10","requestAnimationFrame","cancelAnimationFrame","_this11","idName","cancelName","ComponentToRegister","reason","isComp","isPrototypeOf","components_","playerNames","pname","getRange","valueIndex","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","createTimeRanges$1","registerComponent","defaultImplementation","guide","h","gm","gh","setFormatTime","customImplementation","resetFormatTime","formatTime","createTimeRanges","createTimeRange","bufferedPercent","buffered","bufferedDuration","MediaError","defaultMessages","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component$","_this12","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","description","_getPrototypeOf","buildCSSClass","tabIndex","previouslyActiveEl_","localize","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","show","conditionalFocus_","hide","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","closeButton","content_","activeEl","playerEl","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","TrackList","_EventTarget$","_this13","tracks_","addTrack","_this14","labelchange_","rtrack","change","addtrack","removetrack","labelchange","disableOthers$1","enabled","AudioTrackList","_TrackList","_this15","changing_","_this16","enabledChange_","disableOthers","selected","VideoTrackList","_TrackList2","_super4","_this17","_this18","selectedChange_","TextTrackList","_TrackList3","_super5","_this19","queueChange_","queueTrigger","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","trackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","VideoTrackKind","alternative","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","_EventTarget$2","_super6","_this20","trackProps","newLabel","parseUrl","host","getAbsoluteURL","getFileExtension","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","StringDecoder","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","XHR","loaded_","TextTrack","_Track","_super7","_this21","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","isDisposed","rvf_","requestVideoFrameCallback","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","VTTCue","originalCue_","removeCue","cuechange","_Track2","_super8","_this22","newEnabled","_Track3","_super9","_this23","newSelected","HTMLTrackElement","_EventTarget$3","_super10","_this24","NONE","LOADED","LOADING","ERROR","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","_Component$2","_super11","_this25","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","emitTapEvents","_this26","triggerSourceset","manualProgress","stopTrackingProgress","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","currentTimeInterval","manuallyTriggered","clearTracks","manualProgressOff","manualTimeUpdatesOff","_this27","removeRemoteTextTrack","removeTrack","error_","_isScrubbing","_seconds","_this28","trackListChanges","_this29","vtt","addWebVttScript_","_this30","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","createTrackHelper","_this31","manualCleanup","htmlTrackElement","createRemoteTextTrack","remoteTextTrackEls","getTrackElementByTrack_","removeTrackElement_","_this32","requestNamedAnimationFrame","cancelNamedAnimationFrame","override","_type","srcObj","canPlayType","techs_","canPlaySource","defaultTechOrder_","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","cleanupAutoTextTracks","registerTech","middlewares","middlewareInstances","TERMINATOR","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","mws","mw","executeRight","allowedGetters","seekable","ended","allowedSetters","setCurrentTime","setMuted","allowedMediators","lastRun","_middleware","_toArray","mwFactory","mwrest","_mws$_i","mwf","mwi","getOrCreateFactory","_src","MimetypesKind","opus","ogv","m4v","m4a","caf","oga","m3u8","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","filterSource","newsrc","srcobj","fixSource","mimetype","MediaLoader","_Component$3","_super12","_this33","j","techOrder","techName","getTech","loadTech_","ClickableComponent","_Component$4","_super13","_this34","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","_ClickableComponent","_super14","_this35","update","update_","crossorigin","poster","setSrc","loading","alt","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","getCSSPositionValue","TextTrackDisplay","_Component$5","_super15","_this36","updateDisplayHandler","updateDisplayOverlay","toggleDisplay","preselectTrack","screenOrientation","orientation","changeOrientationEvent","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","processCues","allowMultipleShowingTracks","clearDisplay","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","videoHeight","supports","playerWidth","currentWidth","playerHeight","currentHeight","playerAspectRatio","videoAspectRatio","videoWidth","insetInlineMatch","insetBlockMatch","round","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","updateDisplayState","LoadingSpinner","_Component$6","_super16","isAudio","playerType","dir","Button","_ClickableComponent2","_super17","BigPlayButton","_Button","_super18","_this37","mouseused_","setIcon","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","_Button2","_super19","_this38","PlayToggle","_Button3","_super20","_this39","replay","_this40","handleSeeked","TimeDisplay","_Component$7","_super21","_this41","updateTextNode_","span","labelText_","textNode_","enableSmoothSeeking","updateContent","_this42","formattedTime_","oldNode","CurrentTimeDisplay","_TimeDisplay","_super22","scrubbing","getCache","DurationDisplay","_TimeDisplay2","_super23","_this43","TimeDivider","_Component$8","_super24","RemainingTimeDisplay","_TimeDisplay3","_super25","_this44","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","_Component$9","_super26","_this45","updateShowing","SeekToLive","_Button4","_super27","_this46","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","Num","Slider","_Component$10","_super28","_this47","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","vertical","playerEvent","_this48","getProgress","progress_","sizeKey","toFixed","getPercent","stepBack","stepForward","vertical_","percentify","LoadProgressBar","_Component$11","_super29","_this49","partEls_","loadedText","separator","percentageEl_","_this50","isLive","seekableEnd","bufferedEnd","percent","percent_","dataset","TimeTooltip","_Component$12","_super30","_this51","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","write","_this52","liveWindow","secondsBehind","PlayProgressBar","_Component$13","_super31","_this53","timeTooltip","updateTime","MouseTimeDisplay","_Component$14","_super32","_this54","_this55","SeekBar","_Slider","_super33","_this56","setEventHandlers_","_this57","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","_this58","getCurrentTime_","liveCurrentTime","currentTime_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","calculateDistance","userSeek_","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","_Component$15","_super34","_this59","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","_Button5","_super35","_this60","handlePictureInPictureChange","handlePictureInPictureEnabledChange","handlePictureInPictureAudioModeChange","currentType","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","disablePictureInPicture","enableDocumentPictureInPicture","requestPictureInPicture","FullscreenToggle","_Button6","_super36","_this61","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","VolumeLevel","_Component$16","_super37","VolumeLevelTooltip","_Component$17","_super38","_this62","rangeBarRect","rangeBarPoint","volumeBarPointPx","_this63","MouseVolumeLevelDisplay","_Component$18","_super39","_this64","_this65","updateVolume","VolumeBar","_Slider2","_super40","_this66","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","_this67","volumeBeforeDrag","lastVolume_","VolumeControl","_Component$19","_super41","_this68","volumeBar","checkVolumeSupport","throttledHandleMouseMove","orientationClass","MuteToggle","_Button7","_super42","_this69","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","_Component$20","_super43","_this70","inline","volumeControl","handleKeyPressHandler_","handleKeyPress","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","SkipForward","_Button8","_super44","_this71","validOptions","skipTime","getSkipForwardTime","controlBar","skipButtons","forward","currentVideoTime","SkipBackward","_Button9","_super45","_this72","getSkipBackwardTime","backward","Menu","_Component$21","_super46","_this73","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","removeEventListenerForItem","childComponent","addEventListenerForItem","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","_Component$22","_super47","_this74","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","addItem","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","lockShowing","unlockShowing","TrackButton","_MenuButton","_super48","_this75","_possibleConstructorReturn","updateHandler","MenuKeys","MenuItem","_ClickableComponent3","_super49","_this76","selectable","isSelected_","multiSelectable","menuItemEl","TextTrackMenuItem","_MenuItem","_super50","_this77","kinds","changeHandler","_len16","_key16","handleTracksChange","selectedLanguageChangeHandler","_len17","_key17","handleSelectedLanguageChange","onchange","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","_super51","allHidden","TextTrackButton","_TrackButton","_super52","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","_MenuItem2","_super53","_this78","ChaptersButton","_TextTrackButton","_super54","_this79","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","_TextTrackButton2","_super55","_this80","SubtitlesButton","_TextTrackButton3","_super56","_this81","CaptionSettingsMenuItem","_TextTrackMenuItem2","_super57","_this82","CaptionsButton","_TextTrackButton4","_super58","_this83","SubsCapsMenuItem","_TextTrackMenuItem3","_super59","parentSpan","SubsCapsButton","_TextTrackButton5","_super60","_this84","language_","AudioTrackMenuItem","_MenuItem3","_super61","_this85","audioTracks","_len18","_key18","featuresNativeAudioTracks","AudioTrackButton","_TrackButton2","_super62","_this86","PlaybackRateMenuItem","_MenuItem4","_super63","_this87","rate","PlaybackRateMenuButton","_MenuButton2","_super64","_this88","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","_Component$23","_super65","CustomControlSpacer","_Spacer","_super66","ControlBar","_Component$24","_super67","ErrorDisplay","_ModalDialog","_super68","_this89","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","_ModalDialog2","_super69","_this90","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","_this91","legendId","selectLabelledbyIds","optionId","createElSelect_","innerHTML","createElFgColor_","createElBgColor_","createElWinColor_","defaultsDescription","createElColors_","createElFont_","createElControls_","_this92","selectedIndex","_this93","setSelectedOption","_this94","getItem","setValues","setItem","removeItem","ttDisplay","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","_Component$25","_super70","_this95","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","_Component$26","_super71","_this96","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","seekableStarts","behindLiveEdge","TitleBar","_Component$27","_super72","_this97","updateDom_","_this98","techEl","techAriaAttrs","techAriaAttr","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","getDescriptor","priority","descriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","getInnerHTMLDescriptor","appendWrapper","appendFn","_len19","_key19","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","_Tech3","_super73","_this99","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","triggerReady","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","_this100","lowerCaseType","eventName","proxyNativeTracksForType_","overrideNative_","_this101","elTracks","techTracks","currentTarget","removeOldTracks","removeTracks","found","_this102","playerElIngest","movingMediaElementInDOM","techId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","_this103","checkProgress","NaN","_this104","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","webkitEnterFullScreen","HAVE_METADATA","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","addTextTrack","getVideoPlaybackQuality","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","_Component$28","_super74","_this105","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","parsedSVG","sprite","display","majorVersion","userActive","listenForUserActivity_","breakpoints","responsive","_this106","styleEl_","playerElIngest_","divEmbed","tabindex","defaultsStyleEl","fill_","fluid","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","_this107","aspectRatio_","idClass","ratioParts","ratioMultiplier","width_","height_","_this108","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","_this109","safety","removeTechControlsListeners_","manualAutoplay_","_this110","promise","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","_this111","updateSourceCaches","updateSourceCaches_","playerSrc","currentSource","eventSrc","lastSource_","techSrc","lastPlaybackRate","queued","_this112","timeWhenWaiting","timeUpdateListener","userActions","click","doubleClick","userWasActive","cancelable","targetPlayer","isFs","fullscreen","_this113","initTime","inactivityTimeout","defaultPlaybackRate","_this114","play_","_this115","isSrcReady","isSafariOrIOS","waitToPlay_","resetProgressBar_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","percentAsDecimal","defaultMuted","isFS","oldValue","toggleFullscreenClass_","fullscreenOptions","offHandler","requestFullscreenHelper_","fsOptions","_this116","supportsFullScreen","preferFullWindow","enterFullWindow","exitFullscreenHelper_","_this117","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","togglePictureInPictureClass_","_this118","pipContainer","titleBar","requestWindow","pipWindow","pipVideo","hotkeys","isContentEditable","excludeElement","activeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","_this119","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","sourceOrder","isRetry","_this120","resetRetryOnError_","middlewareSource","src_","handleSrc_","notSupportedMessage","setTech","retry","stopListeningForErrors","_this121","sourceTech","selectSource","vhs","_this122","doReset_","resetControlBarUI_","resetPlaybackRate_","resetVolumeBar_","currentTimeDisplay","durationDisplay","progressControl","loadProgressBar","techAutoplay","newPoster","usingNativeControls_","_this123","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","_this124","playerChildren","controlBarHeight","_this125","exitPromises","enableAudioOnlyUI_","disableAudioOnlyUI_","_this126","enablePosterModeUI_","disablePosterModeUI_","_this127","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","currentBreakpointClass","responsive_","removeCurrentBreakpoint_","_this128","reset","_this$cache_$media","artist","artwork","tt","currentSources","previousLogLevel_","newRates","baseOptions","tagOptions","dataSetup","_safeParseTuple","safeParseTuple","_safeParseTuple2","childName","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","instance","_len20","_key20","_construct","getEventHash","Plugin","VERSION","isBasic","basicPluginWrapper","createBasicPlugin","deprecateForMajor","oldName","warned","_len21","_key21","deprecate","registerPlugin","usingPlugin","hasPlugin","normalizeId","videojs","getPlayer","rootNode","getRootNode","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","_tag","getAllPlayers","use","writeable","mergeOptions","deregisterPlugin","getPlugins","getPluginVersion","addLanguage","EventTarget","QualityLevel","bitrate","QualityLevelList","_videojs$EventTarget","_super75","_this129","levels_","selectedIndex_","qualityLevel","getQualityLevelById","removed","addqualitylevel","removequalitylevel","version$5","qualityLevels","originalPluginFn","qualityLevelList","disposeHandler","initPlugin$1","_resolveUrl","resolveManifestRedirect","req","responseURL","logger","_len22","_key22","_len23","_key23","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","printableRange","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","intervalDuration","endSequence","expired","backwardDuration","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isExcluded","excludeUntil","isIncompatible","isEnabled","excluded","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","_loop2","_ret","Playlist","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","canUseFudgeFactor","isDisabled","isAes","estimateSegmentRequestTime","bytesReceived","createPlaylistID","groupID","forEachMediaGroup","setupMediaPlaylist","playlistErrors_","addPropertiesToMain","createGroupID","phonyUri","audioOnlyMain","groupId","setupMediaPlaylists","resolveMediaGroupUris","DateRangesStorage","offset_","pendingDateRanges_","processedDateRanges_","firstSegment","trimProcessedDateRanges_","pendingDateRange","_this130","dateRangeClasses","dateRangesToProcess","processDateRange","classListIndex","_i84","_dateRangesToProcess","_this131","EventTarget$1","updateSegment","skipped","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","oldSegments","newSegments","newIndex","newSegment","updateSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","_EventTarget$4","_super76","_this132","logger_","_options$withCredenti","vhs_","addDateRangesToTextTrack_","addDateRangesToTextTrack","vhsOptions","customTagParsers","customTagMappers","llhls","dateRangesStorage_","handleMediaupdatetimeout_","handleLoadedPlaylist_","mediaPlaylist","setOffset","setPendingDateRanges","availableDateRanges","getDateRangesToProcess","_this133","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","startingState","_this134","onwarn","oninfo","_ref15$customTagParse","_ref15$customTagMappe","customParser","parseManifest","_ref19","_ref20","playlistObject","parseManifest_","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","_this135","delay","mediaChange","mainPlaylistRef","started","_this136","_this137","_this138","setupInitialPlaylist","srcUri","mainForMedia","isUpdate","pathway","ID","oldPlaylistUri","oldPlaylistId","newPlaylistUri","createCloneURI_","newPlaylistId","createCloneAttributes_","updatedPlaylist","createClonePlaylist_","updateOrDeleteCloneMedia","oldMediaPlaylist","createClonedMediaGroups_","basePlaylist","playlistId","_this139","baseID","_loop3","newUri","newPlaylistID","newMediaPlaylist","newProps","baseURI","hostname","HOST","PARAMS","_i90","_Object$keys","oldAttributes","keyIds","keysystem","videojsXHR","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","xhrFactory","XhrFunction","beforeRequest","Vhs","_requestCallbackSet","_responseCallbackSet","xhrMethod","beforeRequestOptions","requestSet","newOptions","requestCallback","callAllRequestHooks","responseSet","responseCallback","callAllResponseHooks","originalAbort","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","step","utils","tagDump","_ref21","textRanges","getProgramTime","_ref22","_ref22$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","transmuxerPrependedSeconds","offsetFromSegmentStart","playerTimeToProgramTime","toISOString","seekToProgramTime","_ref23","_ref23$retryCount","retryCount","_ref23$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","buffers","totalLen","tempBuffer","concatTypedArrays","overrideMimeType","_ref24","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","dashGroupId","updateMain","oldMain","newMain","noChanges","playlistUpdate","removeOldMediaGroupLabels","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","_EventTarget","_super77","srcUrlOrPlaylist","_this140","mainPlaylistLoader","mainPlaylistLoader_","isMain_","_options$withCredenti2","addMetadataToTextTrack","refreshXml_","refreshMedia_","loadedPlaylists_","srcUrl","sidxMapping_","childPlaylist_","_this141","fin","requestErrored_","parseSidx","internal","playlistExclusionDuration","_playlist$sidx$bytera","mediaRequest_","minimumUpdatePeriodTimeout_","createMupOnMedia_","_this142","addSidxSegments_","sidxChanged","_ref26","isFinalRendition","_this143","updateMinimumUpdatePeriodTimeout_","_this144","requestMain_","mainChanged","haveMain_","hasPendingRequest","_this145","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","_this146","utcTiming","clientOffset_","serverTime","_ref25","mainXml","parseMainXml","addEventStreamToMetadataTrack_","mpl","mup","createMUPTimeout_","_this147","mediaGroupSidx","filterChangedSidxMappings","mediaID","_this148","mediaChanged","createMediaUpdateTimeout","metadataArray","eventStreamNode","cueTime","frames","defaultKID","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","factory","objectUrl","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","commonjsGlobal","globalThis","Stream$8","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mdat","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","stream","MAX_UINT32$1","numbers","avc1","avcC","btrt","dref","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils$1","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","nalCount","nalUnitType","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","generateSampleTable","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","generateSampleTableForFrame","concatenateNalDataForFrame","highPrefix","lowPrefix","zeroFill","ONE_SECOND_IN_TS$4","clock$2","coneOfSilence","metaTable","arr","clock$1","audioFrameUtils$1","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo$1","clearDtsInfo","maxSegmentDts","maxSegmentPts","calculateTrackBaseMediaDecodeTime","timelineStartInfo","collectDtsInfo","captionPacketParser","parseSei","payloadType","payloadSize","parseUserData","sei","parseCaptionPackets","userData","ccData","emulationPreventionBytesPositions","USER_DATA_REGISTERED_ITU_T_T35","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","backspace","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","char","charCodeArray","isMultiByte","extended","currentByte","nextByte","unicode","newCode","get708CharFromCode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","indent","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","indentations","isColorPAC","isNormalChar","_this149","logWarning","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","TYPE_SHARED","handleRollover$1","direction","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","MetadataStream","timestampRolloverStream","typedArray","fromIndex","currentIndex","typedArrayIndexOf","textEncodingDescriptionByte","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","mimeTypeEndIndex","descriptionEndIndex","pictureType","pictureData","owner","privateData","parseId3","parseId3Frames","frameSize","frameStart","tagSize","parseSyncSafeInteger","Stream$5","StreamTypes$3","id3","dispatchType","dataAlignmentIndicator","timeStamp","TransportPacketStream","TransportParseStream","ElementaryStream","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","TimestampRolloverStream","MP2T_PACKET_LENGTH$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","trackId","pes","ptsDtsFlags","startPrefix","packetLength","parsePes","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","AdtsStream$1","m2ts_1","Stream$3","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","Stream$2","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","AacStream$1","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","isLikelyAacData","parseAdtsSize","lowThree","middle","parseType","parseSampleRate","parseAacTimestamp","percentEncode","aacUtils","setTimestamp","bytesLeft","tempLength","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","clock","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","audioTrack","caption","captionStreams","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","getEmsgID3","bin","parseType_1","toUnsigned$2","parseType$2","findBox_1","findBox$2","subresults","toUnsigned$1","getUint64$2","parseTfdt$2","parseSampleFlags","parseTrun$2","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd$2","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","findBox$1","parseTfdt$1","parseTrun$1","parseTfhd$1","window$2","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","captionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","uint8ToCString","curChar","retString","getUint64$1","isValidEmsgBox","emsg","hasScheme","scheme_id_uri","isValidV0Box","isDefined","presentation_time_delta","isValidV1Box","presentation_time","emsg$1","parseEmsgBox","boxData","event_duration","emsgBox","message_data","scaleTime","timeDelta","toUnsigned","toHexString","parseType$1","parseTfhd","parseTrun","parseTfdt","lowestTime","baseTime","scale","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","segmentData","parsedBox","parsedId3Frames","probe$2","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","StreamTypes","handleRollover","probe","SYNC_BYTE","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","trackIds","_ref27","_ref28","_ref29","id3Frames","emsgData","_ref30","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","transmuxedData","waitForEndedTimelineEvent","currentTransmux","_event$data$segment","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","_ref31","handleDone_","dequeue","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","_ref32","handleSegmentResponse","_ref34","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","_ref35","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","handleSegmentBytes","_ref36","bytesAsUint8Array","isLikelyFmp4MediaSegment","isFmp4","audioCodec","videoCodec","finishLoading","_ref37","_ref38","decrypt","_ref39","keyBytes","decryptionWorker","decryptionHandler","decrypted","encrypted","waitForCompletion","_ref41","didError","segmentFinish","_ref40","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","_ref43","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","_ref44","xhrOptions","abortFn","keyXhr","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","_ref33","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentXhr","loadendState","activeXhr","_ref42","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","_ref45","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","audioGroupId","audioType","codecsFromDefault","logFn","representationToString","safeGetComputedStyle","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","sortedPlaylistReps","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","resolutionBestRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","systemBandwidth","playlistController_","addMetadata","_ref47","inbandTextTracks","videoDuration","Cue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","finiteDuration","nextTime","dateRangeAttr","scte35Out","scte35In","dateRangeKeysToOmit","createMetadataTrackIfNotExists","inBandMetadataTrackDispatchType","removeCuesFromTrack","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","segmentInfoString","startOfSegment","_segmentInfo$playlist","_segmentInfo$playlist2","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","_ref50","timelineChangeController","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","segmentTooLong","_ref51","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","timingInfos","typeTimingInfo","mediaDuration","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","_videojs$EventTarget2","_super78","_this151","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","shouldForceTimestampOffsetAfterResync_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","getMediaInfo_","videoBuffered","audioBuffered","storedMap","storedKey","playlist_","couldBeginLoading_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","updateMediaSequenceMap","resetLoader","resyncLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","mapping","updatedBuffer","removeGopBuffer","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","buffered_","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","_Playlist$getMediaInf","nextSegment","hasIndependentSegments","lastSegmentLastPart","forceTimestampOffset","generateSegmentInfo_","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","_ref49","timestampOffsetForSegment","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","simpleSegment","earlyAbortWhenNeeded_","checkForAbort_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","timeType","timingInfoProperty","captionData","_this152","hasAppendedData_","captionTracks","captionTrack","trackName","_captionTracks$trackN","getTrackById","def","captionService","createCaptionsTrackIfNotExists","_ref46","captionArray","positionAlign","addCaptionData","handleCaptions_","handleId3_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","initSegmentForMap","segmentKey","firstVideoFrameTimeForData","useVideoTimingInfo","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","processMetadataQueue_","appendData_","changedTimestampOffset","_ref52","_ref53","_this153","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","_ref54","handleQuotaExceededError_","_ref55","segmentObj","concatSegments","appendBuffer","handleAppendError_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","getInitSegmentAndUpdateState_","_this154","trimBackBuffer_","updateTransmuxerAndRequestSegment_","_this155","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","handleAbort_","handleProgress_","handleTrackInfo_","handleTimingInfo_","handleSegmentTimingInfo_","segmentRequestFinished_","_ref56","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","handleTimeout_","saveBandwidthRelatedStats_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","_ref57","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","_ref58","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","endOfStream","segmentProcessingTime","segmentProcessingThroughput","Vhs$1","bufferTypes","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","mime","addSourceBuffer","removeSourceBuffer","changeType","pushQueue","_ref59","onUpdateend","SourceUpdater","_videojs$EventTarget3","_super79","_this156","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","hasCreatedSourceBuffers","hasInitializedAnyEme","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","_this157","_this158","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","_this159","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","NoVttJsError","_Error","_super80","_wrapNativeSuper","VTTSegmentLoader","_SegmentLoader","_super81","_this160","subtitlesTrack_","featuresNativeTextTracks_","loadVttJs","combinedByteLength","combinedSegment","_this161","timestampOffsetForTimeline","skipEmptySegments_","_this162","stopForError","requested","parseVTTCues_","updateTimeMapping_","timelines","uniqueCues","cueKey","removeDuplicateCuesFromTrack","decoder","decodeBytesToString","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","mappingObj","_this163","_segmentInfo$timestam","diff","handleRollover_","firstStart","lastStart","valueIn90khz","referenceIn90khz","findAdCue","mediaTime","adStartTime","adEndTime","syncPointStrategies","run","mediaSequenceMap","getMediaSequenceMap","currentMediaSequence","currentPartStart","timelineToDatetimeMappings","lastDistance","datetimeMapping","discontinuitySync","discontinuities","SyncController","_videojs$EventTarget4","_super82","_this164","mediaSequenceStorage_","currentBaseTime","_ref60","syncPoints","runStrategies_","_step3","_iterator3","syncPointInfo","strategy","selectedSegment","selectSyncPoint_","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","_ref61","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","_videojs$EventTarget5","_super83","_this165","pendingTimelineChanges_","lastTimelineChanges_","_ref62","_ref63","workerCode","aesTables","AES","tmp","xInv","x2","x4","tEnc","tDec","tables","encTable","decTable","sbox","sboxInv","th","precompute","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","_super84","_this166","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","init0","init1","init2","init3","wordIx","decipher","decrypted32","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","excludePlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","setupListeners","requestOptions","segmentLoaders","initialize","_settings$mediaTypes$","groups","variantLabel","isMainPlaylist","_settings$mediaTypes$2","useForcedSubtitles","_settings$mediaTypes$3","groupMatch","setupMediaGroups","_settings$segmentLoad3","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","_settings$segmentLoad","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","_settings$segmentLoad2","lastTrack","pc","selectPlaylist","fastQualityChange_","setAudio","_ref64","activeTrack_","onAudioTrackChanged","SteeringManifest","priority_","pathwayClones_","version_","ttl_","reloadUri_","ContentSteeringController","_videojs$EventTarget6","_super85","_this167","currentPathway","defaultPathway","availablePathways_","steeringManifest","proxyServerUrl_","manifestType_","ttlTimeout_","request_","currentPathwayClones","nextPathwayClones","excludedSteeringManifestURLs","xhr_","getBandwidth_","steeringTag","serverUri","steeringUri","startsWith","decodeDataUriManifest_","reloadUri","pathwayId","defaultServiceLocation","proxyServerURL","_this168","getRequestURI","errorInfo","retrySeconds","startTTLTimeout_","steeringManifestJson","assignSteeringProperties_","steeringUrl","steeringUrlObject","proxyServerUrlObject","encodeURI","setSteeringParams_","dataUri","urlObject","getPathway","networkThroughput","pathwayKey","throughputKey","steeringJson","_this169","ttl","TTL","pathwayClones","nextPathway","pathwaysByPriority","_step4","_iterator4","chooseNextPathway","_this170","proxyURI","setProxyServerUrl_","steeringURI","_this171","ttlMS","requestSteeringManifest","clearTTLTimeout_","newTag","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","PlaylistController","_videojs$EventTarget7","_super86","_this172","externVhs","useCueTags","enableLowInitialPlaylist","bufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","createMediaTypes","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","keyStatusMap_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","onLoad","contentSteeringController_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","newId","_this173","dashMediaPlaylists","_this174","abrTimer_","checkABR_","defaultPlaylists","defaultGroup","_this175","requestTimeout","triggerPresenceUsage_","setupFirstPlay","selectedMedia","attachContentSteeringListeners_","initContentSteeringController_","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","playlistToExclude","waitingForFastQualityPlaylistReceived_","runFastQualitySwitch_","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","_ref65","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","shouldSwitchToMedia","_this176","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","_this177","startPoint","mainMediaInfo","getExpiredTime","absolutePlaylistEnd","_ref66","_this178","_ref66$playlistToExcl","_ref66$error","pathwayAttribute_","reIncludeDelay","excludePathway","excludeThenChangePathway_","addAvailablePathway","reincluded","errorMessage","delayDuration","fnNames","_this179","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","setDuration","_this180","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","_this181","getPendingSegmentPlaylist","playlistCodecs","unsupportedAudio","unsupportedCodecs","supporter","switchMessages","newCodec","oldCodec","areMediaTypesKnown_","createSourceBuffers","excludeIncompatibleVariants_","_this182","ids","unsupported","_this183","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","_segment$cueOutCont$s","_segment$cueOutCont$s2","adOffset","adTotal","updateAdCues","newMax","_ref48","_i99","_Object$keys2","addDateRangeMetadata","_this184","_step5","_iterator5","assignTagProperties","clearAvailablePathways","_this185","didDASHTagChange","_step6","availablePathways","getAvailablePathways","newPathways","_iterator6","didPathwaysChange","resetContentSteeringController_","_this186","handlePathwayClones_","didEnablePlaylists","differentPathwayId","noExcludeUntil","changeSegmentPathway_","_this187","_step7","_iterator7","_step7$value","updateOrDeleteClone","_step8","_iterator8","_loop4","_step8$value","oldClone","equalPathwayClones_","addClonePathway","aParams","bParams","switchMediaForDASHContentSteering_","_this188","nonUsableKeyStatusCount","NON_USABLE","keyIdSet","getKeyIdSet","USABLE","hasUsableKeyStatus","nonUsableExclusion","isNonHD","excludedForNonUsableKey","formattedKeyIdString","uInt8Buffer","padStart","bufferToHexString","addKeyStatus_","excludeNonUsableThenChangePlaylist_","excludeNonUsablePlaylistsByKeyId_","Representation","vhsHandler","playlistID","changePlaylistFn","qualityChangeFunction","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","_this189","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","currentRange","livePoint","videoUnderflow_","skipTheGap_","allowedEnd","isLLHLS","_ref67","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","version$4","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","_this150","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","LOCAL_STORAGE_KEY","handleVhsMediaChange","waitForKeySessionCreation","_ref68","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","keySystemOptions","getAllPsshKeySystemsOptions","initializationFinishedPromises","keySessionCreatedPromises","setupEmeOptions","_ref69","sourceOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","emeKeySystems","getVhsLocalStorage","storedObject","addOnRequestHook","addOnResponseHook","removeOnRequestHook","removeOnResponseHook","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","onRequest","onResponse","offRequest","offResponse","VhsHandler","_Component","_super87","_this190","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","overrideNativeAudioTracks","overrideNativeVideoTracks","featuresNativeVideoTracks","_this191","useBandwidthFromLocalStorage","useNetworkInformationApi","option","_this192","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invThroughput","invBandwidth","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","appendsToLoadedData_","timeToLoadedData","timeToLoadedData_","currentTech","playerDimensions","currentDimensions","objectToStore","updateVhsLocalStorage","setupEme_","setupQualityLevels_","mediaSourceUrl_","_this193","audioPlaylistLoader","initializedEme","createKeySessions_","_this194","didSetupEmeOptions","updatePlaylistByKeyStatus","handleWaitingForKey_","_this195","qualityLevels_","addQualityLevel","handleVhsLoadedMetadata","_this196","VhsSourceHandler","setupXhrHooks_","simpleType","getOverrideNative","_options$vhs","defaultOverrideNative","_vhs$overrideNative","vttjs","WebVTT","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","restore","_objCreate","F","ParsingError","errorData","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","kv","parseCue","regionList","oInput","consumeTimeStamp","Errors","BadTimeStamp","skipWhitespace","region","vals","vals0","integer","lineAlign","snapToLines","center","consumeCueSettings","BadSignature","dflt","defaultKey","TEXTAREA_ELEMENT","TAG_NAME","u","ruby","rt","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","shouldAdd","annotation","rootDiv","tagStack","classes","cl","bgColor","colorName","propValue","strongRTLRanges","isStrongRTLChar","determineBidi","nodeStack","pushNodes","nextTextNode","StyleBox","CueStyleBox","styleOptions","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","textTrackList","mediaElement","computeLinePos","axis","maxPosition","initialAxis","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","unit","toMove","overlaps","getSimpleBoxPosition","convertCueToDOMTree","cuetext","overlay","paddedOverlay","margin","hasBeenReset","shouldCompute","reportOrThrowError","collectNextLine","parseHeader","parseTimestampMap","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseRegion","alreadyCollectedLine","hasSubstring","directionSetting","alignSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","setting","findDirectionSetting","SyntaxError","getCueAsHTML","scrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","findScrollSetting","arr2","arrayLikeToArray","ReferenceError","asyncGeneratorStep","gen","_next","_throw","Constructor","toPropertyKey","_defineProperties","protoProps","staticProps","unsupportedIterableToArray","allowArrayLike","_e","normalCompletion","didErr","_e2","isNativeReflectConstruct","possibleConstructorReturn","Derived","hasNativeReflectConstruct","NewTarget","construct","setPrototypeOf","subClass","superClass","_isNativeReflectConstruct","iter","ownKeys","getOwnPropertyDescriptors","_typeof","assertThisInitialized","asyncIterator","toStringTag","define","Generator","Context","makeInvokeMethod","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","_sent","dispatchException","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","isGeneratorFunction","awrap","rval","handle","finish","delegateYield","_setPrototypeOf","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","toPrimitive","minLen"],"sourceRoot":""}